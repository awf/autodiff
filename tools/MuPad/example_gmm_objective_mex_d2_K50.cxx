// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

#line 2 "au_autodiff_generate_template.cpp"
#include <math.h>

#include "au_mex.h"

// Autogenerated by au_ccode
// FROM: f
// au_autodiff_template.cpp - outline code for au_autodiff*
// awf@microsoft.com, Dec 13

void mlx_function(mlx_inputs& ins, mlx_outputs& outs)
{
    mlx_array<mlx_double> in(ins[0]);
    mlx_array<mlx_double> data(ins[1]);
    mlx_array<mlx_logical> jacobian(ins[2]);
    bool do_jacobian = jacobian[0];

    mlx_assert(in.cols == data.cols);
    mlx_assert(in.rows == 300);
    mlx_assert(data.rows == 5);

    mwSize out_rows = 1 + (do_jacobian ? 300 : 0);
    mwSize out_cols = 1 * in.cols;
    mlx_make_array<mlx_double> out(out_rows, out_cols);

    double const* in_ptr = in.data;
    double const* data_ptr = data.data;
    double* out_ptr = out.data;

    if (do_jacobian) {
        // const mwSize out_rows = 300 + 1;
        const mwSize out_step = (300 + 1) * 1;
        for(mwSize c_in = 0; c_in < in.cols; ++c_in,
                in_ptr += in.rows,
                data_ptr += data.rows,
                out_ptr += out_step) {
              /* inner loop do_jac=1 */
    double x1 = in_ptr[0];
    double x2 = in_ptr[1];
    double x3 = in_ptr[2];
    double x4 = in_ptr[3];
    double x5 = in_ptr[4];
    double x6 = in_ptr[5];
    double x7 = in_ptr[6];
    double x8 = in_ptr[7];
    double x9 = in_ptr[8];
    double x10 = in_ptr[9];
    double x11 = in_ptr[10];
    double x12 = in_ptr[11];
    double x13 = in_ptr[12];
    double x14 = in_ptr[13];
    double x15 = in_ptr[14];
    double x16 = in_ptr[15];
    double x17 = in_ptr[16];
    double x18 = in_ptr[17];
    double x19 = in_ptr[18];
    double x20 = in_ptr[19];
    double x21 = in_ptr[20];
    double x22 = in_ptr[21];
    double x23 = in_ptr[22];
    double x24 = in_ptr[23];
    double x25 = in_ptr[24];
    double x26 = in_ptr[25];
    double x27 = in_ptr[26];
    double x28 = in_ptr[27];
    double x29 = in_ptr[28];
    double x30 = in_ptr[29];
    double x31 = in_ptr[30];
    double x32 = in_ptr[31];
    double x33 = in_ptr[32];
    double x34 = in_ptr[33];
    double x35 = in_ptr[34];
    double x36 = in_ptr[35];
    double x37 = in_ptr[36];
    double x38 = in_ptr[37];
    double x39 = in_ptr[38];
    double x40 = in_ptr[39];
    double x41 = in_ptr[40];
    double x42 = in_ptr[41];
    double x43 = in_ptr[42];
    double x44 = in_ptr[43];
    double x45 = in_ptr[44];
    double x46 = in_ptr[45];
    double x47 = in_ptr[46];
    double x48 = in_ptr[47];
    double x49 = in_ptr[48];
    double x50 = in_ptr[49];
    double x51 = in_ptr[50];
    double x52 = in_ptr[51];
    double x53 = in_ptr[52];
    double x54 = in_ptr[53];
    double x55 = in_ptr[54];
    double x56 = in_ptr[55];
    double x57 = in_ptr[56];
    double x58 = in_ptr[57];
    double x59 = in_ptr[58];
    double x60 = in_ptr[59];
    double x61 = in_ptr[60];
    double x62 = in_ptr[61];
    double x63 = in_ptr[62];
    double x64 = in_ptr[63];
    double x65 = in_ptr[64];
    double x66 = in_ptr[65];
    double x67 = in_ptr[66];
    double x68 = in_ptr[67];
    double x69 = in_ptr[68];
    double x70 = in_ptr[69];
    double x71 = in_ptr[70];
    double x72 = in_ptr[71];
    double x73 = in_ptr[72];
    double x74 = in_ptr[73];
    double x75 = in_ptr[74];
    double x76 = in_ptr[75];
    double x77 = in_ptr[76];
    double x78 = in_ptr[77];
    double x79 = in_ptr[78];
    double x80 = in_ptr[79];
    double x81 = in_ptr[80];
    double x82 = in_ptr[81];
    double x83 = in_ptr[82];
    double x84 = in_ptr[83];
    double x85 = in_ptr[84];
    double x86 = in_ptr[85];
    double x87 = in_ptr[86];
    double x88 = in_ptr[87];
    double x89 = in_ptr[88];
    double x90 = in_ptr[89];
    double x91 = in_ptr[90];
    double x92 = in_ptr[91];
    double x93 = in_ptr[92];
    double x94 = in_ptr[93];
    double x95 = in_ptr[94];
    double x96 = in_ptr[95];
    double x97 = in_ptr[96];
    double x98 = in_ptr[97];
    double x99 = in_ptr[98];
    double x100 = in_ptr[99];
    double x101 = in_ptr[100];
    double x102 = in_ptr[101];
    double x103 = in_ptr[102];
    double x104 = in_ptr[103];
    double x105 = in_ptr[104];
    double x106 = in_ptr[105];
    double x107 = in_ptr[106];
    double x108 = in_ptr[107];
    double x109 = in_ptr[108];
    double x110 = in_ptr[109];
    double x111 = in_ptr[110];
    double x112 = in_ptr[111];
    double x113 = in_ptr[112];
    double x114 = in_ptr[113];
    double x115 = in_ptr[114];
    double x116 = in_ptr[115];
    double x117 = in_ptr[116];
    double x118 = in_ptr[117];
    double x119 = in_ptr[118];
    double x120 = in_ptr[119];
    double x121 = in_ptr[120];
    double x122 = in_ptr[121];
    double x123 = in_ptr[122];
    double x124 = in_ptr[123];
    double x125 = in_ptr[124];
    double x126 = in_ptr[125];
    double x127 = in_ptr[126];
    double x128 = in_ptr[127];
    double x129 = in_ptr[128];
    double x130 = in_ptr[129];
    double x131 = in_ptr[130];
    double x132 = in_ptr[131];
    double x133 = in_ptr[132];
    double x134 = in_ptr[133];
    double x135 = in_ptr[134];
    double x136 = in_ptr[135];
    double x137 = in_ptr[136];
    double x138 = in_ptr[137];
    double x139 = in_ptr[138];
    double x140 = in_ptr[139];
    double x141 = in_ptr[140];
    double x142 = in_ptr[141];
    double x143 = in_ptr[142];
    double x144 = in_ptr[143];
    double x145 = in_ptr[144];
    double x146 = in_ptr[145];
    double x147 = in_ptr[146];
    double x148 = in_ptr[147];
    double x149 = in_ptr[148];
    double x150 = in_ptr[149];
    double x151 = in_ptr[150];
    double x152 = in_ptr[151];
    double x153 = in_ptr[152];
    double x154 = in_ptr[153];
    double x155 = in_ptr[154];
    double x156 = in_ptr[155];
    double x157 = in_ptr[156];
    double x158 = in_ptr[157];
    double x159 = in_ptr[158];
    double x160 = in_ptr[159];
    double x161 = in_ptr[160];
    double x162 = in_ptr[161];
    double x163 = in_ptr[162];
    double x164 = in_ptr[163];
    double x165 = in_ptr[164];
    double x166 = in_ptr[165];
    double x167 = in_ptr[166];
    double x168 = in_ptr[167];
    double x169 = in_ptr[168];
    double x170 = in_ptr[169];
    double x171 = in_ptr[170];
    double x172 = in_ptr[171];
    double x173 = in_ptr[172];
    double x174 = in_ptr[173];
    double x175 = in_ptr[174];
    double x176 = in_ptr[175];
    double x177 = in_ptr[176];
    double x178 = in_ptr[177];
    double x179 = in_ptr[178];
    double x180 = in_ptr[179];
    double x181 = in_ptr[180];
    double x182 = in_ptr[181];
    double x183 = in_ptr[182];
    double x184 = in_ptr[183];
    double x185 = in_ptr[184];
    double x186 = in_ptr[185];
    double x187 = in_ptr[186];
    double x188 = in_ptr[187];
    double x189 = in_ptr[188];
    double x190 = in_ptr[189];
    double x191 = in_ptr[190];
    double x192 = in_ptr[191];
    double x193 = in_ptr[192];
    double x194 = in_ptr[193];
    double x195 = in_ptr[194];
    double x196 = in_ptr[195];
    double x197 = in_ptr[196];
    double x198 = in_ptr[197];
    double x199 = in_ptr[198];
    double x200 = in_ptr[199];
    double x201 = in_ptr[200];
    double x202 = in_ptr[201];
    double x203 = in_ptr[202];
    double x204 = in_ptr[203];
    double x205 = in_ptr[204];
    double x206 = in_ptr[205];
    double x207 = in_ptr[206];
    double x208 = in_ptr[207];
    double x209 = in_ptr[208];
    double x210 = in_ptr[209];
    double x211 = in_ptr[210];
    double x212 = in_ptr[211];
    double x213 = in_ptr[212];
    double x214 = in_ptr[213];
    double x215 = in_ptr[214];
    double x216 = in_ptr[215];
    double x217 = in_ptr[216];
    double x218 = in_ptr[217];
    double x219 = in_ptr[218];
    double x220 = in_ptr[219];
    double x221 = in_ptr[220];
    double x222 = in_ptr[221];
    double x223 = in_ptr[222];
    double x224 = in_ptr[223];
    double x225 = in_ptr[224];
    double x226 = in_ptr[225];
    double x227 = in_ptr[226];
    double x228 = in_ptr[227];
    double x229 = in_ptr[228];
    double x230 = in_ptr[229];
    double x231 = in_ptr[230];
    double x232 = in_ptr[231];
    double x233 = in_ptr[232];
    double x234 = in_ptr[233];
    double x235 = in_ptr[234];
    double x236 = in_ptr[235];
    double x237 = in_ptr[236];
    double x238 = in_ptr[237];
    double x239 = in_ptr[238];
    double x240 = in_ptr[239];
    double x241 = in_ptr[240];
    double x242 = in_ptr[241];
    double x243 = in_ptr[242];
    double x244 = in_ptr[243];
    double x245 = in_ptr[244];
    double x246 = in_ptr[245];
    double x247 = in_ptr[246];
    double x248 = in_ptr[247];
    double x249 = in_ptr[248];
    double x250 = in_ptr[249];
    double x251 = in_ptr[250];
    double x252 = in_ptr[251];
    double x253 = in_ptr[252];
    double x254 = in_ptr[253];
    double x255 = in_ptr[254];
    double x256 = in_ptr[255];
    double x257 = in_ptr[256];
    double x258 = in_ptr[257];
    double x259 = in_ptr[258];
    double x260 = in_ptr[259];
    double x261 = in_ptr[260];
    double x262 = in_ptr[261];
    double x263 = in_ptr[262];
    double x264 = in_ptr[263];
    double x265 = in_ptr[264];
    double x266 = in_ptr[265];
    double x267 = in_ptr[266];
    double x268 = in_ptr[267];
    double x269 = in_ptr[268];
    double x270 = in_ptr[269];
    double x271 = in_ptr[270];
    double x272 = in_ptr[271];
    double x273 = in_ptr[272];
    double x274 = in_ptr[273];
    double x275 = in_ptr[274];
    double x276 = in_ptr[275];
    double x277 = in_ptr[276];
    double x278 = in_ptr[277];
    double x279 = in_ptr[278];
    double x280 = in_ptr[279];
    double x281 = in_ptr[280];
    double x282 = in_ptr[281];
    double x283 = in_ptr[282];
    double x284 = in_ptr[283];
    double x285 = in_ptr[284];
    double x286 = in_ptr[285];
    double x287 = in_ptr[286];
    double x288 = in_ptr[287];
    double x289 = in_ptr[288];
    double x290 = in_ptr[289];
    double x291 = in_ptr[290];
    double x292 = in_ptr[291];
    double x293 = in_ptr[292];
    double x294 = in_ptr[293];
    double x295 = in_ptr[294];
    double x296 = in_ptr[295];
    double x297 = in_ptr[296];
    double x298 = in_ptr[297];
    double x299 = in_ptr[298];
    double x300 = in_ptr[299];
    double data1 = data_ptr[0];
    double data2 = data_ptr[1];
    double data3 = data_ptr[2];
    double data4 = data_ptr[3];
    double data5 = data_ptr[4];
    double t3 = data1-x51;
    double t202 = exp(x152);
    double t252 = t3*x153;
    double t253 = data2-x52;
    double t254 = t202*t253;
    double t2 = t252+t254;
    double t5 = data1-x53;
    double t203 = exp(x155);
    double t261 = t5*x156;
    double t262 = data2-x54;
    double t263 = t203*t262;
    double t4 = t261+t263;
    double t7 = data1-x55;
    double t204 = exp(x158);
    double t268 = t7*x159;
    double t269 = data2-x56;
    double t270 = t204*t269;
    double t6 = t268+t270;
    double t9 = data1-x57;
    double t205 = exp(x161);
    double t275 = t9*x162;
    double t276 = data2-x58;
    double t277 = t205*t276;
    double t8 = t275+t277;
    double t11 = data1-x59;
    double t206 = exp(x164);
    double t282 = t11*x165;
    double t283 = data2-x60;
    double t284 = t206*t283;
    double t10 = t282+t284;
    double t13 = data1-x61;
    double t207 = exp(x167);
    double t289 = t13*x168;
    double t290 = data2-x62;
    double t291 = t207*t290;
    double t12 = t289+t291;
    double t15 = data1-x63;
    double t208 = exp(x170);
    double t296 = t15*x171;
    double t297 = data2-x64;
    double t298 = t208*t297;
    double t14 = t296+t298;
    double t17 = data1-x65;
    double t209 = exp(x173);
    double t303 = t17*x174;
    double t304 = data2-x66;
    double t305 = t209*t304;
    double t16 = t303+t305;
    double t19 = data1-x67;
    double t210 = exp(x176);
    double t310 = t19*x177;
    double t311 = data2-x68;
    double t312 = t210*t311;
    double t18 = t310+t312;
    double t21 = data1-x69;
    double t211 = exp(x179);
    double t317 = t21*x180;
    double t318 = data2-x70;
    double t319 = t211*t318;
    double t20 = t317+t319;
    double t23 = data1-x71;
    double t212 = exp(x182);
    double t324 = t23*x183;
    double t325 = data2-x72;
    double t326 = t212*t325;
    double t22 = t324+t326;
    double t25 = data1-x73;
    double t213 = exp(x185);
    double t331 = t25*x186;
    double t332 = data2-x74;
    double t333 = t213*t332;
    double t24 = t331+t333;
    double t27 = data1-x75;
    double t214 = exp(x188);
    double t338 = t27*x189;
    double t339 = data2-x76;
    double t340 = t214*t339;
    double t26 = t338+t340;
    double t29 = data1-x77;
    double t215 = exp(x191);
    double t345 = t29*x192;
    double t346 = data2-x78;
    double t347 = t215*t346;
    double t28 = t345+t347;
    double t31 = data1-x79;
    double t216 = exp(x194);
    double t352 = t31*x195;
    double t353 = data2-x80;
    double t354 = t216*t353;
    double t30 = t352+t354;
    double t33 = data1-x81;
    double t217 = exp(x197);
    double t359 = t33*x198;
    double t360 = data2-x82;
    double t361 = t217*t360;
    double t32 = t359+t361;
    double t35 = data1-x83;
    double t218 = exp(x200);
    double t366 = t35*x201;
    double t367 = data2-x84;
    double t368 = t218*t367;
    double t34 = t366+t368;
    double t37 = data1-x85;
    double t219 = exp(x203);
    double t373 = t37*x204;
    double t374 = data2-x86;
    double t375 = t219*t374;
    double t36 = t373+t375;
    double t39 = data1-x87;
    double t220 = exp(x206);
    double t380 = t39*x207;
    double t381 = data2-x88;
    double t382 = t220*t381;
    double t38 = t380+t382;
    double t41 = data1-x89;
    double t221 = exp(x209);
    double t387 = t41*x210;
    double t388 = data2-x90;
    double t389 = t221*t388;
    double t40 = t387+t389;
    double t43 = data1-x91;
    double t222 = exp(x212);
    double t394 = t43*x213;
    double t395 = data2-x92;
    double t396 = t222*t395;
    double t42 = t394+t396;
    double t45 = data1-x93;
    double t223 = exp(x215);
    double t401 = t45*x216;
    double t402 = data2-x94;
    double t403 = t223*t402;
    double t44 = t401+t403;
    double t47 = data1-x95;
    double t224 = exp(x218);
    double t408 = t47*x219;
    double t409 = data2-x96;
    double t410 = t224*t409;
    double t46 = t408+t410;
    double t49 = data1-x97;
    double t225 = exp(x221);
    double t415 = t49*x222;
    double t416 = data2-x98;
    double t417 = t225*t416;
    double t48 = t415+t417;
    double t51 = data1-x99;
    double t226 = exp(x224);
    double t422 = t51*x225;
    double t423 = data2-x100;
    double t424 = t226*t423;
    double t50 = t422+t424;
    double t53 = data1-x101;
    double t227 = exp(x227);
    double t429 = t53*x228;
    double t430 = data2-x102;
    double t431 = t227*t430;
    double t52 = t429+t431;
    double t55 = data1-x103;
    double t228 = exp(x230);
    double t436 = t55*x231;
    double t437 = data2-x104;
    double t438 = t228*t437;
    double t54 = t436+t438;
    double t57 = data1-x105;
    double t229 = exp(x233);
    double t443 = t57*x234;
    double t444 = data2-x106;
    double t445 = t229*t444;
    double t56 = t443+t445;
    double t59 = data1-x107;
    double t230 = exp(x236);
    double t450 = t59*x237;
    double t451 = data2-x108;
    double t452 = t230*t451;
    double t58 = t450+t452;
    double t61 = data1-x109;
    double t231 = exp(x239);
    double t457 = t61*x240;
    double t458 = data2-x110;
    double t459 = t231*t458;
    double t60 = t457+t459;
    double t63 = data1-x111;
    double t232 = exp(x242);
    double t464 = t63*x243;
    double t465 = data2-x112;
    double t466 = t232*t465;
    double t62 = t464+t466;
    double t65 = data1-x113;
    double t233 = exp(x245);
    double t471 = t65*x246;
    double t472 = data2-x114;
    double t473 = t233*t472;
    double t64 = t471+t473;
    double t67 = data1-x115;
    double t234 = exp(x248);
    double t478 = t67*x249;
    double t479 = data2-x116;
    double t480 = t234*t479;
    double t66 = t478+t480;
    double t69 = data1-x117;
    double t235 = exp(x251);
    double t485 = t69*x252;
    double t486 = data2-x118;
    double t487 = t235*t486;
    double t68 = t485+t487;
    double t71 = data1-x119;
    double t236 = exp(x254);
    double t492 = t71*x255;
    double t493 = data2-x120;
    double t494 = t236*t493;
    double t70 = t492+t494;
    double t73 = data1-x121;
    double t237 = exp(x257);
    double t499 = t73*x258;
    double t500 = data2-x122;
    double t501 = t237*t500;
    double t72 = t499+t501;
    double t75 = data1-x123;
    double t238 = exp(x260);
    double t506 = t75*x261;
    double t507 = data2-x124;
    double t508 = t238*t507;
    double t74 = t506+t508;
    double t77 = data1-x125;
    double t239 = exp(x263);
    double t513 = t77*x264;
    double t514 = data2-x126;
    double t515 = t239*t514;
    double t76 = t513+t515;
    double t79 = data1-x127;
    double t240 = exp(x266);
    double t520 = t79*x267;
    double t521 = data2-x128;
    double t522 = t240*t521;
    double t78 = t520+t522;
    double t81 = data1-x129;
    double t241 = exp(x269);
    double t527 = t81*x270;
    double t528 = data2-x130;
    double t529 = t241*t528;
    double t80 = t527+t529;
    double t83 = data1-x131;
    double t242 = exp(x272);
    double t534 = t83*x273;
    double t535 = data2-x132;
    double t536 = t242*t535;
    double t82 = t534+t536;
    double t85 = data1-x133;
    double t243 = exp(x275);
    double t541 = t85*x276;
    double t542 = data2-x134;
    double t543 = t243*t542;
    double t84 = t541+t543;
    double t87 = data1-x135;
    double t244 = exp(x278);
    double t548 = t87*x279;
    double t549 = data2-x136;
    double t550 = t244*t549;
    double t86 = t548+t550;
    double t89 = data1-x137;
    double t245 = exp(x281);
    double t555 = t89*x282;
    double t556 = data2-x138;
    double t557 = t245*t556;
    double t88 = t555+t557;
    double t91 = data1-x139;
    double t246 = exp(x284);
    double t562 = t91*x285;
    double t563 = data2-x140;
    double t564 = t246*t563;
    double t90 = t562+t564;
    double t93 = data1-x141;
    double t247 = exp(x287);
    double t569 = t93*x288;
    double t570 = data2-x142;
    double t571 = t247*t570;
    double t92 = t569+t571;
    double t95 = data1-x143;
    double t248 = exp(x290);
    double t576 = t95*x291;
    double t577 = data2-x144;
    double t578 = t248*t577;
    double t94 = t576+t578;
    double t97 = data1-x145;
    double t249 = exp(x293);
    double t583 = t97*x294;
    double t584 = data2-x146;
    double t585 = t249*t584;
    double t96 = t583+t585;
    double t99 = data1-x147;
    double t250 = exp(x296);
    double t590 = t99*x297;
    double t591 = data2-x148;
    double t592 = t250*t591;
    double t98 = t590+t592;
    double t101 = data1-x149;
    double t251 = exp(x299);
    double t597 = t101*x300;
    double t598 = data2-x150;
    double t599 = t251*t598;
    double t100 = t597+t599;
    double t102 = x151*2.0;
    double t103 = exp(t102);
    double t104 = x154*2.0;
    double t105 = exp(t104);
    double t106 = x157*2.0;
    double t107 = exp(t106);
    double t108 = x160*2.0;
    double t109 = exp(t108);
    double t110 = x163*2.0;
    double t111 = exp(t110);
    double t112 = x166*2.0;
    double t113 = exp(t112);
    double t114 = x169*2.0;
    double t115 = exp(t114);
    double t116 = x172*2.0;
    double t117 = exp(t116);
    double t118 = x175*2.0;
    double t119 = exp(t118);
    double t120 = x178*2.0;
    double t121 = exp(t120);
    double t122 = x181*2.0;
    double t123 = exp(t122);
    double t124 = x184*2.0;
    double t125 = exp(t124);
    double t126 = x187*2.0;
    double t127 = exp(t126);
    double t128 = x190*2.0;
    double t129 = exp(t128);
    double t130 = x193*2.0;
    double t131 = exp(t130);
    double t132 = x196*2.0;
    double t133 = exp(t132);
    double t134 = x199*2.0;
    double t135 = exp(t134);
    double t136 = x202*2.0;
    double t137 = exp(t136);
    double t138 = x205*2.0;
    double t139 = exp(t138);
    double t140 = x208*2.0;
    double t141 = exp(t140);
    double t142 = x211*2.0;
    double t143 = exp(t142);
    double t144 = x214*2.0;
    double t145 = exp(t144);
    double t146 = x217*2.0;
    double t147 = exp(t146);
    double t148 = x220*2.0;
    double t149 = exp(t148);
    double t150 = x223*2.0;
    double t151 = exp(t150);
    double t152 = x226*2.0;
    double t153 = exp(t152);
    double t154 = x229*2.0;
    double t155 = exp(t154);
    double t156 = x232*2.0;
    double t157 = exp(t156);
    double t158 = x235*2.0;
    double t159 = exp(t158);
    double t160 = x238*2.0;
    double t161 = exp(t160);
    double t162 = x241*2.0;
    double t163 = exp(t162);
    double t164 = x244*2.0;
    double t165 = exp(t164);
    double t166 = x247*2.0;
    double t167 = exp(t166);
    double t168 = x250*2.0;
    double t169 = exp(t168);
    double t170 = x253*2.0;
    double t171 = exp(t170);
    double t172 = x256*2.0;
    double t173 = exp(t172);
    double t174 = x259*2.0;
    double t175 = exp(t174);
    double t176 = x262*2.0;
    double t177 = exp(t176);
    double t178 = x265*2.0;
    double t179 = exp(t178);
    double t180 = x268*2.0;
    double t181 = exp(t180);
    double t182 = x271*2.0;
    double t183 = exp(t182);
    double t184 = x274*2.0;
    double t185 = exp(t184);
    double t186 = x277*2.0;
    double t187 = exp(t186);
    double t188 = x280*2.0;
    double t189 = exp(t188);
    double t190 = x283*2.0;
    double t191 = exp(t190);
    double t192 = x286*2.0;
    double t193 = exp(t192);
    double t194 = x289*2.0;
    double t195 = exp(t194);
    double t196 = x292*2.0;
    double t197 = exp(t196);
    double t198 = x295*2.0;
    double t199 = exp(t198);
    double t200 = x298*2.0;
    double t201 = exp(t200);
    double t255 = t2*t2;
    double t256 = t3*t3;
    double t259 = t255*(1.0/2.0);
    double t260 = t103*t256*(1.0/2.0);
    double t257 = -data3-t259-t260+x1+x151+x152;
    double t258 = exp(t257);
    double t264 = t4*t4;
    double t265 = t5*t5;
    double t656 = t264*(1.0/2.0);
    double t657 = t105*t265*(1.0/2.0);
    double t266 = -data3-t656-t657+x2+x154+x155;
    double t267 = exp(t266);
    double t271 = t6*t6;
    double t272 = t7*t7;
    double t658 = t271*(1.0/2.0);
    double t659 = t107*t272*(1.0/2.0);
    double t273 = -data3-t658-t659+x3+x157+x158;
    double t274 = exp(t273);
    double t278 = t8*t8;
    double t279 = t9*t9;
    double t660 = t278*(1.0/2.0);
    double t661 = t109*t279*(1.0/2.0);
    double t280 = -data3-t660-t661+x4+x160+x161;
    double t281 = exp(t280);
    double t285 = t10*t10;
    double t286 = t11*t11;
    double t662 = t285*(1.0/2.0);
    double t663 = t111*t286*(1.0/2.0);
    double t287 = -data3-t662-t663+x5+x163+x164;
    double t288 = exp(t287);
    double t292 = t12*t12;
    double t293 = t13*t13;
    double t664 = t292*(1.0/2.0);
    double t665 = t113*t293*(1.0/2.0);
    double t294 = -data3-t664-t665+x6+x166+x167;
    double t295 = exp(t294);
    double t299 = t14*t14;
    double t300 = t15*t15;
    double t666 = t299*(1.0/2.0);
    double t667 = t115*t300*(1.0/2.0);
    double t301 = -data3-t666-t667+x7+x169+x170;
    double t302 = exp(t301);
    double t306 = t16*t16;
    double t307 = t17*t17;
    double t668 = t306*(1.0/2.0);
    double t669 = t117*t307*(1.0/2.0);
    double t308 = -data3-t668-t669+x8+x172+x173;
    double t309 = exp(t308);
    double t313 = t18*t18;
    double t314 = t19*t19;
    double t670 = t313*(1.0/2.0);
    double t671 = t119*t314*(1.0/2.0);
    double t315 = -data3-t670-t671+x9+x175+x176;
    double t316 = exp(t315);
    double t320 = t20*t20;
    double t321 = t21*t21;
    double t672 = t320*(1.0/2.0);
    double t673 = t121*t321*(1.0/2.0);
    double t322 = -data3-t672-t673+x10+x178+x179;
    double t323 = exp(t322);
    double t327 = t22*t22;
    double t328 = t23*t23;
    double t674 = t327*(1.0/2.0);
    double t675 = t123*t328*(1.0/2.0);
    double t329 = -data3-t674-t675+x11+x181+x182;
    double t330 = exp(t329);
    double t334 = t24*t24;
    double t335 = t25*t25;
    double t676 = t334*(1.0/2.0);
    double t677 = t125*t335*(1.0/2.0);
    double t336 = -data3-t676-t677+x12+x184+x185;
    double t337 = exp(t336);
    double t341 = t26*t26;
    double t342 = t27*t27;
    double t678 = t341*(1.0/2.0);
    double t679 = t127*t342*(1.0/2.0);
    double t343 = -data3-t678-t679+x13+x187+x188;
    double t344 = exp(t343);
    double t348 = t28*t28;
    double t349 = t29*t29;
    double t680 = t348*(1.0/2.0);
    double t681 = t129*t349*(1.0/2.0);
    double t350 = -data3-t680-t681+x14+x190+x191;
    double t351 = exp(t350);
    double t355 = t30*t30;
    double t356 = t31*t31;
    double t682 = t355*(1.0/2.0);
    double t683 = t131*t356*(1.0/2.0);
    double t357 = -data3-t682-t683+x15+x193+x194;
    double t358 = exp(t357);
    double t362 = t32*t32;
    double t363 = t33*t33;
    double t684 = t362*(1.0/2.0);
    double t685 = t133*t363*(1.0/2.0);
    double t364 = -data3-t684-t685+x16+x196+x197;
    double t365 = exp(t364);
    double t369 = t34*t34;
    double t370 = t35*t35;
    double t686 = t369*(1.0/2.0);
    double t687 = t135*t370*(1.0/2.0);
    double t371 = -data3-t686-t687+x17+x199+x200;
    double t372 = exp(t371);
    double t376 = t36*t36;
    double t377 = t37*t37;
    double t688 = t376*(1.0/2.0);
    double t689 = t137*t377*(1.0/2.0);
    double t378 = -data3-t688-t689+x18+x202+x203;
    double t379 = exp(t378);
    double t383 = t38*t38;
    double t384 = t39*t39;
    double t690 = t383*(1.0/2.0);
    double t691 = t139*t384*(1.0/2.0);
    double t385 = -data3-t690-t691+x19+x205+x206;
    double t386 = exp(t385);
    double t390 = t40*t40;
    double t391 = t41*t41;
    double t692 = t390*(1.0/2.0);
    double t693 = t141*t391*(1.0/2.0);
    double t392 = -data3-t692-t693+x20+x208+x209;
    double t393 = exp(t392);
    double t397 = t42*t42;
    double t398 = t43*t43;
    double t694 = t397*(1.0/2.0);
    double t695 = t143*t398*(1.0/2.0);
    double t399 = -data3-t694-t695+x21+x211+x212;
    double t400 = exp(t399);
    double t404 = t44*t44;
    double t405 = t45*t45;
    double t696 = t404*(1.0/2.0);
    double t697 = t145*t405*(1.0/2.0);
    double t406 = -data3-t696-t697+x22+x214+x215;
    double t407 = exp(t406);
    double t411 = t46*t46;
    double t412 = t47*t47;
    double t698 = t411*(1.0/2.0);
    double t699 = t147*t412*(1.0/2.0);
    double t413 = -data3-t698-t699+x23+x217+x218;
    double t414 = exp(t413);
    double t418 = t48*t48;
    double t419 = t49*t49;
    double t700 = t418*(1.0/2.0);
    double t701 = t149*t419*(1.0/2.0);
    double t420 = -data3-t700-t701+x24+x220+x221;
    double t421 = exp(t420);
    double t425 = t50*t50;
    double t426 = t51*t51;
    double t702 = t425*(1.0/2.0);
    double t703 = t151*t426*(1.0/2.0);
    double t427 = -data3-t702-t703+x25+x223+x224;
    double t428 = exp(t427);
    double t432 = t52*t52;
    double t433 = t53*t53;
    double t704 = t432*(1.0/2.0);
    double t705 = t153*t433*(1.0/2.0);
    double t434 = -data3-t704-t705+x26+x226+x227;
    double t435 = exp(t434);
    double t439 = t54*t54;
    double t440 = t55*t55;
    double t706 = t439*(1.0/2.0);
    double t707 = t155*t440*(1.0/2.0);
    double t441 = -data3-t706-t707+x27+x229+x230;
    double t442 = exp(t441);
    double t446 = t56*t56;
    double t447 = t57*t57;
    double t708 = t446*(1.0/2.0);
    double t709 = t157*t447*(1.0/2.0);
    double t448 = -data3-t708-t709+x28+x232+x233;
    double t449 = exp(t448);
    double t453 = t58*t58;
    double t454 = t59*t59;
    double t710 = t453*(1.0/2.0);
    double t711 = t159*t454*(1.0/2.0);
    double t455 = -data3-t710-t711+x29+x235+x236;
    double t456 = exp(t455);
    double t460 = t60*t60;
    double t461 = t61*t61;
    double t712 = t460*(1.0/2.0);
    double t713 = t161*t461*(1.0/2.0);
    double t462 = -data3-t712-t713+x30+x238+x239;
    double t463 = exp(t462);
    double t467 = t62*t62;
    double t468 = t63*t63;
    double t714 = t467*(1.0/2.0);
    double t715 = t163*t468*(1.0/2.0);
    double t469 = -data3-t714-t715+x31+x241+x242;
    double t470 = exp(t469);
    double t474 = t64*t64;
    double t475 = t65*t65;
    double t716 = t474*(1.0/2.0);
    double t717 = t165*t475*(1.0/2.0);
    double t476 = -data3-t716-t717+x32+x244+x245;
    double t477 = exp(t476);
    double t481 = t66*t66;
    double t482 = t67*t67;
    double t718 = t481*(1.0/2.0);
    double t719 = t167*t482*(1.0/2.0);
    double t483 = -data3-t718-t719+x33+x247+x248;
    double t484 = exp(t483);
    double t488 = t68*t68;
    double t489 = t69*t69;
    double t720 = t488*(1.0/2.0);
    double t721 = t169*t489*(1.0/2.0);
    double t490 = -data3-t720-t721+x34+x250+x251;
    double t491 = exp(t490);
    double t495 = t70*t70;
    double t496 = t71*t71;
    double t722 = t495*(1.0/2.0);
    double t723 = t171*t496*(1.0/2.0);
    double t497 = -data3-t722-t723+x35+x253+x254;
    double t498 = exp(t497);
    double t502 = t72*t72;
    double t503 = t73*t73;
    double t724 = t502*(1.0/2.0);
    double t725 = t173*t503*(1.0/2.0);
    double t504 = -data3-t724-t725+x36+x256+x257;
    double t505 = exp(t504);
    double t509 = t74*t74;
    double t510 = t75*t75;
    double t726 = t509*(1.0/2.0);
    double t727 = t175*t510*(1.0/2.0);
    double t511 = -data3-t726-t727+x37+x259+x260;
    double t512 = exp(t511);
    double t516 = t76*t76;
    double t517 = t77*t77;
    double t728 = t516*(1.0/2.0);
    double t729 = t177*t517*(1.0/2.0);
    double t518 = -data3-t728-t729+x38+x262+x263;
    double t519 = exp(t518);
    double t523 = t78*t78;
    double t524 = t79*t79;
    double t730 = t523*(1.0/2.0);
    double t731 = t179*t524*(1.0/2.0);
    double t525 = -data3-t730-t731+x39+x265+x266;
    double t526 = exp(t525);
    double t530 = t80*t80;
    double t531 = t81*t81;
    double t732 = t530*(1.0/2.0);
    double t733 = t181*t531*(1.0/2.0);
    double t532 = -data3-t732-t733+x40+x268+x269;
    double t533 = exp(t532);
    double t537 = t82*t82;
    double t538 = t83*t83;
    double t734 = t537*(1.0/2.0);
    double t735 = t183*t538*(1.0/2.0);
    double t539 = -data3-t734-t735+x41+x271+x272;
    double t540 = exp(t539);
    double t544 = t84*t84;
    double t545 = t85*t85;
    double t736 = t544*(1.0/2.0);
    double t737 = t185*t545*(1.0/2.0);
    double t546 = -data3-t736-t737+x42+x274+x275;
    double t547 = exp(t546);
    double t551 = t86*t86;
    double t552 = t87*t87;
    double t738 = t551*(1.0/2.0);
    double t739 = t187*t552*(1.0/2.0);
    double t553 = -data3-t738-t739+x43+x277+x278;
    double t554 = exp(t553);
    double t558 = t88*t88;
    double t559 = t89*t89;
    double t740 = t558*(1.0/2.0);
    double t741 = t189*t559*(1.0/2.0);
    double t560 = -data3-t740-t741+x44+x280+x281;
    double t561 = exp(t560);
    double t565 = t90*t90;
    double t566 = t91*t91;
    double t742 = t565*(1.0/2.0);
    double t743 = t191*t566*(1.0/2.0);
    double t567 = -data3-t742-t743+x45+x283+x284;
    double t568 = exp(t567);
    double t572 = t92*t92;
    double t573 = t93*t93;
    double t744 = t572*(1.0/2.0);
    double t745 = t193*t573*(1.0/2.0);
    double t574 = -data3-t744-t745+x46+x286+x287;
    double t575 = exp(t574);
    double t579 = t94*t94;
    double t580 = t95*t95;
    double t746 = t579*(1.0/2.0);
    double t747 = t195*t580*(1.0/2.0);
    double t581 = -data3-t746-t747+x47+x289+x290;
    double t582 = exp(t581);
    double t586 = t96*t96;
    double t587 = t97*t97;
    double t748 = t586*(1.0/2.0);
    double t749 = t197*t587*(1.0/2.0);
    double t588 = -data3-t748-t749+x48+x292+x293;
    double t589 = exp(t588);
    double t593 = t98*t98;
    double t594 = t99*t99;
    double t750 = t593*(1.0/2.0);
    double t751 = t199*t594*(1.0/2.0);
    double t595 = -data3-t750-t751+x49+x295+x296;
    double t596 = exp(t595);
    double t600 = t100*t100;
    double t601 = t101*t101;
    double t752 = t600*(1.0/2.0);
    double t753 = t201*t601*(1.0/2.0);
    double t602 = -data3-t752-t753+x50+x298+x299;
    double t603 = exp(t602);
    double t604 = t258+t267+t274+t281+t288+t295+t302+t309+t316+t323+t330+t337+t344+t351+t358+t365+t372+t379+t386+t393+t400+t407+t414+t421+t428+t435+t442+t449+t456+t463+t470+t477+t484+t491+t498+t505+t512+t519+t526+t533+t540+t547+t554+t561+t568+t575+t582+t589+t596+t603;
    double t605 = exp(x1);
    double t606 = exp(x2);
    double t607 = exp(x3);
    double t608 = exp(x4);
    double t609 = exp(x5);
    double t610 = exp(x6);
    double t611 = exp(x7);
    double t612 = exp(x8);
    double t613 = exp(x9);
    double t614 = exp(x10);
    double t615 = exp(x11);
    double t616 = exp(x12);
    double t617 = exp(x13);
    double t618 = exp(x14);
    double t619 = exp(x15);
    double t620 = exp(x16);
    double t621 = exp(x17);
    double t622 = exp(x18);
    double t623 = exp(x19);
    double t624 = exp(x20);
    double t625 = exp(x21);
    double t626 = exp(x22);
    double t627 = exp(x23);
    double t628 = exp(x24);
    double t629 = exp(x25);
    double t630 = exp(x26);
    double t631 = exp(x27);
    double t632 = exp(x28);
    double t633 = exp(x29);
    double t634 = exp(x30);
    double t635 = exp(x31);
    double t636 = exp(x32);
    double t637 = exp(x33);
    double t638 = exp(x34);
    double t639 = exp(x35);
    double t640 = exp(x36);
    double t641 = exp(x37);
    double t642 = exp(x38);
    double t643 = exp(x39);
    double t644 = exp(x40);
    double t645 = exp(x41);
    double t646 = exp(x42);
    double t647 = exp(x43);
    double t648 = exp(x44);
    double t649 = exp(x45);
    double t650 = exp(x46);
    double t651 = exp(x47);
    double t652 = exp(x48);
    double t653 = exp(x49);
    double t654 = exp(x50);
    double t655 = t605+t606+t607+t608+t609+t610+t611+t612+t613+t614+t615+t616+t617+t618+t619+t620+t621+t622+t623+t624+t625+t626+t627+t628+t629+t630+t631+t632+t633+t634+t635+t636+t637+t638+t639+t640+t641+t642+t643+t644+t645+t646+t647+t648+t649+t650+t651+t652+t653+t654;
    double t754 = 1.0/t604;
    double t755 = 1.0/t655;
    double t756 = data1*2.0;
    double t757 = exp(x151);
    double t758 = x152*2.0;
    double t759 = exp(t758);
    double t760 = exp(x154);
    double t761 = x155*2.0;
    double t762 = exp(t761);
    double t763 = exp(x157);
    double t764 = x158*2.0;
    double t765 = exp(t764);
    double t766 = exp(x160);
    double t767 = x161*2.0;
    double t768 = exp(t767);
    double t769 = exp(x163);
    double t770 = x164*2.0;
    double t771 = exp(t770);
    double t772 = exp(x166);
    double t773 = x167*2.0;
    double t774 = exp(t773);
    double t775 = exp(x169);
    double t776 = x170*2.0;
    double t777 = exp(t776);
    double t778 = exp(x172);
    double t779 = x173*2.0;
    double t780 = exp(t779);
    double t781 = exp(x175);
    double t782 = x176*2.0;
    double t783 = exp(t782);
    double t784 = exp(x178);
    double t785 = x179*2.0;
    double t786 = exp(t785);
    double t787 = exp(x181);
    double t788 = x182*2.0;
    double t789 = exp(t788);
    double t790 = exp(x184);
    double t791 = x185*2.0;
    double t792 = exp(t791);
    double t793 = exp(x187);
    double t794 = x188*2.0;
    double t795 = exp(t794);
    double t796 = exp(x190);
    double t797 = x191*2.0;
    double t798 = exp(t797);
    double t799 = exp(x193);
    double t800 = x194*2.0;
    double t801 = exp(t800);
    double t802 = exp(x196);
    double t803 = x197*2.0;
    double t804 = exp(t803);
    double t805 = exp(x199);
    double t806 = x200*2.0;
    double t807 = exp(t806);
    double t808 = exp(x202);
    double t809 = x203*2.0;
    double t810 = exp(t809);
    double t811 = exp(x205);
    double t812 = x206*2.0;
    double t813 = exp(t812);
    double t814 = exp(x208);
    double t815 = x209*2.0;
    double t816 = exp(t815);
    double t817 = exp(x211);
    double t818 = x212*2.0;
    double t819 = exp(t818);
    double t820 = exp(x214);
    double t821 = x215*2.0;
    double t822 = exp(t821);
    double t823 = exp(x217);
    double t824 = x218*2.0;
    double t825 = exp(t824);
    double t826 = exp(x220);
    double t827 = x221*2.0;
    double t828 = exp(t827);
    double t829 = exp(x223);
    double t830 = x224*2.0;
    double t831 = exp(t830);
    double t832 = exp(x226);
    double t833 = x227*2.0;
    double t834 = exp(t833);
    double t835 = exp(x229);
    double t836 = x230*2.0;
    double t837 = exp(t836);
    double t838 = exp(x232);
    double t839 = x233*2.0;
    double t840 = exp(t839);
    double t841 = exp(x235);
    double t842 = x236*2.0;
    double t843 = exp(t842);
    double t844 = exp(x238);
    double t845 = x239*2.0;
    double t846 = exp(t845);
    double t847 = exp(x241);
    double t848 = x242*2.0;
    double t849 = exp(t848);
    double t850 = exp(x244);
    double t851 = x245*2.0;
    double t852 = exp(t851);
    double t853 = exp(x247);
    double t854 = x248*2.0;
    double t855 = exp(t854);
    double t856 = exp(x250);
    double t857 = x251*2.0;
    double t858 = exp(t857);
    double t859 = exp(x253);
    double t860 = x254*2.0;
    double t861 = exp(t860);
    double t862 = exp(x256);
    double t863 = x257*2.0;
    double t864 = exp(t863);
    double t865 = exp(x259);
    double t866 = x260*2.0;
    double t867 = exp(t866);
    double t868 = exp(x262);
    double t869 = x263*2.0;
    double t870 = exp(t869);
    double t871 = exp(x265);
    double t872 = x266*2.0;
    double t873 = exp(t872);
    double t874 = exp(x268);
    double t875 = x269*2.0;
    double t876 = exp(t875);
    double t877 = exp(x271);
    double t878 = x272*2.0;
    double t879 = exp(t878);
    double t880 = exp(x274);
    double t881 = x275*2.0;
    double t882 = exp(t881);
    double t883 = exp(x277);
    double t884 = x278*2.0;
    double t885 = exp(t884);
    double t886 = exp(x280);
    double t887 = x281*2.0;
    double t888 = exp(t887);
    double t889 = exp(x283);
    double t890 = x284*2.0;
    double t891 = exp(t890);
    double t892 = exp(x286);
    double t893 = x287*2.0;
    double t894 = exp(t893);
    double t895 = exp(x289);
    double t896 = x290*2.0;
    double t897 = exp(t896);
    double t898 = exp(x292);
    double t899 = x293*2.0;
    double t900 = exp(t899);
    double t901 = exp(x295);
    double t902 = x296*2.0;
    double t903 = exp(t902);
    double t904 = exp(x298);
    double t905 = x299*2.0;
    double t906 = exp(t905);
  out_ptr[0] = data3+log(t604)-log(t655)-data5*(t202+t757)-data5*(t203+t760)-data5*(t204+t763)-data5*(t205+t766)-data5*(t206+t769)-data5*(t207+t772)-data5*(t208+t775)-data5*(t209+t778)-data5*(t210+t781)-data5*(t211+t784)-data5*(t212+t787)-data5*(t213+t790)-data5*(t214+t793)-data5*(t215+t796)-data5*(t216+t799)-data5*(t217+t802)-data5*(t218+t805)-data5*(t219+t808)-data5*(t220+t811)-data5*(t221+t814)-data5*(t222+t817)-data5*(t223+t820)-data5*(t224+t823)-data5*(t225+t826)-data5*(t226+t829)-data5*(t227+t832)-data5*(t228+t835)-data5*(t229+t838)-data5*(t230+t841)-data5*(t231+t844)-data5*(t232+t847)-data5*(t233+t850)-data5*(t234+t853)-data5*(t235+t856)-data5*(t236+t859)-data5*(t237+t862)-data5*(t238+t865)-data5*(t239+t868)-data5*(t240+t871)-data5*(t241+t874)-data5*(t242+t877)-data5*(t243+t880)-data5*(t244+t883)-data5*(t245+t886)-data5*(t246+t889)-data5*(t247+t892)-data5*(t248+t895)-data5*(t249+t898)-data5*(t250+t901)-data5*(t251+t904)+data4*(t103+t759+x153*x153)+data4*(t105+t762+x156*x156)+data4*(t107+t765+x159*x159)+data4*(t109+t768+x162*x162)+data4*(t111+t771+x165*x165)+data4*(t113+t774+x168*x168)+data4*(t115+t777+x171*x171)+data4*(t117+t780+x174*x174)+data4*(t119+t783+x177*x177)+data4*(t121+t786+x180*x180)+data4*(t123+t789+x183*x183)+data4*(t125+t792+x186*x186)+data4*(t127+t795+x189*x189)+data4*(t129+t798+x192*x192)+data4*(t131+t801+x195*x195)+data4*(t133+t804+x198*x198)+data4*(t135+t807+x201*x201)+data4*(t137+t810+x204*x204)+data4*(t139+t813+x207*x207)+data4*(t141+t816+x210*x210)+data4*(t143+t819+x213*x213)+data4*(t145+t822+x216*x216)+data4*(t147+t825+x219*x219)+data4*(t149+t828+x222*x222)+data4*(t151+t831+x225*x225)+data4*(t153+t834+x228*x228)+data4*(t155+t837+x231*x231)+data4*(t157+t840+x234*x234)+data4*(t159+t843+x237*x237)+data4*(t161+t846+x240*x240)+data4*(t163+t849+x243*x243)+data4*(t165+t852+x246*x246)+data4*(t167+t855+x249*x249)+data4*(t169+t858+x252*x252)+data4*(t171+t861+x255*x255)+data4*(t173+t864+x258*x258)+data4*(t175+t867+x261*x261)+data4*(t177+t870+x264*x264)+data4*(t179+t873+x267*x267)+data4*(t181+t876+x270*x270)+data4*(t183+t879+x273*x273)+data4*(t185+t882+x276*x276)+data4*(t187+t885+x279*x279)+data4*(t189+t888+x282*x282)+data4*(t191+t891+x285*x285)+data4*(t193+t894+x288*x288)+data4*(t195+t897+x291*x291)+data4*(t197+t900+x294*x294)+data4*(t199+t903+x297*x297)+data4*(t201+t906+x300*x300);
  out_ptr[1] = t258*t754-t605*t755;
  out_ptr[2] = t267*t754-t606*t755;
  out_ptr[3] = t274*t754-t607*t755;
  out_ptr[4] = t281*t754-t608*t755;
  out_ptr[5] = t288*t754-t609*t755;
  out_ptr[6] = t295*t754-t610*t755;
  out_ptr[7] = t302*t754-t611*t755;
  out_ptr[8] = t309*t754-t612*t755;
  out_ptr[9] = t316*t754-t613*t755;
  out_ptr[10] = t323*t754-t614*t755;
  out_ptr[11] = t330*t754-t615*t755;
  out_ptr[12] = t337*t754-t616*t755;
  out_ptr[13] = t344*t754-t617*t755;
  out_ptr[14] = t351*t754-t618*t755;
  out_ptr[15] = t358*t754-t619*t755;
  out_ptr[16] = t365*t754-t620*t755;
  out_ptr[17] = t372*t754-t621*t755;
  out_ptr[18] = t379*t754-t622*t755;
  out_ptr[19] = t386*t754-t623*t755;
  out_ptr[20] = t393*t754-t624*t755;
  out_ptr[21] = t400*t754-t625*t755;
  out_ptr[22] = t407*t754-t626*t755;
  out_ptr[23] = t414*t754-t627*t755;
  out_ptr[24] = t421*t754-t628*t755;
  out_ptr[25] = t428*t754-t629*t755;
  out_ptr[26] = t435*t754-t630*t755;
  out_ptr[27] = t442*t754-t631*t755;
  out_ptr[28] = t449*t754-t632*t755;
  out_ptr[29] = t456*t754-t633*t755;
  out_ptr[30] = t463*t754-t634*t755;
  out_ptr[31] = t470*t754-t635*t755;
  out_ptr[32] = t477*t754-t636*t755;
  out_ptr[33] = t484*t754-t637*t755;
  out_ptr[34] = t491*t754-t638*t755;
  out_ptr[35] = t498*t754-t639*t755;
  out_ptr[36] = t505*t754-t640*t755;
  out_ptr[37] = t512*t754-t641*t755;
  out_ptr[38] = t519*t754-t642*t755;
  out_ptr[39] = t526*t754-t643*t755;
  out_ptr[40] = t533*t754-t644*t755;
  out_ptr[41] = t540*t754-t645*t755;
  out_ptr[42] = t547*t754-t646*t755;
  out_ptr[43] = t554*t754-t647*t755;
  out_ptr[44] = t561*t754-t648*t755;
  out_ptr[45] = t568*t754-t649*t755;
  out_ptr[46] = t575*t754-t650*t755;
  out_ptr[47] = t582*t754-t651*t755;
  out_ptr[48] = t589*t754-t652*t755;
  out_ptr[49] = t596*t754-t653*t755;
  out_ptr[50] = t603*t754-t654*t755;
  out_ptr[51] = t258*t754*(t2*x153+t103*(t756-x51*2.0)*(1.0/2.0));
  out_ptr[52] = t2*t202*t258*t754;
  out_ptr[53] = t267*t754*(t4*x156+t105*(t756-x53*2.0)*(1.0/2.0));
  out_ptr[54] = t4*t203*t267*t754;
  out_ptr[55] = t274*t754*(t6*x159+t107*(t756-x55*2.0)*(1.0/2.0));
  out_ptr[56] = t6*t204*t274*t754;
  out_ptr[57] = t281*t754*(t8*x162+t109*(t756-x57*2.0)*(1.0/2.0));
  out_ptr[58] = t8*t205*t281*t754;
  out_ptr[59] = t288*t754*(t10*x165+t111*(t756-x59*2.0)*(1.0/2.0));
  out_ptr[60] = t10*t206*t288*t754;
  out_ptr[61] = t295*t754*(t12*x168+t113*(t756-x61*2.0)*(1.0/2.0));
  out_ptr[62] = t12*t207*t295*t754;
  out_ptr[63] = t302*t754*(t14*x171+t115*(t756-x63*2.0)*(1.0/2.0));
  out_ptr[64] = t14*t208*t302*t754;
  out_ptr[65] = t309*t754*(t16*x174+t117*(t756-x65*2.0)*(1.0/2.0));
  out_ptr[66] = t16*t209*t309*t754;
  out_ptr[67] = t316*t754*(t18*x177+t119*(t756-x67*2.0)*(1.0/2.0));
  out_ptr[68] = t18*t210*t316*t754;
  out_ptr[69] = t323*t754*(t20*x180+t121*(t756-x69*2.0)*(1.0/2.0));
  out_ptr[70] = t20*t211*t323*t754;
  out_ptr[71] = t330*t754*(t22*x183+t123*(t756-x71*2.0)*(1.0/2.0));
  out_ptr[72] = t22*t212*t330*t754;
  out_ptr[73] = t337*t754*(t24*x186+t125*(t756-x73*2.0)*(1.0/2.0));
  out_ptr[74] = t24*t213*t337*t754;
  out_ptr[75] = t344*t754*(t26*x189+t127*(t756-x75*2.0)*(1.0/2.0));
  out_ptr[76] = t26*t214*t344*t754;
  out_ptr[77] = t351*t754*(t28*x192+t129*(t756-x77*2.0)*(1.0/2.0));
  out_ptr[78] = t28*t215*t351*t754;
  out_ptr[79] = t358*t754*(t30*x195+t131*(t756-x79*2.0)*(1.0/2.0));
  out_ptr[80] = t30*t216*t358*t754;
  out_ptr[81] = t365*t754*(t32*x198+t133*(t756-x81*2.0)*(1.0/2.0));
  out_ptr[82] = t32*t217*t365*t754;
  out_ptr[83] = t372*t754*(t34*x201+t135*(t756-x83*2.0)*(1.0/2.0));
  out_ptr[84] = t34*t218*t372*t754;
  out_ptr[85] = t379*t754*(t36*x204+t137*(t756-x85*2.0)*(1.0/2.0));
  out_ptr[86] = t36*t219*t379*t754;
  out_ptr[87] = t386*t754*(t38*x207+t139*(t756-x87*2.0)*(1.0/2.0));
  out_ptr[88] = t38*t220*t386*t754;
  out_ptr[89] = t393*t754*(t40*x210+t141*(t756-x89*2.0)*(1.0/2.0));
  out_ptr[90] = t40*t221*t393*t754;
  out_ptr[91] = t400*t754*(t42*x213+t143*(t756-x91*2.0)*(1.0/2.0));
  out_ptr[92] = t42*t222*t400*t754;
  out_ptr[93] = t407*t754*(t44*x216+t145*(t756-x93*2.0)*(1.0/2.0));
  out_ptr[94] = t44*t223*t407*t754;
  out_ptr[95] = t414*t754*(t46*x219+t147*(t756-x95*2.0)*(1.0/2.0));
  out_ptr[96] = t46*t224*t414*t754;
  out_ptr[97] = t421*t754*(t48*x222+t149*(t756-x97*2.0)*(1.0/2.0));
  out_ptr[98] = t48*t225*t421*t754;
  out_ptr[99] = t428*t754*(t50*x225+t151*(t756-x99*2.0)*(1.0/2.0));
  out_ptr[100] = t50*t226*t428*t754;
  out_ptr[101] = t435*t754*(t52*x228+t153*(t756-x101*2.0)*(1.0/2.0));
  out_ptr[102] = t52*t227*t435*t754;
  out_ptr[103] = t442*t754*(t54*x231+t155*(t756-x103*2.0)*(1.0/2.0));
  out_ptr[104] = t54*t228*t442*t754;
  out_ptr[105] = t449*t754*(t56*x234+t157*(t756-x105*2.0)*(1.0/2.0));
  out_ptr[106] = t56*t229*t449*t754;
  out_ptr[107] = t456*t754*(t58*x237+t159*(t756-x107*2.0)*(1.0/2.0));
  out_ptr[108] = t58*t230*t456*t754;
  out_ptr[109] = t463*t754*(t60*x240+t161*(t756-x109*2.0)*(1.0/2.0));
  out_ptr[110] = t60*t231*t463*t754;
  out_ptr[111] = t470*t754*(t62*x243+t163*(t756-x111*2.0)*(1.0/2.0));
  out_ptr[112] = t62*t232*t470*t754;
  out_ptr[113] = t477*t754*(t64*x246+t165*(t756-x113*2.0)*(1.0/2.0));
  out_ptr[114] = t64*t233*t477*t754;
  out_ptr[115] = t484*t754*(t66*x249+t167*(t756-x115*2.0)*(1.0/2.0));
  out_ptr[116] = t66*t234*t484*t754;
  out_ptr[117] = t491*t754*(t68*x252+t169*(t756-x117*2.0)*(1.0/2.0));
  out_ptr[118] = t68*t235*t491*t754;
  out_ptr[119] = t498*t754*(t70*x255+t171*(t756-x119*2.0)*(1.0/2.0));
  out_ptr[120] = t70*t236*t498*t754;
  out_ptr[121] = t505*t754*(t72*x258+t173*(t756-x121*2.0)*(1.0/2.0));
  out_ptr[122] = t72*t237*t505*t754;
  out_ptr[123] = t512*t754*(t74*x261+t175*(t756-x123*2.0)*(1.0/2.0));
  out_ptr[124] = t74*t238*t512*t754;
  out_ptr[125] = t519*t754*(t76*x264+t177*(t756-x125*2.0)*(1.0/2.0));
  out_ptr[126] = t76*t239*t519*t754;
  out_ptr[127] = t526*t754*(t78*x267+t179*(t756-x127*2.0)*(1.0/2.0));
  out_ptr[128] = t78*t240*t526*t754;
  out_ptr[129] = t533*t754*(t80*x270+t181*(t756-x129*2.0)*(1.0/2.0));
  out_ptr[130] = t80*t241*t533*t754;
  out_ptr[131] = t540*t754*(t82*x273+t183*(t756-x131*2.0)*(1.0/2.0));
  out_ptr[132] = t82*t242*t540*t754;
  out_ptr[133] = t547*t754*(t84*x276+t185*(t756-x133*2.0)*(1.0/2.0));
  out_ptr[134] = t84*t243*t547*t754;
  out_ptr[135] = t554*t754*(t86*x279+t187*(t756-x135*2.0)*(1.0/2.0));
  out_ptr[136] = t86*t244*t554*t754;
  out_ptr[137] = t561*t754*(t88*x282+t189*(t756-x137*2.0)*(1.0/2.0));
  out_ptr[138] = t88*t245*t561*t754;
  out_ptr[139] = t568*t754*(t90*x285+t191*(t756-x139*2.0)*(1.0/2.0));
  out_ptr[140] = t90*t246*t568*t754;
  out_ptr[141] = t575*t754*(t92*x288+t193*(t756-x141*2.0)*(1.0/2.0));
  out_ptr[142] = t92*t247*t575*t754;
  out_ptr[143] = t582*t754*(t94*x291+t195*(t756-x143*2.0)*(1.0/2.0));
  out_ptr[144] = t94*t248*t582*t754;
  out_ptr[145] = t589*t754*(t96*x294+t197*(t756-x145*2.0)*(1.0/2.0));
  out_ptr[146] = t96*t249*t589*t754;
  out_ptr[147] = t596*t754*(t98*x297+t199*(t756-x147*2.0)*(1.0/2.0));
  out_ptr[148] = t98*t250*t596*t754;
  out_ptr[149] = t603*t754*(t100*x300+t201*(t756-x149*2.0)*(1.0/2.0));
  out_ptr[150] = t100*t251*t603*t754;
  out_ptr[151] = data4*t103*2.0-data5*t757-t258*t754*(t103*t256-1.0);
  out_ptr[152] = -data5*t202+data4*t759*2.0-t258*t754*(t2*t202*t253-1.0);
  out_ptr[153] = data4*x153*2.0-t2*t3*t258*t754;
  out_ptr[154] = data4*t105*2.0-data5*t760-t267*t754*(t105*t265-1.0);
  out_ptr[155] = -data5*t203+data4*t762*2.0-t267*t754*(t4*t203*t262-1.0);
  out_ptr[156] = data4*x156*2.0-t4*t5*t267*t754;
  out_ptr[157] = data4*t107*2.0-data5*t763-t274*t754*(t107*t272-1.0);
  out_ptr[158] = -data5*t204+data4*t765*2.0-t274*t754*(t6*t204*t269-1.0);
  out_ptr[159] = data4*x159*2.0-t6*t7*t274*t754;
  out_ptr[160] = data4*t109*2.0-data5*t766-t281*t754*(t109*t279-1.0);
  out_ptr[161] = -data5*t205+data4*t768*2.0-t281*t754*(t8*t205*t276-1.0);
  out_ptr[162] = data4*x162*2.0-t8*t9*t281*t754;
  out_ptr[163] = data4*t111*2.0-data5*t769-t288*t754*(t111*t286-1.0);
  out_ptr[164] = -data5*t206+data4*t771*2.0-t288*t754*(t10*t206*t283-1.0);
  out_ptr[165] = data4*x165*2.0-t10*t11*t288*t754;
  out_ptr[166] = data4*t113*2.0-data5*t772-t295*t754*(t113*t293-1.0);
  out_ptr[167] = -data5*t207+data4*t774*2.0-t295*t754*(t12*t207*t290-1.0);
  out_ptr[168] = data4*x168*2.0-t12*t13*t295*t754;
  out_ptr[169] = data4*t115*2.0-data5*t775-t302*t754*(t115*t300-1.0);
  out_ptr[170] = -data5*t208+data4*t777*2.0-t302*t754*(t14*t208*t297-1.0);
  out_ptr[171] = data4*x171*2.0-t14*t15*t302*t754;
  out_ptr[172] = data4*t117*2.0-data5*t778-t309*t754*(t117*t307-1.0);
  out_ptr[173] = -data5*t209+data4*t780*2.0-t309*t754*(t16*t209*t304-1.0);
  out_ptr[174] = data4*x174*2.0-t16*t17*t309*t754;
  out_ptr[175] = data4*t119*2.0-data5*t781-t316*t754*(t119*t314-1.0);
  out_ptr[176] = -data5*t210+data4*t783*2.0-t316*t754*(t18*t210*t311-1.0);
  out_ptr[177] = data4*x177*2.0-t18*t19*t316*t754;
  out_ptr[178] = data4*t121*2.0-data5*t784-t323*t754*(t121*t321-1.0);
  out_ptr[179] = -data5*t211+data4*t786*2.0-t323*t754*(t20*t211*t318-1.0);
  out_ptr[180] = data4*x180*2.0-t20*t21*t323*t754;
  out_ptr[181] = data4*t123*2.0-data5*t787-t330*t754*(t123*t328-1.0);
  out_ptr[182] = -data5*t212+data4*t789*2.0-t330*t754*(t22*t212*t325-1.0);
  out_ptr[183] = data4*x183*2.0-t22*t23*t330*t754;
  out_ptr[184] = data4*t125*2.0-data5*t790-t337*t754*(t125*t335-1.0);
  out_ptr[185] = -data5*t213+data4*t792*2.0-t337*t754*(t24*t213*t332-1.0);
  out_ptr[186] = data4*x186*2.0-t24*t25*t337*t754;
  out_ptr[187] = data4*t127*2.0-data5*t793-t344*t754*(t127*t342-1.0);
  out_ptr[188] = -data5*t214+data4*t795*2.0-t344*t754*(t26*t214*t339-1.0);
  out_ptr[189] = data4*x189*2.0-t26*t27*t344*t754;
  out_ptr[190] = data4*t129*2.0-data5*t796-t351*t754*(t129*t349-1.0);
  out_ptr[191] = -data5*t215+data4*t798*2.0-t351*t754*(t28*t215*t346-1.0);
  out_ptr[192] = data4*x192*2.0-t28*t29*t351*t754;
  out_ptr[193] = data4*t131*2.0-data5*t799-t358*t754*(t131*t356-1.0);
  out_ptr[194] = -data5*t216+data4*t801*2.0-t358*t754*(t30*t216*t353-1.0);
  out_ptr[195] = data4*x195*2.0-t30*t31*t358*t754;
  out_ptr[196] = data4*t133*2.0-data5*t802-t365*t754*(t133*t363-1.0);
  out_ptr[197] = -data5*t217+data4*t804*2.0-t365*t754*(t32*t217*t360-1.0);
  out_ptr[198] = data4*x198*2.0-t32*t33*t365*t754;
  out_ptr[199] = data4*t135*2.0-data5*t805-t372*t754*(t135*t370-1.0);
  out_ptr[200] = -data5*t218+data4*t807*2.0-t372*t754*(t34*t218*t367-1.0);
  out_ptr[201] = data4*x201*2.0-t34*t35*t372*t754;
  out_ptr[202] = data4*t137*2.0-data5*t808-t379*t754*(t137*t377-1.0);
  out_ptr[203] = -data5*t219+data4*t810*2.0-t379*t754*(t36*t219*t374-1.0);
  out_ptr[204] = data4*x204*2.0-t36*t37*t379*t754;
  out_ptr[205] = data4*t139*2.0-data5*t811-t386*t754*(t139*t384-1.0);
  out_ptr[206] = -data5*t220+data4*t813*2.0-t386*t754*(t38*t220*t381-1.0);
  out_ptr[207] = data4*x207*2.0-t38*t39*t386*t754;
  out_ptr[208] = data4*t141*2.0-data5*t814-t393*t754*(t141*t391-1.0);
  out_ptr[209] = -data5*t221+data4*t816*2.0-t393*t754*(t40*t221*t388-1.0);
  out_ptr[210] = data4*x210*2.0-t40*t41*t393*t754;
  out_ptr[211] = data4*t143*2.0-data5*t817-t400*t754*(t143*t398-1.0);
  out_ptr[212] = -data5*t222+data4*t819*2.0-t400*t754*(t42*t222*t395-1.0);
  out_ptr[213] = data4*x213*2.0-t42*t43*t400*t754;
  out_ptr[214] = data4*t145*2.0-data5*t820-t407*t754*(t145*t405-1.0);
  out_ptr[215] = -data5*t223+data4*t822*2.0-t407*t754*(t44*t223*t402-1.0);
  out_ptr[216] = data4*x216*2.0-t44*t45*t407*t754;
  out_ptr[217] = data4*t147*2.0-data5*t823-t414*t754*(t147*t412-1.0);
  out_ptr[218] = -data5*t224+data4*t825*2.0-t414*t754*(t46*t224*t409-1.0);
  out_ptr[219] = data4*x219*2.0-t46*t47*t414*t754;
  out_ptr[220] = data4*t149*2.0-data5*t826-t421*t754*(t149*t419-1.0);
  out_ptr[221] = -data5*t225+data4*t828*2.0-t421*t754*(t48*t225*t416-1.0);
  out_ptr[222] = data4*x222*2.0-t48*t49*t421*t754;
  out_ptr[223] = data4*t151*2.0-data5*t829-t428*t754*(t151*t426-1.0);
  out_ptr[224] = -data5*t226+data4*t831*2.0-t428*t754*(t50*t226*t423-1.0);
  out_ptr[225] = data4*x225*2.0-t50*t51*t428*t754;
  out_ptr[226] = data4*t153*2.0-data5*t832-t435*t754*(t153*t433-1.0);
  out_ptr[227] = -data5*t227+data4*t834*2.0-t435*t754*(t52*t227*t430-1.0);
  out_ptr[228] = data4*x228*2.0-t52*t53*t435*t754;
  out_ptr[229] = data4*t155*2.0-data5*t835-t442*t754*(t155*t440-1.0);
  out_ptr[230] = -data5*t228+data4*t837*2.0-t442*t754*(t54*t228*t437-1.0);
  out_ptr[231] = data4*x231*2.0-t54*t55*t442*t754;
  out_ptr[232] = data4*t157*2.0-data5*t838-t449*t754*(t157*t447-1.0);
  out_ptr[233] = -data5*t229+data4*t840*2.0-t449*t754*(t56*t229*t444-1.0);
  out_ptr[234] = data4*x234*2.0-t56*t57*t449*t754;
  out_ptr[235] = data4*t159*2.0-data5*t841-t456*t754*(t159*t454-1.0);
  out_ptr[236] = -data5*t230+data4*t843*2.0-t456*t754*(t58*t230*t451-1.0);
  out_ptr[237] = data4*x237*2.0-t58*t59*t456*t754;
  out_ptr[238] = data4*t161*2.0-data5*t844-t463*t754*(t161*t461-1.0);
  out_ptr[239] = -data5*t231+data4*t846*2.0-t463*t754*(t60*t231*t458-1.0);
  out_ptr[240] = data4*x240*2.0-t60*t61*t463*t754;
  out_ptr[241] = data4*t163*2.0-data5*t847-t470*t754*(t163*t468-1.0);
  out_ptr[242] = -data5*t232+data4*t849*2.0-t470*t754*(t62*t232*t465-1.0);
  out_ptr[243] = data4*x243*2.0-t62*t63*t470*t754;
  out_ptr[244] = data4*t165*2.0-data5*t850-t477*t754*(t165*t475-1.0);
  out_ptr[245] = -data5*t233+data4*t852*2.0-t477*t754*(t64*t233*t472-1.0);
  out_ptr[246] = data4*x246*2.0-t64*t65*t477*t754;
  out_ptr[247] = data4*t167*2.0-data5*t853-t484*t754*(t167*t482-1.0);
  out_ptr[248] = -data5*t234+data4*t855*2.0-t484*t754*(t66*t234*t479-1.0);
  out_ptr[249] = data4*x249*2.0-t66*t67*t484*t754;
  out_ptr[250] = data4*t169*2.0-data5*t856-t491*t754*(t169*t489-1.0);
  out_ptr[251] = -data5*t235+data4*t858*2.0-t491*t754*(t68*t235*t486-1.0);
  out_ptr[252] = data4*x252*2.0-t68*t69*t491*t754;
  out_ptr[253] = data4*t171*2.0-data5*t859-t498*t754*(t171*t496-1.0);
  out_ptr[254] = -data5*t236+data4*t861*2.0-t498*t754*(t70*t236*t493-1.0);
  out_ptr[255] = data4*x255*2.0-t70*t71*t498*t754;
  out_ptr[256] = data4*t173*2.0-data5*t862-t505*t754*(t173*t503-1.0);
  out_ptr[257] = -data5*t237+data4*t864*2.0-t505*t754*(t72*t237*t500-1.0);
  out_ptr[258] = data4*x258*2.0-t72*t73*t505*t754;
  out_ptr[259] = data4*t175*2.0-data5*t865-t512*t754*(t175*t510-1.0);
  out_ptr[260] = -data5*t238+data4*t867*2.0-t512*t754*(t74*t238*t507-1.0);
  out_ptr[261] = data4*x261*2.0-t74*t75*t512*t754;
  out_ptr[262] = data4*t177*2.0-data5*t868-t519*t754*(t177*t517-1.0);
  out_ptr[263] = -data5*t239+data4*t870*2.0-t519*t754*(t76*t239*t514-1.0);
  out_ptr[264] = data4*x264*2.0-t76*t77*t519*t754;
  out_ptr[265] = data4*t179*2.0-data5*t871-t526*t754*(t179*t524-1.0);
  out_ptr[266] = -data5*t240+data4*t873*2.0-t526*t754*(t78*t240*t521-1.0);
  out_ptr[267] = data4*x267*2.0-t78*t79*t526*t754;
  out_ptr[268] = data4*t181*2.0-data5*t874-t533*t754*(t181*t531-1.0);
  out_ptr[269] = -data5*t241+data4*t876*2.0-t533*t754*(t80*t241*t528-1.0);
  out_ptr[270] = data4*x270*2.0-t80*t81*t533*t754;
  out_ptr[271] = data4*t183*2.0-data5*t877-t540*t754*(t183*t538-1.0);
  out_ptr[272] = -data5*t242+data4*t879*2.0-t540*t754*(t82*t242*t535-1.0);
  out_ptr[273] = data4*x273*2.0-t82*t83*t540*t754;
  out_ptr[274] = data4*t185*2.0-data5*t880-t547*t754*(t185*t545-1.0);
  out_ptr[275] = -data5*t243+data4*t882*2.0-t547*t754*(t84*t243*t542-1.0);
  out_ptr[276] = data4*x276*2.0-t84*t85*t547*t754;
  out_ptr[277] = data4*t187*2.0-data5*t883-t554*t754*(t187*t552-1.0);
  out_ptr[278] = -data5*t244+data4*t885*2.0-t554*t754*(t86*t244*t549-1.0);
  out_ptr[279] = data4*x279*2.0-t86*t87*t554*t754;
  out_ptr[280] = data4*t189*2.0-data5*t886-t561*t754*(t189*t559-1.0);
  out_ptr[281] = -data5*t245+data4*t888*2.0-t561*t754*(t88*t245*t556-1.0);
  out_ptr[282] = data4*x282*2.0-t88*t89*t561*t754;
  out_ptr[283] = data4*t191*2.0-data5*t889-t568*t754*(t191*t566-1.0);
  out_ptr[284] = -data5*t246+data4*t891*2.0-t568*t754*(t90*t246*t563-1.0);
  out_ptr[285] = data4*x285*2.0-t90*t91*t568*t754;
  out_ptr[286] = data4*t193*2.0-data5*t892-t575*t754*(t193*t573-1.0);
  out_ptr[287] = -data5*t247+data4*t894*2.0-t575*t754*(t92*t247*t570-1.0);
  out_ptr[288] = data4*x288*2.0-t92*t93*t575*t754;
  out_ptr[289] = data4*t195*2.0-data5*t895-t582*t754*(t195*t580-1.0);
  out_ptr[290] = -data5*t248+data4*t897*2.0-t582*t754*(t94*t248*t577-1.0);
  out_ptr[291] = data4*x291*2.0-t94*t95*t582*t754;
  out_ptr[292] = data4*t197*2.0-data5*t898-t589*t754*(t197*t587-1.0);
  out_ptr[293] = -data5*t249+data4*t900*2.0-t589*t754*(t96*t249*t584-1.0);
  out_ptr[294] = data4*x294*2.0-t96*t97*t589*t754;
  out_ptr[295] = data4*t199*2.0-data5*t901-t596*t754*(t199*t594-1.0);
  out_ptr[296] = -data5*t250+data4*t903*2.0-t596*t754*(t98*t250*t591-1.0);
  out_ptr[297] = data4*x297*2.0-t98*t99*t596*t754;
  out_ptr[298] = data4*t201*2.0-data5*t904-t603*t754*(t201*t601-1.0);
  out_ptr[299] = -data5*t251+data4*t906*2.0-t603*t754*(t100*t251*t598-1.0);
  out_ptr[300] = data4*x300*2.0-t100*t101*t603*t754;

#line 39 "au_autodiff_generate_template.cpp"
        }
    } else {
        const mwSize out_step = 1;
        for(mwSize c_in = 0; c_in < in.cols; ++c_in,
                in_ptr += in.rows,
                data_ptr += data.rows,
                out_ptr += out_step) {
              /* inner loop do_jac=0 */
    double x1 = in_ptr[0];
    double x2 = in_ptr[1];
    double x3 = in_ptr[2];
    double x4 = in_ptr[3];
    double x5 = in_ptr[4];
    double x6 = in_ptr[5];
    double x7 = in_ptr[6];
    double x8 = in_ptr[7];
    double x9 = in_ptr[8];
    double x10 = in_ptr[9];
    double x11 = in_ptr[10];
    double x12 = in_ptr[11];
    double x13 = in_ptr[12];
    double x14 = in_ptr[13];
    double x15 = in_ptr[14];
    double x16 = in_ptr[15];
    double x17 = in_ptr[16];
    double x18 = in_ptr[17];
    double x19 = in_ptr[18];
    double x20 = in_ptr[19];
    double x21 = in_ptr[20];
    double x22 = in_ptr[21];
    double x23 = in_ptr[22];
    double x24 = in_ptr[23];
    double x25 = in_ptr[24];
    double x26 = in_ptr[25];
    double x27 = in_ptr[26];
    double x28 = in_ptr[27];
    double x29 = in_ptr[28];
    double x30 = in_ptr[29];
    double x31 = in_ptr[30];
    double x32 = in_ptr[31];
    double x33 = in_ptr[32];
    double x34 = in_ptr[33];
    double x35 = in_ptr[34];
    double x36 = in_ptr[35];
    double x37 = in_ptr[36];
    double x38 = in_ptr[37];
    double x39 = in_ptr[38];
    double x40 = in_ptr[39];
    double x41 = in_ptr[40];
    double x42 = in_ptr[41];
    double x43 = in_ptr[42];
    double x44 = in_ptr[43];
    double x45 = in_ptr[44];
    double x46 = in_ptr[45];
    double x47 = in_ptr[46];
    double x48 = in_ptr[47];
    double x49 = in_ptr[48];
    double x50 = in_ptr[49];
    double x51 = in_ptr[50];
    double x52 = in_ptr[51];
    double x53 = in_ptr[52];
    double x54 = in_ptr[53];
    double x55 = in_ptr[54];
    double x56 = in_ptr[55];
    double x57 = in_ptr[56];
    double x58 = in_ptr[57];
    double x59 = in_ptr[58];
    double x60 = in_ptr[59];
    double x61 = in_ptr[60];
    double x62 = in_ptr[61];
    double x63 = in_ptr[62];
    double x64 = in_ptr[63];
    double x65 = in_ptr[64];
    double x66 = in_ptr[65];
    double x67 = in_ptr[66];
    double x68 = in_ptr[67];
    double x69 = in_ptr[68];
    double x70 = in_ptr[69];
    double x71 = in_ptr[70];
    double x72 = in_ptr[71];
    double x73 = in_ptr[72];
    double x74 = in_ptr[73];
    double x75 = in_ptr[74];
    double x76 = in_ptr[75];
    double x77 = in_ptr[76];
    double x78 = in_ptr[77];
    double x79 = in_ptr[78];
    double x80 = in_ptr[79];
    double x81 = in_ptr[80];
    double x82 = in_ptr[81];
    double x83 = in_ptr[82];
    double x84 = in_ptr[83];
    double x85 = in_ptr[84];
    double x86 = in_ptr[85];
    double x87 = in_ptr[86];
    double x88 = in_ptr[87];
    double x89 = in_ptr[88];
    double x90 = in_ptr[89];
    double x91 = in_ptr[90];
    double x92 = in_ptr[91];
    double x93 = in_ptr[92];
    double x94 = in_ptr[93];
    double x95 = in_ptr[94];
    double x96 = in_ptr[95];
    double x97 = in_ptr[96];
    double x98 = in_ptr[97];
    double x99 = in_ptr[98];
    double x100 = in_ptr[99];
    double x101 = in_ptr[100];
    double x102 = in_ptr[101];
    double x103 = in_ptr[102];
    double x104 = in_ptr[103];
    double x105 = in_ptr[104];
    double x106 = in_ptr[105];
    double x107 = in_ptr[106];
    double x108 = in_ptr[107];
    double x109 = in_ptr[108];
    double x110 = in_ptr[109];
    double x111 = in_ptr[110];
    double x112 = in_ptr[111];
    double x113 = in_ptr[112];
    double x114 = in_ptr[113];
    double x115 = in_ptr[114];
    double x116 = in_ptr[115];
    double x117 = in_ptr[116];
    double x118 = in_ptr[117];
    double x119 = in_ptr[118];
    double x120 = in_ptr[119];
    double x121 = in_ptr[120];
    double x122 = in_ptr[121];
    double x123 = in_ptr[122];
    double x124 = in_ptr[123];
    double x125 = in_ptr[124];
    double x126 = in_ptr[125];
    double x127 = in_ptr[126];
    double x128 = in_ptr[127];
    double x129 = in_ptr[128];
    double x130 = in_ptr[129];
    double x131 = in_ptr[130];
    double x132 = in_ptr[131];
    double x133 = in_ptr[132];
    double x134 = in_ptr[133];
    double x135 = in_ptr[134];
    double x136 = in_ptr[135];
    double x137 = in_ptr[136];
    double x138 = in_ptr[137];
    double x139 = in_ptr[138];
    double x140 = in_ptr[139];
    double x141 = in_ptr[140];
    double x142 = in_ptr[141];
    double x143 = in_ptr[142];
    double x144 = in_ptr[143];
    double x145 = in_ptr[144];
    double x146 = in_ptr[145];
    double x147 = in_ptr[146];
    double x148 = in_ptr[147];
    double x149 = in_ptr[148];
    double x150 = in_ptr[149];
    double x151 = in_ptr[150];
    double x152 = in_ptr[151];
    double x153 = in_ptr[152];
    double x154 = in_ptr[153];
    double x155 = in_ptr[154];
    double x156 = in_ptr[155];
    double x157 = in_ptr[156];
    double x158 = in_ptr[157];
    double x159 = in_ptr[158];
    double x160 = in_ptr[159];
    double x161 = in_ptr[160];
    double x162 = in_ptr[161];
    double x163 = in_ptr[162];
    double x164 = in_ptr[163];
    double x165 = in_ptr[164];
    double x166 = in_ptr[165];
    double x167 = in_ptr[166];
    double x168 = in_ptr[167];
    double x169 = in_ptr[168];
    double x170 = in_ptr[169];
    double x171 = in_ptr[170];
    double x172 = in_ptr[171];
    double x173 = in_ptr[172];
    double x174 = in_ptr[173];
    double x175 = in_ptr[174];
    double x176 = in_ptr[175];
    double x177 = in_ptr[176];
    double x178 = in_ptr[177];
    double x179 = in_ptr[178];
    double x180 = in_ptr[179];
    double x181 = in_ptr[180];
    double x182 = in_ptr[181];
    double x183 = in_ptr[182];
    double x184 = in_ptr[183];
    double x185 = in_ptr[184];
    double x186 = in_ptr[185];
    double x187 = in_ptr[186];
    double x188 = in_ptr[187];
    double x189 = in_ptr[188];
    double x190 = in_ptr[189];
    double x191 = in_ptr[190];
    double x192 = in_ptr[191];
    double x193 = in_ptr[192];
    double x194 = in_ptr[193];
    double x195 = in_ptr[194];
    double x196 = in_ptr[195];
    double x197 = in_ptr[196];
    double x198 = in_ptr[197];
    double x199 = in_ptr[198];
    double x200 = in_ptr[199];
    double x201 = in_ptr[200];
    double x202 = in_ptr[201];
    double x203 = in_ptr[202];
    double x204 = in_ptr[203];
    double x205 = in_ptr[204];
    double x206 = in_ptr[205];
    double x207 = in_ptr[206];
    double x208 = in_ptr[207];
    double x209 = in_ptr[208];
    double x210 = in_ptr[209];
    double x211 = in_ptr[210];
    double x212 = in_ptr[211];
    double x213 = in_ptr[212];
    double x214 = in_ptr[213];
    double x215 = in_ptr[214];
    double x216 = in_ptr[215];
    double x217 = in_ptr[216];
    double x218 = in_ptr[217];
    double x219 = in_ptr[218];
    double x220 = in_ptr[219];
    double x221 = in_ptr[220];
    double x222 = in_ptr[221];
    double x223 = in_ptr[222];
    double x224 = in_ptr[223];
    double x225 = in_ptr[224];
    double x226 = in_ptr[225];
    double x227 = in_ptr[226];
    double x228 = in_ptr[227];
    double x229 = in_ptr[228];
    double x230 = in_ptr[229];
    double x231 = in_ptr[230];
    double x232 = in_ptr[231];
    double x233 = in_ptr[232];
    double x234 = in_ptr[233];
    double x235 = in_ptr[234];
    double x236 = in_ptr[235];
    double x237 = in_ptr[236];
    double x238 = in_ptr[237];
    double x239 = in_ptr[238];
    double x240 = in_ptr[239];
    double x241 = in_ptr[240];
    double x242 = in_ptr[241];
    double x243 = in_ptr[242];
    double x244 = in_ptr[243];
    double x245 = in_ptr[244];
    double x246 = in_ptr[245];
    double x247 = in_ptr[246];
    double x248 = in_ptr[247];
    double x249 = in_ptr[248];
    double x250 = in_ptr[249];
    double x251 = in_ptr[250];
    double x252 = in_ptr[251];
    double x253 = in_ptr[252];
    double x254 = in_ptr[253];
    double x255 = in_ptr[254];
    double x256 = in_ptr[255];
    double x257 = in_ptr[256];
    double x258 = in_ptr[257];
    double x259 = in_ptr[258];
    double x260 = in_ptr[259];
    double x261 = in_ptr[260];
    double x262 = in_ptr[261];
    double x263 = in_ptr[262];
    double x264 = in_ptr[263];
    double x265 = in_ptr[264];
    double x266 = in_ptr[265];
    double x267 = in_ptr[266];
    double x268 = in_ptr[267];
    double x269 = in_ptr[268];
    double x270 = in_ptr[269];
    double x271 = in_ptr[270];
    double x272 = in_ptr[271];
    double x273 = in_ptr[272];
    double x274 = in_ptr[273];
    double x275 = in_ptr[274];
    double x276 = in_ptr[275];
    double x277 = in_ptr[276];
    double x278 = in_ptr[277];
    double x279 = in_ptr[278];
    double x280 = in_ptr[279];
    double x281 = in_ptr[280];
    double x282 = in_ptr[281];
    double x283 = in_ptr[282];
    double x284 = in_ptr[283];
    double x285 = in_ptr[284];
    double x286 = in_ptr[285];
    double x287 = in_ptr[286];
    double x288 = in_ptr[287];
    double x289 = in_ptr[288];
    double x290 = in_ptr[289];
    double x291 = in_ptr[290];
    double x292 = in_ptr[291];
    double x293 = in_ptr[292];
    double x294 = in_ptr[293];
    double x295 = in_ptr[294];
    double x296 = in_ptr[295];
    double x297 = in_ptr[296];
    double x298 = in_ptr[297];
    double x299 = in_ptr[298];
    double x300 = in_ptr[299];
    double data1 = data_ptr[0];
    double data2 = data_ptr[1];
    double data3 = data_ptr[2];
    double data4 = data_ptr[3];
    double data5 = data_ptr[4];
    double t3 = data1-x51;
    double t202 = exp(x152);
    double t2 = t3*x153+t202*(data2-x52);
    double t5 = data1-x53;
    double t203 = exp(x155);
    double t4 = t5*x156+t203*(data2-x54);
    double t7 = data1-x55;
    double t204 = exp(x158);
    double t6 = t7*x159+t204*(data2-x56);
    double t9 = data1-x57;
    double t205 = exp(x161);
    double t8 = t9*x162+t205*(data2-x58);
    double t11 = data1-x59;
    double t206 = exp(x164);
    double t10 = t11*x165+t206*(data2-x60);
    double t13 = data1-x61;
    double t207 = exp(x167);
    double t12 = t13*x168+t207*(data2-x62);
    double t15 = data1-x63;
    double t208 = exp(x170);
    double t14 = t15*x171+t208*(data2-x64);
    double t17 = data1-x65;
    double t209 = exp(x173);
    double t16 = t17*x174+t209*(data2-x66);
    double t19 = data1-x67;
    double t210 = exp(x176);
    double t18 = t19*x177+t210*(data2-x68);
    double t21 = data1-x69;
    double t211 = exp(x179);
    double t20 = t21*x180+t211*(data2-x70);
    double t23 = data1-x71;
    double t212 = exp(x182);
    double t22 = t23*x183+t212*(data2-x72);
    double t25 = data1-x73;
    double t213 = exp(x185);
    double t24 = t25*x186+t213*(data2-x74);
    double t27 = data1-x75;
    double t214 = exp(x188);
    double t26 = t27*x189+t214*(data2-x76);
    double t29 = data1-x77;
    double t215 = exp(x191);
    double t28 = t29*x192+t215*(data2-x78);
    double t31 = data1-x79;
    double t216 = exp(x194);
    double t30 = t31*x195+t216*(data2-x80);
    double t33 = data1-x81;
    double t217 = exp(x197);
    double t32 = t33*x198+t217*(data2-x82);
    double t35 = data1-x83;
    double t218 = exp(x200);
    double t34 = t35*x201+t218*(data2-x84);
    double t37 = data1-x85;
    double t219 = exp(x203);
    double t36 = t37*x204+t219*(data2-x86);
    double t39 = data1-x87;
    double t220 = exp(x206);
    double t38 = t39*x207+t220*(data2-x88);
    double t41 = data1-x89;
    double t221 = exp(x209);
    double t40 = t41*x210+t221*(data2-x90);
    double t43 = data1-x91;
    double t222 = exp(x212);
    double t42 = t43*x213+t222*(data2-x92);
    double t45 = data1-x93;
    double t223 = exp(x215);
    double t44 = t45*x216+t223*(data2-x94);
    double t47 = data1-x95;
    double t224 = exp(x218);
    double t46 = t47*x219+t224*(data2-x96);
    double t49 = data1-x97;
    double t225 = exp(x221);
    double t48 = t49*x222+t225*(data2-x98);
    double t51 = data1-x99;
    double t226 = exp(x224);
    double t50 = t51*x225+t226*(data2-x100);
    double t53 = data1-x101;
    double t227 = exp(x227);
    double t52 = t53*x228+t227*(data2-x102);
    double t55 = data1-x103;
    double t228 = exp(x230);
    double t54 = t55*x231+t228*(data2-x104);
    double t57 = data1-x105;
    double t229 = exp(x233);
    double t56 = t57*x234+t229*(data2-x106);
    double t59 = data1-x107;
    double t230 = exp(x236);
    double t58 = t59*x237+t230*(data2-x108);
    double t61 = data1-x109;
    double t231 = exp(x239);
    double t60 = t61*x240+t231*(data2-x110);
    double t63 = data1-x111;
    double t232 = exp(x242);
    double t62 = t63*x243+t232*(data2-x112);
    double t65 = data1-x113;
    double t233 = exp(x245);
    double t64 = t65*x246+t233*(data2-x114);
    double t67 = data1-x115;
    double t234 = exp(x248);
    double t66 = t67*x249+t234*(data2-x116);
    double t69 = data1-x117;
    double t235 = exp(x251);
    double t68 = t69*x252+t235*(data2-x118);
    double t71 = data1-x119;
    double t236 = exp(x254);
    double t70 = t71*x255+t236*(data2-x120);
    double t73 = data1-x121;
    double t237 = exp(x257);
    double t72 = t73*x258+t237*(data2-x122);
    double t75 = data1-x123;
    double t238 = exp(x260);
    double t74 = t75*x261+t238*(data2-x124);
    double t77 = data1-x125;
    double t239 = exp(x263);
    double t76 = t77*x264+t239*(data2-x126);
    double t79 = data1-x127;
    double t240 = exp(x266);
    double t78 = t79*x267+t240*(data2-x128);
    double t81 = data1-x129;
    double t241 = exp(x269);
    double t80 = t81*x270+t241*(data2-x130);
    double t83 = data1-x131;
    double t242 = exp(x272);
    double t82 = t83*x273+t242*(data2-x132);
    double t85 = data1-x133;
    double t243 = exp(x275);
    double t84 = t85*x276+t243*(data2-x134);
    double t87 = data1-x135;
    double t244 = exp(x278);
    double t86 = t87*x279+t244*(data2-x136);
    double t89 = data1-x137;
    double t245 = exp(x281);
    double t88 = t89*x282+t245*(data2-x138);
    double t91 = data1-x139;
    double t246 = exp(x284);
    double t90 = t91*x285+t246*(data2-x140);
    double t93 = data1-x141;
    double t247 = exp(x287);
    double t92 = t93*x288+t247*(data2-x142);
    double t95 = data1-x143;
    double t248 = exp(x290);
    double t94 = t95*x291+t248*(data2-x144);
    double t97 = data1-x145;
    double t249 = exp(x293);
    double t96 = t97*x294+t249*(data2-x146);
    double t99 = data1-x147;
    double t250 = exp(x296);
    double t98 = t99*x297+t250*(data2-x148);
    double t101 = data1-x149;
    double t251 = exp(x299);
    double t100 = t101*x300+t251*(data2-x150);
    double t102 = x151*2.0;
    double t103 = exp(t102);
    double t104 = x154*2.0;
    double t105 = exp(t104);
    double t106 = x157*2.0;
    double t107 = exp(t106);
    double t108 = x160*2.0;
    double t109 = exp(t108);
    double t110 = x163*2.0;
    double t111 = exp(t110);
    double t112 = x166*2.0;
    double t113 = exp(t112);
    double t114 = x169*2.0;
    double t115 = exp(t114);
    double t116 = x172*2.0;
    double t117 = exp(t116);
    double t118 = x175*2.0;
    double t119 = exp(t118);
    double t120 = x178*2.0;
    double t121 = exp(t120);
    double t122 = x181*2.0;
    double t123 = exp(t122);
    double t124 = x184*2.0;
    double t125 = exp(t124);
    double t126 = x187*2.0;
    double t127 = exp(t126);
    double t128 = x190*2.0;
    double t129 = exp(t128);
    double t130 = x193*2.0;
    double t131 = exp(t130);
    double t132 = x196*2.0;
    double t133 = exp(t132);
    double t134 = x199*2.0;
    double t135 = exp(t134);
    double t136 = x202*2.0;
    double t137 = exp(t136);
    double t138 = x205*2.0;
    double t139 = exp(t138);
    double t140 = x208*2.0;
    double t141 = exp(t140);
    double t142 = x211*2.0;
    double t143 = exp(t142);
    double t144 = x214*2.0;
    double t145 = exp(t144);
    double t146 = x217*2.0;
    double t147 = exp(t146);
    double t148 = x220*2.0;
    double t149 = exp(t148);
    double t150 = x223*2.0;
    double t151 = exp(t150);
    double t152 = x226*2.0;
    double t153 = exp(t152);
    double t154 = x229*2.0;
    double t155 = exp(t154);
    double t156 = x232*2.0;
    double t157 = exp(t156);
    double t158 = x235*2.0;
    double t159 = exp(t158);
    double t160 = x238*2.0;
    double t161 = exp(t160);
    double t162 = x241*2.0;
    double t163 = exp(t162);
    double t164 = x244*2.0;
    double t165 = exp(t164);
    double t166 = x247*2.0;
    double t167 = exp(t166);
    double t168 = x250*2.0;
    double t169 = exp(t168);
    double t170 = x253*2.0;
    double t171 = exp(t170);
    double t172 = x256*2.0;
    double t173 = exp(t172);
    double t174 = x259*2.0;
    double t175 = exp(t174);
    double t176 = x262*2.0;
    double t177 = exp(t176);
    double t178 = x265*2.0;
    double t179 = exp(t178);
    double t180 = x268*2.0;
    double t181 = exp(t180);
    double t182 = x271*2.0;
    double t183 = exp(t182);
    double t184 = x274*2.0;
    double t185 = exp(t184);
    double t186 = x277*2.0;
    double t187 = exp(t186);
    double t188 = x280*2.0;
    double t189 = exp(t188);
    double t190 = x283*2.0;
    double t191 = exp(t190);
    double t192 = x286*2.0;
    double t193 = exp(t192);
    double t194 = x289*2.0;
    double t195 = exp(t194);
    double t196 = x292*2.0;
    double t197 = exp(t196);
    double t198 = x295*2.0;
    double t199 = exp(t198);
    double t200 = x298*2.0;
    double t201 = exp(t200);
    out_ptr[0] = data3-log(exp(x1)+exp(x2)+exp(x3)+exp(x4)+exp(x5)+exp(x6)+exp(x7)+exp(x8)+exp(x9)+exp(x10)+exp(x11)+exp(x12)+exp(x13)+exp(x14)+exp(x15)+exp(x16)+exp(x17)+exp(x18)+exp(x19)+exp(x20)+exp(x21)+exp(x22)+exp(x23)+exp(x24)+exp(x25)+exp(x26)+exp(x27)+exp(x28)+exp(x29)+exp(x30)+exp(x31)+exp(x32)+exp(x33)+exp(x34)+exp(x35)+exp(x36)+exp(x37)+exp(x38)+exp(x39)+exp(x40)+exp(x41)+exp(x42)+exp(x43)+exp(x44)+exp(x45)+exp(x46)+exp(x47)+exp(x48)+exp(x49)+exp(x50))+log(exp(-data3+x1+x151+x152-(t3*t3)*t103*(1.0/2.0)-(t2*t2)*(1.0/2.0))+exp(-data3+x2+x154+x155-(t5*t5)*t105*(1.0/2.0)-(t4*t4)*(1.0/2.0))+exp(-data3+x3+x157+x158-(t7*t7)*t107*(1.0/2.0)-(t6*t6)*(1.0/2.0))+exp(-data3+x4+x160+x161-(t9*t9)*t109*(1.0/2.0)-(t8*t8)*(1.0/2.0))+exp(-data3+x5+x163+x164-(t11*t11)*t111*(1.0/2.0)-(t10*t10)*(1.0/2.0))+exp(-data3+x6+x166+x167-(t13*t13)*t113*(1.0/2.0)-(t12*t12)*(1.0/2.0))+exp(-data3+x7+x169+x170-(t15*t15)*t115*(1.0/2.0)-(t14*t14)*(1.0/2.0))+exp(-data3+x8+x172+x173-(t17*t17)*t117*(1.0/2.0)-(t16*t16)*(1.0/2.0))+exp(-data3+x9+x175+x176-(t19*t19)*t119*(1.0/2.0)-(t18*t18)*(1.0/2.0))+exp(-data3+x10+x178+x179-(t21*t21)*t121*(1.0/2.0)-(t20*t20)*(1.0/2.0))+exp(-data3+x11+x181+x182-(t23*t23)*t123*(1.0/2.0)-(t22*t22)*(1.0/2.0))+exp(-data3+x12+x184+x185-(t25*t25)*t125*(1.0/2.0)-(t24*t24)*(1.0/2.0))+exp(-data3+x13+x187+x188-(t27*t27)*t127*(1.0/2.0)-(t26*t26)*(1.0/2.0))+exp(-data3+x14+x190+x191-(t29*t29)*t129*(1.0/2.0)-(t28*t28)*(1.0/2.0))+exp(-data3+x15+x193+x194-(t31*t31)*t131*(1.0/2.0)-(t30*t30)*(1.0/2.0))+exp(-data3+x16+x196+x197-(t33*t33)*t133*(1.0/2.0)-(t32*t32)*(1.0/2.0))+exp(-data3+x17+x199+x200-(t35*t35)*t135*(1.0/2.0)-(t34*t34)*(1.0/2.0))+exp(-data3+x18+x202+x203-(t37*t37)*t137*(1.0/2.0)-(t36*t36)*(1.0/2.0))+exp(-data3+x19+x205+x206-(t39*t39)*t139*(1.0/2.0)-(t38*t38)*(1.0/2.0))+exp(-data3+x20+x208+x209-(t41*t41)*t141*(1.0/2.0)-(t40*t40)*(1.0/2.0))+exp(-data3+x21+x211+x212-(t43*t43)*t143*(1.0/2.0)-(t42*t42)*(1.0/2.0))+exp(-data3+x22+x214+x215-(t45*t45)*t145*(1.0/2.0)-(t44*t44)*(1.0/2.0))+exp(-data3+x23+x217+x218-(t47*t47)*t147*(1.0/2.0)-(t46*t46)*(1.0/2.0))+exp(-data3+x24+x220+x221-(t49*t49)*t149*(1.0/2.0)-(t48*t48)*(1.0/2.0))+exp(-data3+x25+x223+x224-(t51*t51)*t151*(1.0/2.0)-(t50*t50)*(1.0/2.0))+exp(-data3+x26+x226+x227-(t53*t53)*t153*(1.0/2.0)-(t52*t52)*(1.0/2.0))+exp(-data3+x27+x229+x230-(t55*t55)*t155*(1.0/2.0)-(t54*t54)*(1.0/2.0))+exp(-data3+x28+x232+x233-(t57*t57)*t157*(1.0/2.0)-(t56*t56)*(1.0/2.0))+exp(-data3+x29+x235+x236-(t59*t59)*t159*(1.0/2.0)-(t58*t58)*(1.0/2.0))+exp(-data3+x30+x238+x239-(t61*t61)*t161*(1.0/2.0)-(t60*t60)*(1.0/2.0))+exp(-data3+x31+x241+x242-(t63*t63)*t163*(1.0/2.0)-(t62*t62)*(1.0/2.0))+exp(-data3+x32+x244+x245-(t65*t65)*t165*(1.0/2.0)-(t64*t64)*(1.0/2.0))+exp(-data3+x33+x247+x248-(t67*t67)*t167*(1.0/2.0)-(t66*t66)*(1.0/2.0))+exp(-data3+x34+x250+x251-(t69*t69)*t169*(1.0/2.0)-(t68*t68)*(1.0/2.0))+exp(-data3+x35+x253+x254-(t71*t71)*t171*(1.0/2.0)-(t70*t70)*(1.0/2.0))+exp(-data3+x36+x256+x257-(t73*t73)*t173*(1.0/2.0)-(t72*t72)*(1.0/2.0))+exp(-data3+x37+x259+x260-(t75*t75)*t175*(1.0/2.0)-(t74*t74)*(1.0/2.0))+exp(-data3+x38+x262+x263-(t77*t77)*t177*(1.0/2.0)-(t76*t76)*(1.0/2.0))+exp(-data3+x39+x265+x266-(t79*t79)*t179*(1.0/2.0)-(t78*t78)*(1.0/2.0))+exp(-data3+x40+x268+x269-(t81*t81)*t181*(1.0/2.0)-(t80*t80)*(1.0/2.0))+exp(-data3+x41+x271+x272-(t83*t83)*t183*(1.0/2.0)-(t82*t82)*(1.0/2.0))+exp(-data3+x42+x274+x275-(t85*t85)*t185*(1.0/2.0)-(t84*t84)*(1.0/2.0))+exp(-data3+x43+x277+x278-(t87*t87)*t187*(1.0/2.0)-(t86*t86)*(1.0/2.0))+exp(-data3+x44+x280+x281-(t89*t89)*t189*(1.0/2.0)-(t88*t88)*(1.0/2.0))+exp(-data3+x45+x283+x284-(t91*t91)*t191*(1.0/2.0)-(t90*t90)*(1.0/2.0))+exp(-data3+x46+x286+x287-(t93*t93)*t193*(1.0/2.0)-(t92*t92)*(1.0/2.0))+exp(-data3+x47+x289+x290-(t95*t95)*t195*(1.0/2.0)-(t94*t94)*(1.0/2.0))+exp(-data3+x48+x292+x293-(t97*t97)*t197*(1.0/2.0)-(t96*t96)*(1.0/2.0))+exp(-data3+x49+x295+x296-(t99*t99)*t199*(1.0/2.0)-(t98*t98)*(1.0/2.0))+exp(-data3+x50+x298+x299-(t101*t101)*t201*(1.0/2.0)-(t100*t100)*(1.0/2.0)))-data5*(t202+exp(x151))-data5*(t203+exp(x154))-data5*(t204+exp(x157))-data5*(t205+exp(x160))-data5*(t206+exp(x163))-data5*(t207+exp(x166))-data5*(t208+exp(x169))-data5*(t209+exp(x172))-data5*(t210+exp(x175))-data5*(t211+exp(x178))-data5*(t212+exp(x181))-data5*(t213+exp(x184))-data5*(t214+exp(x187))-data5*(t215+exp(x190))-data5*(t216+exp(x193))-data5*(t217+exp(x196))-data5*(t218+exp(x199))-data5*(t219+exp(x202))-data5*(t220+exp(x205))-data5*(t221+exp(x208))-data5*(t222+exp(x211))-data5*(t223+exp(x214))-data5*(t224+exp(x217))-data5*(t225+exp(x220))-data5*(t226+exp(x223))-data5*(t227+exp(x226))-data5*(t228+exp(x229))-data5*(t229+exp(x232))-data5*(t230+exp(x235))-data5*(t231+exp(x238))-data5*(t232+exp(x241))-data5*(t233+exp(x244))-data5*(t234+exp(x247))-data5*(t235+exp(x250))-data5*(t236+exp(x253))-data5*(t237+exp(x256))-data5*(t238+exp(x259))-data5*(t239+exp(x262))-data5*(t240+exp(x265))-data5*(t241+exp(x268))-data5*(t242+exp(x271))-data5*(t243+exp(x274))-data5*(t244+exp(x277))-data5*(t245+exp(x280))-data5*(t246+exp(x283))-data5*(t247+exp(x286))-data5*(t248+exp(x289))-data5*(t249+exp(x292))-data5*(t250+exp(x295))-data5*(t251+exp(x298))+data4*(t103+exp(x152*2.0)+x153*x153)+data4*(t105+exp(x155*2.0)+x156*x156)+data4*(t107+exp(x158*2.0)+x159*x159)+data4*(t109+exp(x161*2.0)+x162*x162)+data4*(t111+exp(x164*2.0)+x165*x165)+data4*(t113+exp(x167*2.0)+x168*x168)+data4*(t115+exp(x170*2.0)+x171*x171)+data4*(t117+exp(x173*2.0)+x174*x174)+data4*(t119+exp(x176*2.0)+x177*x177)+data4*(t121+exp(x179*2.0)+x180*x180)+data4*(t123+exp(x182*2.0)+x183*x183)+data4*(t125+exp(x185*2.0)+x186*x186)+data4*(t127+exp(x188*2.0)+x189*x189)+data4*(t129+exp(x191*2.0)+x192*x192)+data4*(t131+exp(x194*2.0)+x195*x195)+data4*(t133+exp(x197*2.0)+x198*x198)+data4*(t135+exp(x200*2.0)+x201*x201)+data4*(t137+exp(x203*2.0)+x204*x204)+data4*(t139+exp(x206*2.0)+x207*x207)+data4*(t141+exp(x209*2.0)+x210*x210)+data4*(t143+exp(x212*2.0)+x213*x213)+data4*(t145+exp(x215*2.0)+x216*x216)+data4*(t147+exp(x218*2.0)+x219*x219)+data4*(t149+exp(x221*2.0)+x222*x222)+data4*(t151+exp(x224*2.0)+x225*x225)+data4*(t153+exp(x227*2.0)+x228*x228)+data4*(t155+exp(x230*2.0)+x231*x231)+data4*(t157+exp(x233*2.0)+x234*x234)+data4*(t159+exp(x236*2.0)+x237*x237)+data4*(t161+exp(x239*2.0)+x240*x240)+data4*(t163+exp(x242*2.0)+x243*x243)+data4*(t165+exp(x245*2.0)+x246*x246)+data4*(t167+exp(x248*2.0)+x249*x249)+data4*(t169+exp(x251*2.0)+x252*x252)+data4*(t171+exp(x254*2.0)+x255*x255)+data4*(t173+exp(x257*2.0)+x258*x258)+data4*(t175+exp(x260*2.0)+x261*x261)+data4*(t177+exp(x263*2.0)+x264*x264)+data4*(t179+exp(x266*2.0)+x267*x267)+data4*(t181+exp(x269*2.0)+x270*x270)+data4*(t183+exp(x272*2.0)+x273*x273)+data4*(t185+exp(x275*2.0)+x276*x276)+data4*(t187+exp(x278*2.0)+x279*x279)+data4*(t189+exp(x281*2.0)+x282*x282)+data4*(t191+exp(x284*2.0)+x285*x285)+data4*(t193+exp(x287*2.0)+x288*x288)+data4*(t195+exp(x290*2.0)+x291*x291)+data4*(t197+exp(x293*2.0)+x294*x294)+data4*(t199+exp(x296*2.0)+x297*x297)+data4*(t201+exp(x299*2.0)+x300*x300);

#line 48 "au_autodiff_generate_template.cpp"
        }
    }
    
    outs[0] = out;
}
