// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

#line 2 "au_autodiff_generate_template.cpp"
#include <math.h>

#include "au_mex.h"

// Autogenerated by au_ccode
// FROM: f
// au_autodiff_template.cpp - outline code for au_autodiff*
// awf@microsoft.com, Dec 13

void mlx_function(mlx_inputs& ins, mlx_outputs& outs)
{
    mlx_array<mlx_double> in(ins[0]);
    mlx_array<mlx_double> data(ins[1]);
    mlx_array<mlx_logical> jacobian(ins[2]);
    bool do_jacobian = jacobian[0];

    mlx_assert(in.cols == data.cols);
    mlx_assert(in.rows == 330);
    mlx_assert(data.rows == 13);

    mwSize out_rows = 1 + (do_jacobian ? 330 : 0);
    mwSize out_cols = 1 * in.cols;
    mlx_make_array<mlx_double> out(out_rows, out_cols);

    double const* in_ptr = in.data;
    double const* data_ptr = data.data;
    double* out_ptr = out.data;

    if (do_jacobian) {
        // const mwSize out_rows = 330 + 1;
        const mwSize out_step = (330 + 1) * 1;
        for(mwSize c_in = 0; c_in < in.cols; ++c_in,
                in_ptr += in.rows,
                data_ptr += data.rows,
                out_ptr += out_step) {
              /* inner loop do_jac=1 */
    double x1 = in_ptr[0];
    double x2 = in_ptr[1];
    double x3 = in_ptr[2];
    double x4 = in_ptr[3];
    double x5 = in_ptr[4];
    double x6 = in_ptr[5];
    double x7 = in_ptr[6];
    double x8 = in_ptr[7];
    double x9 = in_ptr[8];
    double x10 = in_ptr[9];
    double x11 = in_ptr[10];
    double x12 = in_ptr[11];
    double x13 = in_ptr[12];
    double x14 = in_ptr[13];
    double x15 = in_ptr[14];
    double x16 = in_ptr[15];
    double x17 = in_ptr[16];
    double x18 = in_ptr[17];
    double x19 = in_ptr[18];
    double x20 = in_ptr[19];
    double x21 = in_ptr[20];
    double x22 = in_ptr[21];
    double x23 = in_ptr[22];
    double x24 = in_ptr[23];
    double x25 = in_ptr[24];
    double x26 = in_ptr[25];
    double x27 = in_ptr[26];
    double x28 = in_ptr[27];
    double x29 = in_ptr[28];
    double x30 = in_ptr[29];
    double x31 = in_ptr[30];
    double x32 = in_ptr[31];
    double x33 = in_ptr[32];
    double x34 = in_ptr[33];
    double x35 = in_ptr[34];
    double x36 = in_ptr[35];
    double x37 = in_ptr[36];
    double x38 = in_ptr[37];
    double x39 = in_ptr[38];
    double x40 = in_ptr[39];
    double x41 = in_ptr[40];
    double x42 = in_ptr[41];
    double x43 = in_ptr[42];
    double x44 = in_ptr[43];
    double x45 = in_ptr[44];
    double x46 = in_ptr[45];
    double x47 = in_ptr[46];
    double x48 = in_ptr[47];
    double x49 = in_ptr[48];
    double x50 = in_ptr[49];
    double x51 = in_ptr[50];
    double x52 = in_ptr[51];
    double x53 = in_ptr[52];
    double x54 = in_ptr[53];
    double x55 = in_ptr[54];
    double x56 = in_ptr[55];
    double x57 = in_ptr[56];
    double x58 = in_ptr[57];
    double x59 = in_ptr[58];
    double x60 = in_ptr[59];
    double x61 = in_ptr[60];
    double x62 = in_ptr[61];
    double x63 = in_ptr[62];
    double x64 = in_ptr[63];
    double x65 = in_ptr[64];
    double x66 = in_ptr[65];
    double x67 = in_ptr[66];
    double x68 = in_ptr[67];
    double x69 = in_ptr[68];
    double x70 = in_ptr[69];
    double x71 = in_ptr[70];
    double x72 = in_ptr[71];
    double x73 = in_ptr[72];
    double x74 = in_ptr[73];
    double x75 = in_ptr[74];
    double x76 = in_ptr[75];
    double x77 = in_ptr[76];
    double x78 = in_ptr[77];
    double x79 = in_ptr[78];
    double x80 = in_ptr[79];
    double x81 = in_ptr[80];
    double x82 = in_ptr[81];
    double x83 = in_ptr[82];
    double x84 = in_ptr[83];
    double x85 = in_ptr[84];
    double x86 = in_ptr[85];
    double x87 = in_ptr[86];
    double x88 = in_ptr[87];
    double x89 = in_ptr[88];
    double x90 = in_ptr[89];
    double x91 = in_ptr[90];
    double x92 = in_ptr[91];
    double x93 = in_ptr[92];
    double x94 = in_ptr[93];
    double x95 = in_ptr[94];
    double x96 = in_ptr[95];
    double x97 = in_ptr[96];
    double x98 = in_ptr[97];
    double x99 = in_ptr[98];
    double x100 = in_ptr[99];
    double x101 = in_ptr[100];
    double x102 = in_ptr[101];
    double x103 = in_ptr[102];
    double x104 = in_ptr[103];
    double x105 = in_ptr[104];
    double x106 = in_ptr[105];
    double x107 = in_ptr[106];
    double x108 = in_ptr[107];
    double x109 = in_ptr[108];
    double x110 = in_ptr[109];
    double x111 = in_ptr[110];
    double x112 = in_ptr[111];
    double x113 = in_ptr[112];
    double x114 = in_ptr[113];
    double x115 = in_ptr[114];
    double x116 = in_ptr[115];
    double x117 = in_ptr[116];
    double x118 = in_ptr[117];
    double x119 = in_ptr[118];
    double x120 = in_ptr[119];
    double x121 = in_ptr[120];
    double x122 = in_ptr[121];
    double x123 = in_ptr[122];
    double x124 = in_ptr[123];
    double x125 = in_ptr[124];
    double x126 = in_ptr[125];
    double x127 = in_ptr[126];
    double x128 = in_ptr[127];
    double x129 = in_ptr[128];
    double x130 = in_ptr[129];
    double x131 = in_ptr[130];
    double x132 = in_ptr[131];
    double x133 = in_ptr[132];
    double x134 = in_ptr[133];
    double x135 = in_ptr[134];
    double x136 = in_ptr[135];
    double x137 = in_ptr[136];
    double x138 = in_ptr[137];
    double x139 = in_ptr[138];
    double x140 = in_ptr[139];
    double x141 = in_ptr[140];
    double x142 = in_ptr[141];
    double x143 = in_ptr[142];
    double x144 = in_ptr[143];
    double x145 = in_ptr[144];
    double x146 = in_ptr[145];
    double x147 = in_ptr[146];
    double x148 = in_ptr[147];
    double x149 = in_ptr[148];
    double x150 = in_ptr[149];
    double x151 = in_ptr[150];
    double x152 = in_ptr[151];
    double x153 = in_ptr[152];
    double x154 = in_ptr[153];
    double x155 = in_ptr[154];
    double x156 = in_ptr[155];
    double x157 = in_ptr[156];
    double x158 = in_ptr[157];
    double x159 = in_ptr[158];
    double x160 = in_ptr[159];
    double x161 = in_ptr[160];
    double x162 = in_ptr[161];
    double x163 = in_ptr[162];
    double x164 = in_ptr[163];
    double x165 = in_ptr[164];
    double x166 = in_ptr[165];
    double x167 = in_ptr[166];
    double x168 = in_ptr[167];
    double x169 = in_ptr[168];
    double x170 = in_ptr[169];
    double x171 = in_ptr[170];
    double x172 = in_ptr[171];
    double x173 = in_ptr[172];
    double x174 = in_ptr[173];
    double x175 = in_ptr[174];
    double x176 = in_ptr[175];
    double x177 = in_ptr[176];
    double x178 = in_ptr[177];
    double x179 = in_ptr[178];
    double x180 = in_ptr[179];
    double x181 = in_ptr[180];
    double x182 = in_ptr[181];
    double x183 = in_ptr[182];
    double x184 = in_ptr[183];
    double x185 = in_ptr[184];
    double x186 = in_ptr[185];
    double x187 = in_ptr[186];
    double x188 = in_ptr[187];
    double x189 = in_ptr[188];
    double x190 = in_ptr[189];
    double x191 = in_ptr[190];
    double x192 = in_ptr[191];
    double x193 = in_ptr[192];
    double x194 = in_ptr[193];
    double x195 = in_ptr[194];
    double x196 = in_ptr[195];
    double x197 = in_ptr[196];
    double x198 = in_ptr[197];
    double x199 = in_ptr[198];
    double x200 = in_ptr[199];
    double x201 = in_ptr[200];
    double x202 = in_ptr[201];
    double x203 = in_ptr[202];
    double x204 = in_ptr[203];
    double x205 = in_ptr[204];
    double x206 = in_ptr[205];
    double x207 = in_ptr[206];
    double x208 = in_ptr[207];
    double x209 = in_ptr[208];
    double x210 = in_ptr[209];
    double x211 = in_ptr[210];
    double x212 = in_ptr[211];
    double x213 = in_ptr[212];
    double x214 = in_ptr[213];
    double x215 = in_ptr[214];
    double x216 = in_ptr[215];
    double x217 = in_ptr[216];
    double x218 = in_ptr[217];
    double x219 = in_ptr[218];
    double x220 = in_ptr[219];
    double x221 = in_ptr[220];
    double x222 = in_ptr[221];
    double x223 = in_ptr[222];
    double x224 = in_ptr[223];
    double x225 = in_ptr[224];
    double x226 = in_ptr[225];
    double x227 = in_ptr[226];
    double x228 = in_ptr[227];
    double x229 = in_ptr[228];
    double x230 = in_ptr[229];
    double x231 = in_ptr[230];
    double x232 = in_ptr[231];
    double x233 = in_ptr[232];
    double x234 = in_ptr[233];
    double x235 = in_ptr[234];
    double x236 = in_ptr[235];
    double x237 = in_ptr[236];
    double x238 = in_ptr[237];
    double x239 = in_ptr[238];
    double x240 = in_ptr[239];
    double x241 = in_ptr[240];
    double x242 = in_ptr[241];
    double x243 = in_ptr[242];
    double x244 = in_ptr[243];
    double x245 = in_ptr[244];
    double x246 = in_ptr[245];
    double x247 = in_ptr[246];
    double x248 = in_ptr[247];
    double x249 = in_ptr[248];
    double x250 = in_ptr[249];
    double x251 = in_ptr[250];
    double x252 = in_ptr[251];
    double x253 = in_ptr[252];
    double x254 = in_ptr[253];
    double x255 = in_ptr[254];
    double x256 = in_ptr[255];
    double x257 = in_ptr[256];
    double x258 = in_ptr[257];
    double x259 = in_ptr[258];
    double x260 = in_ptr[259];
    double x261 = in_ptr[260];
    double x262 = in_ptr[261];
    double x263 = in_ptr[262];
    double x264 = in_ptr[263];
    double x265 = in_ptr[264];
    double x266 = in_ptr[265];
    double x267 = in_ptr[266];
    double x268 = in_ptr[267];
    double x269 = in_ptr[268];
    double x270 = in_ptr[269];
    double x271 = in_ptr[270];
    double x272 = in_ptr[271];
    double x273 = in_ptr[272];
    double x274 = in_ptr[273];
    double x275 = in_ptr[274];
    double x276 = in_ptr[275];
    double x277 = in_ptr[276];
    double x278 = in_ptr[277];
    double x279 = in_ptr[278];
    double x280 = in_ptr[279];
    double x281 = in_ptr[280];
    double x282 = in_ptr[281];
    double x283 = in_ptr[282];
    double x284 = in_ptr[283];
    double x285 = in_ptr[284];
    double x286 = in_ptr[285];
    double x287 = in_ptr[286];
    double x288 = in_ptr[287];
    double x289 = in_ptr[288];
    double x290 = in_ptr[289];
    double x291 = in_ptr[290];
    double x292 = in_ptr[291];
    double x293 = in_ptr[292];
    double x294 = in_ptr[293];
    double x295 = in_ptr[294];
    double x296 = in_ptr[295];
    double x297 = in_ptr[296];
    double x298 = in_ptr[297];
    double x299 = in_ptr[298];
    double x300 = in_ptr[299];
    double x301 = in_ptr[300];
    double x302 = in_ptr[301];
    double x303 = in_ptr[302];
    double x304 = in_ptr[303];
    double x305 = in_ptr[304];
    double x306 = in_ptr[305];
    double x307 = in_ptr[306];
    double x308 = in_ptr[307];
    double x309 = in_ptr[308];
    double x310 = in_ptr[309];
    double x311 = in_ptr[310];
    double x312 = in_ptr[311];
    double x313 = in_ptr[312];
    double x314 = in_ptr[313];
    double x315 = in_ptr[314];
    double x316 = in_ptr[315];
    double x317 = in_ptr[316];
    double x318 = in_ptr[317];
    double x319 = in_ptr[318];
    double x320 = in_ptr[319];
    double x321 = in_ptr[320];
    double x322 = in_ptr[321];
    double x323 = in_ptr[322];
    double x324 = in_ptr[323];
    double x325 = in_ptr[324];
    double x326 = in_ptr[325];
    double x327 = in_ptr[326];
    double x328 = in_ptr[327];
    double x329 = in_ptr[328];
    double x330 = in_ptr[329];
    double data1 = data_ptr[0];
    double data2 = data_ptr[1];
    double data3 = data_ptr[2];
    double data4 = data_ptr[3];
    double data5 = data_ptr[4];
    double data6 = data_ptr[5];
    double data7 = data_ptr[6];
    double data8 = data_ptr[7];
    double data9 = data_ptr[8];
    double data10 = data_ptr[9];
    double data11 = data_ptr[10];
    double data12 = data_ptr[11];
    double data13 = data_ptr[12];
    double t3 = data1-x6;
    double t4 = data2-x7;
    double t102 = exp(x57);
    double t153 = t3*x66;
    double t154 = t4*t102;
    double t2 = t153+t154;
    double t6 = data3-x8;
    double t7 = data4-x9;
    double t8 = data5-x10;
    double t9 = data6-x11;
    double t10 = data7-x12;
    double t14 = data8-x13;
    double t15 = data9-x14;
    double t109 = exp(x64);
    double t156 = t3*x73;
    double t157 = t4*x81;
    double t158 = t6*x88;
    double t159 = t7*x94;
    double t160 = t8*x99;
    double t161 = t9*x103;
    double t162 = t10*x106;
    double t163 = t14*x108;
    double t164 = t15*t109;
    double t5 = t156+t157+t158+t159+t160+t161+t162+t163+t164;
    double t107 = exp(x62);
    double t166 = t3*x71;
    double t167 = t4*x79;
    double t168 = t6*x86;
    double t169 = t7*x92;
    double t170 = t8*x97;
    double t171 = t9*x101;
    double t172 = t10*t107;
    double t11 = t166+t167+t168+t169+t170+t171+t172;
    double t105 = exp(x60);
    double t174 = t3*x69;
    double t175 = t4*x77;
    double t176 = t6*x84;
    double t177 = t7*x90;
    double t178 = t8*t105;
    double t12 = t174+t175+t176+t177+t178;
    double t103 = exp(x58);
    double t180 = t3*x67;
    double t181 = t4*x75;
    double t182 = t6*t103;
    double t13 = t180+t181+t182;
    double t110 = exp(x65);
    double t185 = t3*x74;
    double t186 = t4*x82;
    double t187 = t6*x89;
    double t188 = t7*x95;
    double t189 = t8*x100;
    double t190 = t9*x104;
    double t191 = t10*x107;
    double t192 = t14*x109;
    double t193 = t15*x110;
    double t194 = data10-x15;
    double t195 = t110*t194;
    double t16 = t185+t186+t187+t188+t189+t190+t191+t192+t193+t195;
    double t108 = exp(x63);
    double t197 = t3*x72;
    double t198 = t4*x80;
    double t199 = t6*x87;
    double t200 = t7*x93;
    double t201 = t8*x98;
    double t202 = t9*x102;
    double t203 = t10*x105;
    double t204 = t14*t108;
    double t17 = t197+t198+t199+t200+t201+t202+t203+t204;
    double t106 = exp(x61);
    double t206 = t3*x70;
    double t207 = t4*x78;
    double t208 = t6*x85;
    double t209 = t7*x91;
    double t210 = t8*x96;
    double t211 = t9*t106;
    double t18 = t206+t207+t208+t209+t210+t211;
    double t104 = exp(x59);
    double t213 = t3*x68;
    double t214 = t4*x76;
    double t215 = t6*x83;
    double t216 = t7*t104;
    double t19 = t213+t214+t215+t216;
    double t21 = data1-x16;
    double t22 = data2-x17;
    double t111 = exp(x112);
    double t230 = t21*x121;
    double t231 = t22*t111;
    double t20 = t230+t231;
    double t24 = data3-x18;
    double t25 = data4-x19;
    double t26 = data5-x20;
    double t27 = data6-x21;
    double t28 = data7-x22;
    double t32 = data8-x23;
    double t33 = data9-x24;
    double t118 = exp(x119);
    double t233 = t21*x128;
    double t234 = t22*x136;
    double t235 = t24*x143;
    double t236 = t25*x149;
    double t237 = t26*x154;
    double t238 = t27*x158;
    double t239 = t28*x161;
    double t240 = t32*x163;
    double t241 = t33*t118;
    double t23 = t233+t234+t235+t236+t237+t238+t239+t240+t241;
    double t116 = exp(x117);
    double t243 = t21*x126;
    double t244 = t22*x134;
    double t245 = t24*x141;
    double t246 = t25*x147;
    double t247 = t26*x152;
    double t248 = t27*x156;
    double t249 = t28*t116;
    double t29 = t243+t244+t245+t246+t247+t248+t249;
    double t114 = exp(x115);
    double t251 = t21*x124;
    double t252 = t22*x132;
    double t253 = t24*x139;
    double t254 = t25*x145;
    double t255 = t26*t114;
    double t30 = t251+t252+t253+t254+t255;
    double t112 = exp(x113);
    double t257 = t21*x122;
    double t258 = t22*x130;
    double t259 = t24*t112;
    double t31 = t257+t258+t259;
    double t119 = exp(x120);
    double t262 = t21*x129;
    double t263 = t22*x137;
    double t264 = t24*x144;
    double t265 = t25*x150;
    double t266 = t26*x155;
    double t267 = t27*x159;
    double t268 = t28*x162;
    double t269 = t32*x164;
    double t270 = t33*x165;
    double t271 = data10-x25;
    double t272 = t119*t271;
    double t34 = t262+t263+t264+t265+t266+t267+t268+t269+t270+t272;
    double t117 = exp(x118);
    double t274 = t21*x127;
    double t275 = t22*x135;
    double t276 = t24*x142;
    double t277 = t25*x148;
    double t278 = t26*x153;
    double t279 = t27*x157;
    double t280 = t28*x160;
    double t281 = t32*t117;
    double t35 = t274+t275+t276+t277+t278+t279+t280+t281;
    double t115 = exp(x116);
    double t283 = t21*x125;
    double t284 = t22*x133;
    double t285 = t24*x140;
    double t286 = t25*x146;
    double t287 = t26*x151;
    double t288 = t27*t115;
    double t36 = t283+t284+t285+t286+t287+t288;
    double t113 = exp(x114);
    double t290 = t21*x123;
    double t291 = t22*x131;
    double t292 = t24*x138;
    double t293 = t25*t113;
    double t37 = t290+t291+t292+t293;
    double t39 = data1-x26;
    double t40 = data2-x27;
    double t120 = exp(x167);
    double t297 = t39*x176;
    double t298 = t40*t120;
    double t38 = t297+t298;
    double t42 = data3-x28;
    double t43 = data4-x29;
    double t44 = data5-x30;
    double t45 = data6-x31;
    double t46 = data7-x32;
    double t50 = data8-x33;
    double t51 = data9-x34;
    double t127 = exp(x174);
    double t300 = t39*x183;
    double t301 = t40*x191;
    double t302 = t42*x198;
    double t303 = t43*x204;
    double t304 = t44*x209;
    double t305 = t45*x213;
    double t306 = t46*x216;
    double t307 = t50*x218;
    double t308 = t51*t127;
    double t41 = t300+t301+t302+t303+t304+t305+t306+t307+t308;
    double t125 = exp(x172);
    double t310 = t39*x181;
    double t311 = t40*x189;
    double t312 = t42*x196;
    double t313 = t43*x202;
    double t314 = t44*x207;
    double t315 = t45*x211;
    double t316 = t46*t125;
    double t47 = t310+t311+t312+t313+t314+t315+t316;
    double t123 = exp(x170);
    double t318 = t39*x179;
    double t319 = t40*x187;
    double t320 = t42*x194;
    double t321 = t43*x200;
    double t322 = t44*t123;
    double t48 = t318+t319+t320+t321+t322;
    double t121 = exp(x168);
    double t324 = t39*x177;
    double t325 = t40*x185;
    double t326 = t42*t121;
    double t49 = t324+t325+t326;
    double t128 = exp(x175);
    double t329 = t39*x184;
    double t330 = t40*x192;
    double t331 = t42*x199;
    double t332 = t43*x205;
    double t333 = t44*x210;
    double t334 = t45*x214;
    double t335 = t46*x217;
    double t336 = t50*x219;
    double t337 = t51*x220;
    double t338 = data10-x35;
    double t339 = t128*t338;
    double t52 = t329+t330+t331+t332+t333+t334+t335+t336+t337+t339;
    double t126 = exp(x173);
    double t341 = t39*x182;
    double t342 = t40*x190;
    double t343 = t42*x197;
    double t344 = t43*x203;
    double t345 = t44*x208;
    double t346 = t45*x212;
    double t347 = t46*x215;
    double t348 = t50*t126;
    double t53 = t341+t342+t343+t344+t345+t346+t347+t348;
    double t124 = exp(x171);
    double t350 = t39*x180;
    double t351 = t40*x188;
    double t352 = t42*x195;
    double t353 = t43*x201;
    double t354 = t44*x206;
    double t355 = t45*t124;
    double t54 = t350+t351+t352+t353+t354+t355;
    double t122 = exp(x169);
    double t357 = t39*x178;
    double t358 = t40*x186;
    double t359 = t42*x193;
    double t360 = t43*t122;
    double t55 = t357+t358+t359+t360;
    double t57 = data1-x36;
    double t58 = data2-x37;
    double t129 = exp(x222);
    double t364 = t57*x231;
    double t365 = t58*t129;
    double t56 = t364+t365;
    double t60 = data3-x38;
    double t61 = data4-x39;
    double t62 = data5-x40;
    double t63 = data6-x41;
    double t64 = data7-x42;
    double t68 = data8-x43;
    double t69 = data9-x44;
    double t136 = exp(x229);
    double t367 = t57*x238;
    double t368 = t58*x246;
    double t369 = t60*x253;
    double t370 = t61*x259;
    double t371 = t62*x264;
    double t372 = t63*x268;
    double t373 = t64*x271;
    double t374 = t68*x273;
    double t375 = t69*t136;
    double t59 = t367+t368+t369+t370+t371+t372+t373+t374+t375;
    double t134 = exp(x227);
    double t377 = t57*x236;
    double t378 = t58*x244;
    double t379 = t60*x251;
    double t380 = t61*x257;
    double t381 = t62*x262;
    double t382 = t63*x266;
    double t383 = t64*t134;
    double t65 = t377+t378+t379+t380+t381+t382+t383;
    double t132 = exp(x225);
    double t385 = t57*x234;
    double t386 = t58*x242;
    double t387 = t60*x249;
    double t388 = t61*x255;
    double t389 = t62*t132;
    double t66 = t385+t386+t387+t388+t389;
    double t130 = exp(x223);
    double t391 = t57*x232;
    double t392 = t58*x240;
    double t393 = t60*t130;
    double t67 = t391+t392+t393;
    double t137 = exp(x230);
    double t396 = t57*x239;
    double t397 = t58*x247;
    double t398 = t60*x254;
    double t399 = t61*x260;
    double t400 = t62*x265;
    double t401 = t63*x269;
    double t402 = t64*x272;
    double t403 = t68*x274;
    double t404 = t69*x275;
    double t405 = data10-x45;
    double t406 = t137*t405;
    double t70 = t396+t397+t398+t399+t400+t401+t402+t403+t404+t406;
    double t135 = exp(x228);
    double t408 = t57*x237;
    double t409 = t58*x245;
    double t410 = t60*x252;
    double t411 = t61*x258;
    double t412 = t62*x263;
    double t413 = t63*x267;
    double t414 = t64*x270;
    double t415 = t68*t135;
    double t71 = t408+t409+t410+t411+t412+t413+t414+t415;
    double t133 = exp(x226);
    double t417 = t57*x235;
    double t418 = t58*x243;
    double t419 = t60*x250;
    double t420 = t61*x256;
    double t421 = t62*x261;
    double t422 = t63*t133;
    double t72 = t417+t418+t419+t420+t421+t422;
    double t131 = exp(x224);
    double t424 = t57*x233;
    double t425 = t58*x241;
    double t426 = t60*x248;
    double t427 = t61*t131;
    double t73 = t424+t425+t426+t427;
    double t75 = data1-x46;
    double t76 = data2-x47;
    double t138 = exp(x277);
    double t431 = t75*x286;
    double t432 = t76*t138;
    double t74 = t431+t432;
    double t78 = data3-x48;
    double t79 = data4-x49;
    double t80 = data5-x50;
    double t81 = data6-x51;
    double t82 = data7-x52;
    double t86 = data8-x53;
    double t87 = data9-x54;
    double t145 = exp(x284);
    double t434 = t75*x293;
    double t435 = t76*x301;
    double t436 = t78*x308;
    double t437 = t79*x314;
    double t438 = t80*x319;
    double t439 = t81*x323;
    double t440 = t82*x326;
    double t441 = t86*x328;
    double t442 = t87*t145;
    double t77 = t434+t435+t436+t437+t438+t439+t440+t441+t442;
    double t143 = exp(x282);
    double t444 = t75*x291;
    double t445 = t76*x299;
    double t446 = t78*x306;
    double t447 = t79*x312;
    double t448 = t80*x317;
    double t449 = t81*x321;
    double t450 = t82*t143;
    double t83 = t444+t445+t446+t447+t448+t449+t450;
    double t141 = exp(x280);
    double t452 = t75*x289;
    double t453 = t76*x297;
    double t454 = t78*x304;
    double t455 = t79*x310;
    double t456 = t80*t141;
    double t84 = t452+t453+t454+t455+t456;
    double t139 = exp(x278);
    double t458 = t75*x287;
    double t459 = t76*x295;
    double t460 = t78*t139;
    double t85 = t458+t459+t460;
    double t146 = exp(x285);
    double t463 = t75*x294;
    double t464 = t76*x302;
    double t465 = t78*x309;
    double t466 = t79*x315;
    double t467 = t80*x320;
    double t468 = t81*x324;
    double t469 = t82*x327;
    double t470 = t86*x329;
    double t471 = t87*x330;
    double t472 = data10-x55;
    double t473 = t146*t472;
    double t88 = t463+t464+t465+t466+t467+t468+t469+t470+t471+t473;
    double t144 = exp(x283);
    double t475 = t75*x292;
    double t476 = t76*x300;
    double t477 = t78*x307;
    double t478 = t79*x313;
    double t479 = t80*x318;
    double t480 = t81*x322;
    double t481 = t82*x325;
    double t482 = t86*t144;
    double t89 = t475+t476+t477+t478+t479+t480+t481+t482;
    double t142 = exp(x281);
    double t484 = t75*x290;
    double t485 = t76*x298;
    double t486 = t78*x305;
    double t487 = t79*x311;
    double t488 = t80*x316;
    double t489 = t81*t142;
    double t90 = t484+t485+t486+t487+t488+t489;
    double t140 = exp(x279);
    double t491 = t75*x288;
    double t492 = t76*x296;
    double t493 = t78*x303;
    double t494 = t79*t140;
    double t91 = t491+t492+t493+t494;
    double t92 = x56*2.0;
    double t93 = exp(t92);
    double t94 = x111*2.0;
    double t95 = exp(t94);
    double t96 = x166*2.0;
    double t97 = exp(t96);
    double t98 = x221*2.0;
    double t99 = exp(t98);
    double t100 = x276*2.0;
    double t101 = exp(t100);
    double t147 = exp(x1);
    double t148 = exp(x2);
    double t149 = exp(x3);
    double t150 = exp(x4);
    double t151 = exp(x5);
    double t152 = t147+t148+t149+t150+t151;
    double t155 = t2*t2;
    double t165 = t5*t5;
    double t173 = t11*t11;
    double t179 = t12*t12;
    double t183 = t13*t13;
    double t184 = t3*t3;
    double t196 = t16*t16;
    double t205 = t17*t17;
    double t212 = t18*t18;
    double t217 = t19*t19;
    double t220 = t155*(1.0/2.0);
    double t221 = t165*(1.0/2.0);
    double t222 = t173*(1.0/2.0);
    double t223 = t179*(1.0/2.0);
    double t224 = t183*(1.0/2.0);
    double t225 = t93*t184*(1.0/2.0);
    double t226 = t196*(1.0/2.0);
    double t227 = t205*(1.0/2.0);
    double t228 = t212*(1.0/2.0);
    double t229 = t217*(1.0/2.0);
    double t218 = -data11-t220-t221-t222-t223-t224-t225-t226-t227-t228-t229+x1+x56+x57+x58+x59+x60+x61+x62+x63+x64+x65;
    double t219 = exp(t218);
    double t232 = t20*t20;
    double t242 = t23*t23;
    double t250 = t29*t29;
    double t256 = t30*t30;
    double t260 = t31*t31;
    double t261 = t21*t21;
    double t273 = t34*t34;
    double t282 = t35*t35;
    double t289 = t36*t36;
    double t294 = t37*t37;
    double t500 = t232*(1.0/2.0);
    double t501 = t242*(1.0/2.0);
    double t502 = t250*(1.0/2.0);
    double t503 = t256*(1.0/2.0);
    double t504 = t260*(1.0/2.0);
    double t505 = t95*t261*(1.0/2.0);
    double t506 = t273*(1.0/2.0);
    double t507 = t282*(1.0/2.0);
    double t508 = t289*(1.0/2.0);
    double t509 = t294*(1.0/2.0);
    double t295 = -data11-t500-t501-t502-t503-t504-t505-t506-t507-t508-t509+x2+x111+x112+x113+x114+x115+x116+x117+x118+x119+x120;
    double t296 = exp(t295);
    double t299 = t38*t38;
    double t309 = t41*t41;
    double t317 = t47*t47;
    double t323 = t48*t48;
    double t327 = t49*t49;
    double t328 = t39*t39;
    double t340 = t52*t52;
    double t349 = t53*t53;
    double t356 = t54*t54;
    double t361 = t55*t55;
    double t510 = t299*(1.0/2.0);
    double t511 = t309*(1.0/2.0);
    double t512 = t317*(1.0/2.0);
    double t513 = t323*(1.0/2.0);
    double t514 = t327*(1.0/2.0);
    double t515 = t97*t328*(1.0/2.0);
    double t516 = t340*(1.0/2.0);
    double t517 = t349*(1.0/2.0);
    double t518 = t356*(1.0/2.0);
    double t519 = t361*(1.0/2.0);
    double t362 = -data11-t510-t511-t512-t513-t514-t515-t516-t517-t518-t519+x3+x166+x167+x168+x169+x170+x171+x172+x173+x174+x175;
    double t363 = exp(t362);
    double t366 = t56*t56;
    double t376 = t59*t59;
    double t384 = t65*t65;
    double t390 = t66*t66;
    double t394 = t67*t67;
    double t395 = t57*t57;
    double t407 = t70*t70;
    double t416 = t71*t71;
    double t423 = t72*t72;
    double t428 = t73*t73;
    double t520 = t366*(1.0/2.0);
    double t521 = t376*(1.0/2.0);
    double t522 = t384*(1.0/2.0);
    double t523 = t390*(1.0/2.0);
    double t524 = t394*(1.0/2.0);
    double t525 = t99*t395*(1.0/2.0);
    double t526 = t407*(1.0/2.0);
    double t527 = t416*(1.0/2.0);
    double t528 = t423*(1.0/2.0);
    double t529 = t428*(1.0/2.0);
    double t429 = -data11-t520-t521-t522-t523-t524-t525-t526-t527-t528-t529+x4+x221+x222+x223+x224+x225+x226+x227+x228+x229+x230;
    double t430 = exp(t429);
    double t433 = t74*t74;
    double t443 = t77*t77;
    double t451 = t83*t83;
    double t457 = t84*t84;
    double t461 = t85*t85;
    double t462 = t75*t75;
    double t474 = t88*t88;
    double t483 = t89*t89;
    double t490 = t90*t90;
    double t495 = t91*t91;
    double t530 = t433*(1.0/2.0);
    double t531 = t443*(1.0/2.0);
    double t532 = t451*(1.0/2.0);
    double t533 = t457*(1.0/2.0);
    double t534 = t461*(1.0/2.0);
    double t535 = t101*t462*(1.0/2.0);
    double t536 = t474*(1.0/2.0);
    double t537 = t483*(1.0/2.0);
    double t538 = t490*(1.0/2.0);
    double t539 = t495*(1.0/2.0);
    double t496 = -data11-t530-t531-t532-t533-t534-t535-t536-t537-t538-t539+x5+x276+x277+x278+x279+x280+x281+x282+x283+x284+x285;
    double t497 = exp(t496);
    double t498 = t219+t296+t363+t430+t497;
    double t499 = 1.0/t152;
    double t540 = 1.0/t498;
    double t541 = data1*2.0;
    double t542 = exp(x56);
    double t543 = x57*2.0;
    double t544 = exp(t543);
    double t545 = x58*2.0;
    double t546 = exp(t545);
    double t547 = x59*2.0;
    double t548 = exp(t547);
    double t549 = x60*2.0;
    double t550 = exp(t549);
    double t551 = x61*2.0;
    double t552 = exp(t551);
    double t553 = x62*2.0;
    double t554 = exp(t553);
    double t555 = x63*2.0;
    double t556 = exp(t555);
    double t557 = x64*2.0;
    double t558 = exp(t557);
    double t559 = x65*2.0;
    double t560 = exp(t559);
    double t561 = exp(x111);
    double t562 = x112*2.0;
    double t563 = exp(t562);
    double t564 = x113*2.0;
    double t565 = exp(t564);
    double t566 = x114*2.0;
    double t567 = exp(t566);
    double t568 = x115*2.0;
    double t569 = exp(t568);
    double t570 = x116*2.0;
    double t571 = exp(t570);
    double t572 = x117*2.0;
    double t573 = exp(t572);
    double t574 = x118*2.0;
    double t575 = exp(t574);
    double t576 = x119*2.0;
    double t577 = exp(t576);
    double t578 = x120*2.0;
    double t579 = exp(t578);
    double t580 = exp(x166);
    double t581 = x167*2.0;
    double t582 = exp(t581);
    double t583 = x168*2.0;
    double t584 = exp(t583);
    double t585 = x169*2.0;
    double t586 = exp(t585);
    double t587 = x170*2.0;
    double t588 = exp(t587);
    double t589 = x171*2.0;
    double t590 = exp(t589);
    double t591 = x172*2.0;
    double t592 = exp(t591);
    double t593 = x173*2.0;
    double t594 = exp(t593);
    double t595 = x174*2.0;
    double t596 = exp(t595);
    double t597 = x175*2.0;
    double t598 = exp(t597);
    double t599 = exp(x221);
    double t600 = x222*2.0;
    double t601 = exp(t600);
    double t602 = x223*2.0;
    double t603 = exp(t602);
    double t604 = x224*2.0;
    double t605 = exp(t604);
    double t606 = x225*2.0;
    double t607 = exp(t606);
    double t608 = x226*2.0;
    double t609 = exp(t608);
    double t610 = x227*2.0;
    double t611 = exp(t610);
    double t612 = x228*2.0;
    double t613 = exp(t612);
    double t614 = x229*2.0;
    double t615 = exp(t614);
    double t616 = x230*2.0;
    double t617 = exp(t616);
    double t618 = exp(x276);
    double t619 = x277*2.0;
    double t620 = exp(t619);
    double t621 = x278*2.0;
    double t622 = exp(t621);
    double t623 = x279*2.0;
    double t624 = exp(t623);
    double t625 = x280*2.0;
    double t626 = exp(t625);
    double t627 = x281*2.0;
    double t628 = exp(t627);
    double t629 = x282*2.0;
    double t630 = exp(t629);
    double t631 = x283*2.0;
    double t632 = exp(t631);
    double t633 = x284*2.0;
    double t634 = exp(t633);
    double t635 = x285*2.0;
    double t636 = exp(t635);
  out_ptr[0] = data11-log(t152)+log(t498)+data12*(t93+t544+t546+t548+t550+t552+t554+t556+t558+t560+x66*x66+x67*x67+x68*x68+x69*x69+x70*x70+x71*x71+x72*x72+x73*x73+x74*x74+x75*x75+x76*x76+x77*x77+x78*x78+x79*x79+x80*x80+x81*x81+x82*x82+x83*x83+x84*x84+x85*x85+x86*x86+x87*x87+x88*x88+x89*x89+x90*x90+x91*x91+x92*x92+x93*x93+x94*x94+x95*x95+x96*x96+x97*x97+x98*x98+x99*x99+x100*x100+x101*x101+x102*x102+x103*x103+x104*x104+x105*x105+x106*x106+x107*x107+x108*x108+x109*x109+x110*x110)+data12*(t95+t563+t565+t567+t569+t571+t573+t575+t577+t579+x121*x121+x122*x122+x123*x123+x124*x124+x125*x125+x126*x126+x127*x127+x128*x128+x129*x129+x130*x130+x131*x131+x132*x132+x133*x133+x134*x134+x135*x135+x136*x136+x137*x137+x138*x138+x139*x139+x140*x140+x141*x141+x142*x142+x143*x143+x144*x144+x145*x145+x146*x146+x147*x147+x148*x148+x149*x149+x150*x150+x151*x151+x152*x152+x153*x153+x154*x154+x155*x155+x156*x156+x157*x157+x158*x158+x159*x159+x160*x160+x161*x161+x162*x162+x163*x163+x164*x164+x165*x165)+data12*(t97+t582+t584+t586+t588+t590+t592+t594+t596+t598+x176*x176+x177*x177+x178*x178+x179*x179+x180*x180+x181*x181+x182*x182+x183*x183+x184*x184+x185*x185+x186*x186+x187*x187+x188*x188+x189*x189+x190*x190+x191*x191+x192*x192+x193*x193+x194*x194+x195*x195+x196*x196+x197*x197+x198*x198+x199*x199+x200*x200+x201*x201+x202*x202+x203*x203+x204*x204+x205*x205+x206*x206+x207*x207+x208*x208+x209*x209+x210*x210+x211*x211+x212*x212+x213*x213+x214*x214+x215*x215+x216*x216+x217*x217+x218*x218+x219*x219+x220*x220)+data12*(t99+t601+t603+t605+t607+t609+t611+t613+t615+t617+x231*x231+x232*x232+x233*x233+x234*x234+x235*x235+x236*x236+x237*x237+x238*x238+x239*x239+x240*x240+x241*x241+x242*x242+x243*x243+x244*x244+x245*x245+x246*x246+x247*x247+x248*x248+x249*x249+x250*x250+x251*x251+x252*x252+x253*x253+x254*x254+x255*x255+x256*x256+x257*x257+x258*x258+x259*x259+x260*x260+x261*x261+x262*x262+x263*x263+x264*x264+x265*x265+x266*x266+x267*x267+x268*x268+x269*x269+x270*x270+x271*x271+x272*x272+x273*x273+x274*x274+x275*x275)+data12*(t101+t620+t622+t624+t626+t628+t630+t632+t634+t636+x286*x286+x287*x287+x288*x288+x289*x289+x290*x290+x291*x291+x292*x292+x293*x293+x294*x294+x295*x295+x296*x296+x297*x297+x298*x298+x299*x299+x300*x300+x301*x301+x302*x302+x303*x303+x304*x304+x305*x305+x306*x306+x307*x307+x308*x308+x309*x309+x310*x310+x311*x311+x312*x312+x313*x313+x314*x314+x315*x315+x316*x316+x317*x317+x318*x318+x319*x319+x320*x320+x321*x321+x322*x322+x323*x323+x324*x324+x325*x325+x326*x326+x327*x327+x328*x328+x329*x329+x330*x330)-data13*(t102+t103+t104+t105+t106+t107+t108+t109+t110+t542)-data13*(t111+t112+t113+t114+t115+t116+t117+t118+t119+t561)-data13*(t120+t121+t122+t123+t124+t125+t126+t127+t128+t580)-data13*(t129+t130+t131+t132+t133+t134+t135+t136+t137+t599)-data13*(t138+t139+t140+t141+t142+t143+t144+t145+t146+t618);
  out_ptr[1] = -t147*t499+t219*t540;
  out_ptr[2] = -t148*t499+t296*t540;
  out_ptr[3] = -t149*t499+t363*t540;
  out_ptr[4] = -t150*t499+t430*t540;
  out_ptr[5] = -t151*t499+t497*t540;
  out_ptr[6] = t219*t540*(t2*x66+t5*x73+t13*x67+t12*x69+t11*x71+t19*x68+t18*x70+t17*x72+t16*x74+t93*(t541-x6*2.0)*(1.0/2.0));
  out_ptr[7] = t219*t540*(t2*t102+t5*x81+t13*x75+t12*x77+t11*x79+t19*x76+t18*x78+t17*x80+t16*x82);
  out_ptr[8] = t219*t540*(t13*t103+t5*x88+t12*x84+t11*x86+t19*x83+t18*x85+t17*x87+t16*x89);
  out_ptr[9] = t219*t540*(t19*t104+t5*x94+t12*x90+t11*x92+t18*x91+t17*x93+t16*x95);
  out_ptr[10] = t219*t540*(t12*t105+t5*x99+t11*x97+t18*x96+t17*x98+t16*x100);
  out_ptr[11] = t219*t540*(t18*t106+t5*x103+t11*x101+t17*x102+t16*x104);
  out_ptr[12] = t219*t540*(t11*t107+t5*x106+t17*x105+t16*x107);
  out_ptr[13] = t219*t540*(t17*t108+t5*x108+t16*x109);
  out_ptr[14] = t219*t540*(t5*t109+t16*x110);
  out_ptr[15] = t16*t110*t219*t540;
  out_ptr[16] = t296*t540*(t20*x121+t23*x128+t31*x122+t30*x124+t29*x126+t37*x123+t36*x125+t35*x127+t34*x129+t95*(t541-x16*2.0)*(1.0/2.0));
  out_ptr[17] = t296*t540*(t20*t111+t23*x136+t31*x130+t30*x132+t29*x134+t37*x131+t36*x133+t35*x135+t34*x137);
  out_ptr[18] = t296*t540*(t31*t112+t23*x143+t30*x139+t29*x141+t37*x138+t36*x140+t35*x142+t34*x144);
  out_ptr[19] = t296*t540*(t37*t113+t23*x149+t30*x145+t29*x147+t36*x146+t35*x148+t34*x150);
  out_ptr[20] = t296*t540*(t30*t114+t23*x154+t29*x152+t36*x151+t35*x153+t34*x155);
  out_ptr[21] = t296*t540*(t36*t115+t23*x158+t29*x156+t35*x157+t34*x159);
  out_ptr[22] = t296*t540*(t29*t116+t23*x161+t35*x160+t34*x162);
  out_ptr[23] = t296*t540*(t35*t117+t23*x163+t34*x164);
  out_ptr[24] = t296*t540*(t23*t118+t34*x165);
  out_ptr[25] = t34*t119*t296*t540;
  out_ptr[26] = t363*t540*(t38*x176+t41*x183+t49*x177+t48*x179+t47*x181+t55*x178+t54*x180+t53*x182+t52*x184+t97*(t541-x26*2.0)*(1.0/2.0));
  out_ptr[27] = t363*t540*(t38*t120+t41*x191+t49*x185+t48*x187+t47*x189+t55*x186+t54*x188+t53*x190+t52*x192);
  out_ptr[28] = t363*t540*(t49*t121+t41*x198+t48*x194+t47*x196+t55*x193+t54*x195+t53*x197+t52*x199);
  out_ptr[29] = t363*t540*(t55*t122+t41*x204+t48*x200+t47*x202+t54*x201+t53*x203+t52*x205);
  out_ptr[30] = t363*t540*(t48*t123+t41*x209+t47*x207+t54*x206+t53*x208+t52*x210);
  out_ptr[31] = t363*t540*(t54*t124+t41*x213+t47*x211+t53*x212+t52*x214);
  out_ptr[32] = t363*t540*(t47*t125+t41*x216+t53*x215+t52*x217);
  out_ptr[33] = t363*t540*(t53*t126+t41*x218+t52*x219);
  out_ptr[34] = t363*t540*(t41*t127+t52*x220);
  out_ptr[35] = t52*t128*t363*t540;
  out_ptr[36] = t430*t540*(t56*x231+t59*x238+t67*x232+t66*x234+t65*x236+t73*x233+t72*x235+t71*x237+t70*x239+t99*(t541-x36*2.0)*(1.0/2.0));
  out_ptr[37] = t430*t540*(t56*t129+t59*x246+t67*x240+t66*x242+t65*x244+t73*x241+t72*x243+t71*x245+t70*x247);
  out_ptr[38] = t430*t540*(t67*t130+t59*x253+t66*x249+t65*x251+t73*x248+t72*x250+t71*x252+t70*x254);
  out_ptr[39] = t430*t540*(t73*t131+t59*x259+t66*x255+t65*x257+t72*x256+t71*x258+t70*x260);
  out_ptr[40] = t430*t540*(t66*t132+t59*x264+t65*x262+t72*x261+t71*x263+t70*x265);
  out_ptr[41] = t430*t540*(t72*t133+t59*x268+t65*x266+t71*x267+t70*x269);
  out_ptr[42] = t430*t540*(t65*t134+t59*x271+t71*x270+t70*x272);
  out_ptr[43] = t430*t540*(t71*t135+t59*x273+t70*x274);
  out_ptr[44] = t430*t540*(t59*t136+t70*x275);
  out_ptr[45] = t70*t137*t430*t540;
  out_ptr[46] = t497*t540*(t74*x286+t77*x293+t85*x287+t84*x289+t83*x291+t91*x288+t90*x290+t89*x292+t88*x294+t101*(t541-x46*2.0)*(1.0/2.0));
  out_ptr[47] = t497*t540*(t74*t138+t77*x301+t85*x295+t84*x297+t83*x299+t91*x296+t90*x298+t89*x300+t88*x302);
  out_ptr[48] = t497*t540*(t85*t139+t77*x308+t84*x304+t83*x306+t91*x303+t90*x305+t89*x307+t88*x309);
  out_ptr[49] = t497*t540*(t91*t140+t77*x314+t84*x310+t83*x312+t90*x311+t89*x313+t88*x315);
  out_ptr[50] = t497*t540*(t84*t141+t77*x319+t83*x317+t90*x316+t89*x318+t88*x320);
  out_ptr[51] = t497*t540*(t90*t142+t77*x323+t83*x321+t89*x322+t88*x324);
  out_ptr[52] = t497*t540*(t83*t143+t77*x326+t89*x325+t88*x327);
  out_ptr[53] = t497*t540*(t89*t144+t77*x328+t88*x329);
  out_ptr[54] = t497*t540*(t77*t145+t88*x330);
  out_ptr[55] = t88*t146*t497*t540;
  out_ptr[56] = data12*t93*2.0-data13*t542-t219*t540*(t93*t184-1.0);
  out_ptr[57] = -data13*t102+data12*t544*2.0-t219*t540*(t2*t4*t102-1.0);
  out_ptr[58] = -data13*t103+data12*t546*2.0-t219*t540*(t6*t13*t103-1.0);
  out_ptr[59] = -data13*t104+data12*t548*2.0-t219*t540*(t7*t19*t104-1.0);
  out_ptr[60] = -data13*t105+data12*t550*2.0-t219*t540*(t8*t12*t105-1.0);
  out_ptr[61] = -data13*t106+data12*t552*2.0-t219*t540*(t9*t18*t106-1.0);
  out_ptr[62] = -data13*t107+data12*t554*2.0-t219*t540*(t10*t11*t107-1.0);
  out_ptr[63] = -data13*t108+data12*t556*2.0-t219*t540*(t14*t17*t108-1.0);
  out_ptr[64] = -data13*t109+data12*t558*2.0-t219*t540*(t5*t15*t109-1.0);
  out_ptr[65] = -data13*t110+data12*t560*2.0-t219*t540*(t16*t110*t194-1.0);
  out_ptr[66] = data12*x66*2.0-t2*t3*t219*t540;
  out_ptr[67] = data12*x67*2.0-t3*t13*t219*t540;
  out_ptr[68] = data12*x68*2.0-t3*t19*t219*t540;
  out_ptr[69] = data12*x69*2.0-t3*t12*t219*t540;
  out_ptr[70] = data12*x70*2.0-t3*t18*t219*t540;
  out_ptr[71] = data12*x71*2.0-t3*t11*t219*t540;
  out_ptr[72] = data12*x72*2.0-t3*t17*t219*t540;
  out_ptr[73] = data12*x73*2.0-t3*t5*t219*t540;
  out_ptr[74] = data12*x74*2.0-t3*t16*t219*t540;
  out_ptr[75] = data12*x75*2.0-t4*t13*t219*t540;
  out_ptr[76] = data12*x76*2.0-t4*t19*t219*t540;
  out_ptr[77] = data12*x77*2.0-t4*t12*t219*t540;
  out_ptr[78] = data12*x78*2.0-t4*t18*t219*t540;
  out_ptr[79] = data12*x79*2.0-t4*t11*t219*t540;
  out_ptr[80] = data12*x80*2.0-t4*t17*t219*t540;
  out_ptr[81] = data12*x81*2.0-t4*t5*t219*t540;
  out_ptr[82] = data12*x82*2.0-t4*t16*t219*t540;
  out_ptr[83] = data12*x83*2.0-t6*t19*t219*t540;
  out_ptr[84] = data12*x84*2.0-t6*t12*t219*t540;
  out_ptr[85] = data12*x85*2.0-t6*t18*t219*t540;
  out_ptr[86] = data12*x86*2.0-t6*t11*t219*t540;
  out_ptr[87] = data12*x87*2.0-t6*t17*t219*t540;
  out_ptr[88] = data12*x88*2.0-t5*t6*t219*t540;
  out_ptr[89] = data12*x89*2.0-t6*t16*t219*t540;
  out_ptr[90] = data12*x90*2.0-t7*t12*t219*t540;
  out_ptr[91] = data12*x91*2.0-t7*t18*t219*t540;
  out_ptr[92] = data12*x92*2.0-t7*t11*t219*t540;
  out_ptr[93] = data12*x93*2.0-t7*t17*t219*t540;
  out_ptr[94] = data12*x94*2.0-t5*t7*t219*t540;
  out_ptr[95] = data12*x95*2.0-t7*t16*t219*t540;
  out_ptr[96] = data12*x96*2.0-t8*t18*t219*t540;
  out_ptr[97] = data12*x97*2.0-t8*t11*t219*t540;
  out_ptr[98] = data12*x98*2.0-t8*t17*t219*t540;
  out_ptr[99] = data12*x99*2.0-t5*t8*t219*t540;
  out_ptr[100] = data12*x100*2.0-t8*t16*t219*t540;
  out_ptr[101] = data12*x101*2.0-t9*t11*t219*t540;
  out_ptr[102] = data12*x102*2.0-t9*t17*t219*t540;
  out_ptr[103] = data12*x103*2.0-t5*t9*t219*t540;
  out_ptr[104] = data12*x104*2.0-t9*t16*t219*t540;
  out_ptr[105] = data12*x105*2.0-t10*t17*t219*t540;
  out_ptr[106] = data12*x106*2.0-t5*t10*t219*t540;
  out_ptr[107] = data12*x107*2.0-t10*t16*t219*t540;
  out_ptr[108] = data12*x108*2.0-t5*t14*t219*t540;
  out_ptr[109] = data12*x109*2.0-t14*t16*t219*t540;
  out_ptr[110] = data12*x110*2.0-t15*t16*t219*t540;
  out_ptr[111] = data12*t95*2.0-data13*t561-t296*t540*(t95*t261-1.0);
  out_ptr[112] = -data13*t111+data12*t563*2.0-t296*t540*(t20*t22*t111-1.0);
  out_ptr[113] = -data13*t112+data12*t565*2.0-t296*t540*(t24*t31*t112-1.0);
  out_ptr[114] = -data13*t113+data12*t567*2.0-t296*t540*(t25*t37*t113-1.0);
  out_ptr[115] = -data13*t114+data12*t569*2.0-t296*t540*(t26*t30*t114-1.0);
  out_ptr[116] = -data13*t115+data12*t571*2.0-t296*t540*(t27*t36*t115-1.0);
  out_ptr[117] = -data13*t116+data12*t573*2.0-t296*t540*(t28*t29*t116-1.0);
  out_ptr[118] = -data13*t117+data12*t575*2.0-t296*t540*(t32*t35*t117-1.0);
  out_ptr[119] = -data13*t118+data12*t577*2.0-t296*t540*(t23*t33*t118-1.0);
  out_ptr[120] = -data13*t119+data12*t579*2.0-t296*t540*(t34*t119*t271-1.0);
  out_ptr[121] = data12*x121*2.0-t20*t21*t296*t540;
  out_ptr[122] = data12*x122*2.0-t21*t31*t296*t540;
  out_ptr[123] = data12*x123*2.0-t21*t37*t296*t540;
  out_ptr[124] = data12*x124*2.0-t21*t30*t296*t540;
  out_ptr[125] = data12*x125*2.0-t21*t36*t296*t540;
  out_ptr[126] = data12*x126*2.0-t21*t29*t296*t540;
  out_ptr[127] = data12*x127*2.0-t21*t35*t296*t540;
  out_ptr[128] = data12*x128*2.0-t21*t23*t296*t540;
  out_ptr[129] = data12*x129*2.0-t21*t34*t296*t540;
  out_ptr[130] = data12*x130*2.0-t22*t31*t296*t540;
  out_ptr[131] = data12*x131*2.0-t22*t37*t296*t540;
  out_ptr[132] = data12*x132*2.0-t22*t30*t296*t540;
  out_ptr[133] = data12*x133*2.0-t22*t36*t296*t540;
  out_ptr[134] = data12*x134*2.0-t22*t29*t296*t540;
  out_ptr[135] = data12*x135*2.0-t22*t35*t296*t540;
  out_ptr[136] = data12*x136*2.0-t22*t23*t296*t540;
  out_ptr[137] = data12*x137*2.0-t22*t34*t296*t540;
  out_ptr[138] = data12*x138*2.0-t24*t37*t296*t540;
  out_ptr[139] = data12*x139*2.0-t24*t30*t296*t540;
  out_ptr[140] = data12*x140*2.0-t24*t36*t296*t540;
  out_ptr[141] = data12*x141*2.0-t24*t29*t296*t540;
  out_ptr[142] = data12*x142*2.0-t24*t35*t296*t540;
  out_ptr[143] = data12*x143*2.0-t23*t24*t296*t540;
  out_ptr[144] = data12*x144*2.0-t24*t34*t296*t540;
  out_ptr[145] = data12*x145*2.0-t25*t30*t296*t540;
  out_ptr[146] = data12*x146*2.0-t25*t36*t296*t540;
  out_ptr[147] = data12*x147*2.0-t25*t29*t296*t540;
  out_ptr[148] = data12*x148*2.0-t25*t35*t296*t540;
  out_ptr[149] = data12*x149*2.0-t23*t25*t296*t540;
  out_ptr[150] = data12*x150*2.0-t25*t34*t296*t540;
  out_ptr[151] = data12*x151*2.0-t26*t36*t296*t540;
  out_ptr[152] = data12*x152*2.0-t26*t29*t296*t540;
  out_ptr[153] = data12*x153*2.0-t26*t35*t296*t540;
  out_ptr[154] = data12*x154*2.0-t23*t26*t296*t540;
  out_ptr[155] = data12*x155*2.0-t26*t34*t296*t540;
  out_ptr[156] = data12*x156*2.0-t27*t29*t296*t540;
  out_ptr[157] = data12*x157*2.0-t27*t35*t296*t540;
  out_ptr[158] = data12*x158*2.0-t23*t27*t296*t540;
  out_ptr[159] = data12*x159*2.0-t27*t34*t296*t540;
  out_ptr[160] = data12*x160*2.0-t28*t35*t296*t540;
  out_ptr[161] = data12*x161*2.0-t23*t28*t296*t540;
  out_ptr[162] = data12*x162*2.0-t28*t34*t296*t540;
  out_ptr[163] = data12*x163*2.0-t23*t32*t296*t540;
  out_ptr[164] = data12*x164*2.0-t32*t34*t296*t540;
  out_ptr[165] = data12*x165*2.0-t33*t34*t296*t540;
  out_ptr[166] = data12*t97*2.0-data13*t580-t363*t540*(t97*t328-1.0);
  out_ptr[167] = -data13*t120+data12*t582*2.0-t363*t540*(t38*t40*t120-1.0);
  out_ptr[168] = -data13*t121+data12*t584*2.0-t363*t540*(t42*t49*t121-1.0);
  out_ptr[169] = -data13*t122+data12*t586*2.0-t363*t540*(t43*t55*t122-1.0);
  out_ptr[170] = -data13*t123+data12*t588*2.0-t363*t540*(t44*t48*t123-1.0);
  out_ptr[171] = -data13*t124+data12*t590*2.0-t363*t540*(t45*t54*t124-1.0);
  out_ptr[172] = -data13*t125+data12*t592*2.0-t363*t540*(t46*t47*t125-1.0);
  out_ptr[173] = -data13*t126+data12*t594*2.0-t363*t540*(t50*t53*t126-1.0);
  out_ptr[174] = -data13*t127+data12*t596*2.0-t363*t540*(t41*t51*t127-1.0);
  out_ptr[175] = -data13*t128+data12*t598*2.0-t363*t540*(t52*t128*t338-1.0);
  out_ptr[176] = data12*x176*2.0-t38*t39*t363*t540;
  out_ptr[177] = data12*x177*2.0-t39*t49*t363*t540;
  out_ptr[178] = data12*x178*2.0-t39*t55*t363*t540;
  out_ptr[179] = data12*x179*2.0-t39*t48*t363*t540;
  out_ptr[180] = data12*x180*2.0-t39*t54*t363*t540;
  out_ptr[181] = data12*x181*2.0-t39*t47*t363*t540;
  out_ptr[182] = data12*x182*2.0-t39*t53*t363*t540;
  out_ptr[183] = data12*x183*2.0-t39*t41*t363*t540;
  out_ptr[184] = data12*x184*2.0-t39*t52*t363*t540;
  out_ptr[185] = data12*x185*2.0-t40*t49*t363*t540;
  out_ptr[186] = data12*x186*2.0-t40*t55*t363*t540;
  out_ptr[187] = data12*x187*2.0-t40*t48*t363*t540;
  out_ptr[188] = data12*x188*2.0-t40*t54*t363*t540;
  out_ptr[189] = data12*x189*2.0-t40*t47*t363*t540;
  out_ptr[190] = data12*x190*2.0-t40*t53*t363*t540;
  out_ptr[191] = data12*x191*2.0-t40*t41*t363*t540;
  out_ptr[192] = data12*x192*2.0-t40*t52*t363*t540;
  out_ptr[193] = data12*x193*2.0-t42*t55*t363*t540;
  out_ptr[194] = data12*x194*2.0-t42*t48*t363*t540;
  out_ptr[195] = data12*x195*2.0-t42*t54*t363*t540;
  out_ptr[196] = data12*x196*2.0-t42*t47*t363*t540;
  out_ptr[197] = data12*x197*2.0-t42*t53*t363*t540;
  out_ptr[198] = data12*x198*2.0-t41*t42*t363*t540;
  out_ptr[199] = data12*x199*2.0-t42*t52*t363*t540;
  out_ptr[200] = data12*x200*2.0-t43*t48*t363*t540;
  out_ptr[201] = data12*x201*2.0-t43*t54*t363*t540;
  out_ptr[202] = data12*x202*2.0-t43*t47*t363*t540;
  out_ptr[203] = data12*x203*2.0-t43*t53*t363*t540;
  out_ptr[204] = data12*x204*2.0-t41*t43*t363*t540;
  out_ptr[205] = data12*x205*2.0-t43*t52*t363*t540;
  out_ptr[206] = data12*x206*2.0-t44*t54*t363*t540;
  out_ptr[207] = data12*x207*2.0-t44*t47*t363*t540;
  out_ptr[208] = data12*x208*2.0-t44*t53*t363*t540;
  out_ptr[209] = data12*x209*2.0-t41*t44*t363*t540;
  out_ptr[210] = data12*x210*2.0-t44*t52*t363*t540;
  out_ptr[211] = data12*x211*2.0-t45*t47*t363*t540;
  out_ptr[212] = data12*x212*2.0-t45*t53*t363*t540;
  out_ptr[213] = data12*x213*2.0-t41*t45*t363*t540;
  out_ptr[214] = data12*x214*2.0-t45*t52*t363*t540;
  out_ptr[215] = data12*x215*2.0-t46*t53*t363*t540;
  out_ptr[216] = data12*x216*2.0-t41*t46*t363*t540;
  out_ptr[217] = data12*x217*2.0-t46*t52*t363*t540;
  out_ptr[218] = data12*x218*2.0-t41*t50*t363*t540;
  out_ptr[219] = data12*x219*2.0-t50*t52*t363*t540;
  out_ptr[220] = data12*x220*2.0-t51*t52*t363*t540;
  out_ptr[221] = data12*t99*2.0-data13*t599-t430*t540*(t99*t395-1.0);
  out_ptr[222] = -data13*t129+data12*t601*2.0-t430*t540*(t56*t58*t129-1.0);
  out_ptr[223] = -data13*t130+data12*t603*2.0-t430*t540*(t60*t67*t130-1.0);
  out_ptr[224] = -data13*t131+data12*t605*2.0-t430*t540*(t61*t73*t131-1.0);
  out_ptr[225] = -data13*t132+data12*t607*2.0-t430*t540*(t62*t66*t132-1.0);
  out_ptr[226] = -data13*t133+data12*t609*2.0-t430*t540*(t63*t72*t133-1.0);
  out_ptr[227] = -data13*t134+data12*t611*2.0-t430*t540*(t64*t65*t134-1.0);
  out_ptr[228] = -data13*t135+data12*t613*2.0-t430*t540*(t68*t71*t135-1.0);
  out_ptr[229] = -data13*t136+data12*t615*2.0-t430*t540*(t59*t69*t136-1.0);
  out_ptr[230] = -data13*t137+data12*t617*2.0-t430*t540*(t70*t137*t405-1.0);
  out_ptr[231] = data12*x231*2.0-t56*t57*t430*t540;
  out_ptr[232] = data12*x232*2.0-t57*t67*t430*t540;
  out_ptr[233] = data12*x233*2.0-t57*t73*t430*t540;
  out_ptr[234] = data12*x234*2.0-t57*t66*t430*t540;
  out_ptr[235] = data12*x235*2.0-t57*t72*t430*t540;
  out_ptr[236] = data12*x236*2.0-t57*t65*t430*t540;
  out_ptr[237] = data12*x237*2.0-t57*t71*t430*t540;
  out_ptr[238] = data12*x238*2.0-t57*t59*t430*t540;
  out_ptr[239] = data12*x239*2.0-t57*t70*t430*t540;
  out_ptr[240] = data12*x240*2.0-t58*t67*t430*t540;
  out_ptr[241] = data12*x241*2.0-t58*t73*t430*t540;
  out_ptr[242] = data12*x242*2.0-t58*t66*t430*t540;
  out_ptr[243] = data12*x243*2.0-t58*t72*t430*t540;
  out_ptr[244] = data12*x244*2.0-t58*t65*t430*t540;
  out_ptr[245] = data12*x245*2.0-t58*t71*t430*t540;
  out_ptr[246] = data12*x246*2.0-t58*t59*t430*t540;
  out_ptr[247] = data12*x247*2.0-t58*t70*t430*t540;
  out_ptr[248] = data12*x248*2.0-t60*t73*t430*t540;
  out_ptr[249] = data12*x249*2.0-t60*t66*t430*t540;
  out_ptr[250] = data12*x250*2.0-t60*t72*t430*t540;
  out_ptr[251] = data12*x251*2.0-t60*t65*t430*t540;
  out_ptr[252] = data12*x252*2.0-t60*t71*t430*t540;
  out_ptr[253] = data12*x253*2.0-t59*t60*t430*t540;
  out_ptr[254] = data12*x254*2.0-t60*t70*t430*t540;
  out_ptr[255] = data12*x255*2.0-t61*t66*t430*t540;
  out_ptr[256] = data12*x256*2.0-t61*t72*t430*t540;
  out_ptr[257] = data12*x257*2.0-t61*t65*t430*t540;
  out_ptr[258] = data12*x258*2.0-t61*t71*t430*t540;
  out_ptr[259] = data12*x259*2.0-t59*t61*t430*t540;
  out_ptr[260] = data12*x260*2.0-t61*t70*t430*t540;
  out_ptr[261] = data12*x261*2.0-t62*t72*t430*t540;
  out_ptr[262] = data12*x262*2.0-t62*t65*t430*t540;
  out_ptr[263] = data12*x263*2.0-t62*t71*t430*t540;
  out_ptr[264] = data12*x264*2.0-t59*t62*t430*t540;
  out_ptr[265] = data12*x265*2.0-t62*t70*t430*t540;
  out_ptr[266] = data12*x266*2.0-t63*t65*t430*t540;
  out_ptr[267] = data12*x267*2.0-t63*t71*t430*t540;
  out_ptr[268] = data12*x268*2.0-t59*t63*t430*t540;
  out_ptr[269] = data12*x269*2.0-t63*t70*t430*t540;
  out_ptr[270] = data12*x270*2.0-t64*t71*t430*t540;
  out_ptr[271] = data12*x271*2.0-t59*t64*t430*t540;
  out_ptr[272] = data12*x272*2.0-t64*t70*t430*t540;
  out_ptr[273] = data12*x273*2.0-t59*t68*t430*t540;
  out_ptr[274] = data12*x274*2.0-t68*t70*t430*t540;
  out_ptr[275] = data12*x275*2.0-t69*t70*t430*t540;
  out_ptr[276] = data12*t101*2.0-data13*t618-t497*t540*(t101*t462-1.0);
  out_ptr[277] = -data13*t138+data12*t620*2.0-t497*t540*(t74*t76*t138-1.0);
  out_ptr[278] = -data13*t139+data12*t622*2.0-t497*t540*(t78*t85*t139-1.0);
  out_ptr[279] = -data13*t140+data12*t624*2.0-t497*t540*(t79*t91*t140-1.0);
  out_ptr[280] = -data13*t141+data12*t626*2.0-t497*t540*(t80*t84*t141-1.0);
  out_ptr[281] = -data13*t142+data12*t628*2.0-t497*t540*(t81*t90*t142-1.0);
  out_ptr[282] = -data13*t143+data12*t630*2.0-t497*t540*(t82*t83*t143-1.0);
  out_ptr[283] = -data13*t144+data12*t632*2.0-t497*t540*(t86*t89*t144-1.0);
  out_ptr[284] = -data13*t145+data12*t634*2.0-t497*t540*(t77*t87*t145-1.0);
  out_ptr[285] = -data13*t146+data12*t636*2.0-t497*t540*(t88*t146*t472-1.0);
  out_ptr[286] = data12*x286*2.0-t74*t75*t497*t540;
  out_ptr[287] = data12*x287*2.0-t75*t85*t497*t540;
  out_ptr[288] = data12*x288*2.0-t75*t91*t497*t540;
  out_ptr[289] = data12*x289*2.0-t75*t84*t497*t540;
  out_ptr[290] = data12*x290*2.0-t75*t90*t497*t540;
  out_ptr[291] = data12*x291*2.0-t75*t83*t497*t540;
  out_ptr[292] = data12*x292*2.0-t75*t89*t497*t540;
  out_ptr[293] = data12*x293*2.0-t75*t77*t497*t540;
  out_ptr[294] = data12*x294*2.0-t75*t88*t497*t540;
  out_ptr[295] = data12*x295*2.0-t76*t85*t497*t540;
  out_ptr[296] = data12*x296*2.0-t76*t91*t497*t540;
  out_ptr[297] = data12*x297*2.0-t76*t84*t497*t540;
  out_ptr[298] = data12*x298*2.0-t76*t90*t497*t540;
  out_ptr[299] = data12*x299*2.0-t76*t83*t497*t540;
  out_ptr[300] = data12*x300*2.0-t76*t89*t497*t540;
  out_ptr[301] = data12*x301*2.0-t76*t77*t497*t540;
  out_ptr[302] = data12*x302*2.0-t76*t88*t497*t540;
  out_ptr[303] = data12*x303*2.0-t78*t91*t497*t540;
  out_ptr[304] = data12*x304*2.0-t78*t84*t497*t540;
  out_ptr[305] = data12*x305*2.0-t78*t90*t497*t540;
  out_ptr[306] = data12*x306*2.0-t78*t83*t497*t540;
  out_ptr[307] = data12*x307*2.0-t78*t89*t497*t540;
  out_ptr[308] = data12*x308*2.0-t77*t78*t497*t540;
  out_ptr[309] = data12*x309*2.0-t78*t88*t497*t540;
  out_ptr[310] = data12*x310*2.0-t79*t84*t497*t540;
  out_ptr[311] = data12*x311*2.0-t79*t90*t497*t540;
  out_ptr[312] = data12*x312*2.0-t79*t83*t497*t540;
  out_ptr[313] = data12*x313*2.0-t79*t89*t497*t540;
  out_ptr[314] = data12*x314*2.0-t77*t79*t497*t540;
  out_ptr[315] = data12*x315*2.0-t79*t88*t497*t540;
  out_ptr[316] = data12*x316*2.0-t80*t90*t497*t540;
  out_ptr[317] = data12*x317*2.0-t80*t83*t497*t540;
  out_ptr[318] = data12*x318*2.0-t80*t89*t497*t540;
  out_ptr[319] = data12*x319*2.0-t77*t80*t497*t540;
  out_ptr[320] = data12*x320*2.0-t80*t88*t497*t540;
  out_ptr[321] = data12*x321*2.0-t81*t83*t497*t540;
  out_ptr[322] = data12*x322*2.0-t81*t89*t497*t540;
  out_ptr[323] = data12*x323*2.0-t77*t81*t497*t540;
  out_ptr[324] = data12*x324*2.0-t81*t88*t497*t540;
  out_ptr[325] = data12*x325*2.0-t82*t89*t497*t540;
  out_ptr[326] = data12*x326*2.0-t77*t82*t497*t540;
  out_ptr[327] = data12*x327*2.0-t82*t88*t497*t540;
  out_ptr[328] = data12*x328*2.0-t77*t86*t497*t540;
  out_ptr[329] = data12*x329*2.0-t86*t88*t497*t540;
  out_ptr[330] = data12*x330*2.0-t87*t88*t497*t540;

#line 39 "au_autodiff_generate_template.cpp"
        }
    } else {
        const mwSize out_step = 1;
        for(mwSize c_in = 0; c_in < in.cols; ++c_in,
                in_ptr += in.rows,
                data_ptr += data.rows,
                out_ptr += out_step) {
              /* inner loop do_jac=0 */
    double x1 = in_ptr[0];
    double x2 = in_ptr[1];
    double x3 = in_ptr[2];
    double x4 = in_ptr[3];
    double x5 = in_ptr[4];
    double x6 = in_ptr[5];
    double x7 = in_ptr[6];
    double x8 = in_ptr[7];
    double x9 = in_ptr[8];
    double x10 = in_ptr[9];
    double x11 = in_ptr[10];
    double x12 = in_ptr[11];
    double x13 = in_ptr[12];
    double x14 = in_ptr[13];
    double x15 = in_ptr[14];
    double x16 = in_ptr[15];
    double x17 = in_ptr[16];
    double x18 = in_ptr[17];
    double x19 = in_ptr[18];
    double x20 = in_ptr[19];
    double x21 = in_ptr[20];
    double x22 = in_ptr[21];
    double x23 = in_ptr[22];
    double x24 = in_ptr[23];
    double x25 = in_ptr[24];
    double x26 = in_ptr[25];
    double x27 = in_ptr[26];
    double x28 = in_ptr[27];
    double x29 = in_ptr[28];
    double x30 = in_ptr[29];
    double x31 = in_ptr[30];
    double x32 = in_ptr[31];
    double x33 = in_ptr[32];
    double x34 = in_ptr[33];
    double x35 = in_ptr[34];
    double x36 = in_ptr[35];
    double x37 = in_ptr[36];
    double x38 = in_ptr[37];
    double x39 = in_ptr[38];
    double x40 = in_ptr[39];
    double x41 = in_ptr[40];
    double x42 = in_ptr[41];
    double x43 = in_ptr[42];
    double x44 = in_ptr[43];
    double x45 = in_ptr[44];
    double x46 = in_ptr[45];
    double x47 = in_ptr[46];
    double x48 = in_ptr[47];
    double x49 = in_ptr[48];
    double x50 = in_ptr[49];
    double x51 = in_ptr[50];
    double x52 = in_ptr[51];
    double x53 = in_ptr[52];
    double x54 = in_ptr[53];
    double x55 = in_ptr[54];
    double x56 = in_ptr[55];
    double x57 = in_ptr[56];
    double x58 = in_ptr[57];
    double x59 = in_ptr[58];
    double x60 = in_ptr[59];
    double x61 = in_ptr[60];
    double x62 = in_ptr[61];
    double x63 = in_ptr[62];
    double x64 = in_ptr[63];
    double x65 = in_ptr[64];
    double x66 = in_ptr[65];
    double x67 = in_ptr[66];
    double x68 = in_ptr[67];
    double x69 = in_ptr[68];
    double x70 = in_ptr[69];
    double x71 = in_ptr[70];
    double x72 = in_ptr[71];
    double x73 = in_ptr[72];
    double x74 = in_ptr[73];
    double x75 = in_ptr[74];
    double x76 = in_ptr[75];
    double x77 = in_ptr[76];
    double x78 = in_ptr[77];
    double x79 = in_ptr[78];
    double x80 = in_ptr[79];
    double x81 = in_ptr[80];
    double x82 = in_ptr[81];
    double x83 = in_ptr[82];
    double x84 = in_ptr[83];
    double x85 = in_ptr[84];
    double x86 = in_ptr[85];
    double x87 = in_ptr[86];
    double x88 = in_ptr[87];
    double x89 = in_ptr[88];
    double x90 = in_ptr[89];
    double x91 = in_ptr[90];
    double x92 = in_ptr[91];
    double x93 = in_ptr[92];
    double x94 = in_ptr[93];
    double x95 = in_ptr[94];
    double x96 = in_ptr[95];
    double x97 = in_ptr[96];
    double x98 = in_ptr[97];
    double x99 = in_ptr[98];
    double x100 = in_ptr[99];
    double x101 = in_ptr[100];
    double x102 = in_ptr[101];
    double x103 = in_ptr[102];
    double x104 = in_ptr[103];
    double x105 = in_ptr[104];
    double x106 = in_ptr[105];
    double x107 = in_ptr[106];
    double x108 = in_ptr[107];
    double x109 = in_ptr[108];
    double x110 = in_ptr[109];
    double x111 = in_ptr[110];
    double x112 = in_ptr[111];
    double x113 = in_ptr[112];
    double x114 = in_ptr[113];
    double x115 = in_ptr[114];
    double x116 = in_ptr[115];
    double x117 = in_ptr[116];
    double x118 = in_ptr[117];
    double x119 = in_ptr[118];
    double x120 = in_ptr[119];
    double x121 = in_ptr[120];
    double x122 = in_ptr[121];
    double x123 = in_ptr[122];
    double x124 = in_ptr[123];
    double x125 = in_ptr[124];
    double x126 = in_ptr[125];
    double x127 = in_ptr[126];
    double x128 = in_ptr[127];
    double x129 = in_ptr[128];
    double x130 = in_ptr[129];
    double x131 = in_ptr[130];
    double x132 = in_ptr[131];
    double x133 = in_ptr[132];
    double x134 = in_ptr[133];
    double x135 = in_ptr[134];
    double x136 = in_ptr[135];
    double x137 = in_ptr[136];
    double x138 = in_ptr[137];
    double x139 = in_ptr[138];
    double x140 = in_ptr[139];
    double x141 = in_ptr[140];
    double x142 = in_ptr[141];
    double x143 = in_ptr[142];
    double x144 = in_ptr[143];
    double x145 = in_ptr[144];
    double x146 = in_ptr[145];
    double x147 = in_ptr[146];
    double x148 = in_ptr[147];
    double x149 = in_ptr[148];
    double x150 = in_ptr[149];
    double x151 = in_ptr[150];
    double x152 = in_ptr[151];
    double x153 = in_ptr[152];
    double x154 = in_ptr[153];
    double x155 = in_ptr[154];
    double x156 = in_ptr[155];
    double x157 = in_ptr[156];
    double x158 = in_ptr[157];
    double x159 = in_ptr[158];
    double x160 = in_ptr[159];
    double x161 = in_ptr[160];
    double x162 = in_ptr[161];
    double x163 = in_ptr[162];
    double x164 = in_ptr[163];
    double x165 = in_ptr[164];
    double x166 = in_ptr[165];
    double x167 = in_ptr[166];
    double x168 = in_ptr[167];
    double x169 = in_ptr[168];
    double x170 = in_ptr[169];
    double x171 = in_ptr[170];
    double x172 = in_ptr[171];
    double x173 = in_ptr[172];
    double x174 = in_ptr[173];
    double x175 = in_ptr[174];
    double x176 = in_ptr[175];
    double x177 = in_ptr[176];
    double x178 = in_ptr[177];
    double x179 = in_ptr[178];
    double x180 = in_ptr[179];
    double x181 = in_ptr[180];
    double x182 = in_ptr[181];
    double x183 = in_ptr[182];
    double x184 = in_ptr[183];
    double x185 = in_ptr[184];
    double x186 = in_ptr[185];
    double x187 = in_ptr[186];
    double x188 = in_ptr[187];
    double x189 = in_ptr[188];
    double x190 = in_ptr[189];
    double x191 = in_ptr[190];
    double x192 = in_ptr[191];
    double x193 = in_ptr[192];
    double x194 = in_ptr[193];
    double x195 = in_ptr[194];
    double x196 = in_ptr[195];
    double x197 = in_ptr[196];
    double x198 = in_ptr[197];
    double x199 = in_ptr[198];
    double x200 = in_ptr[199];
    double x201 = in_ptr[200];
    double x202 = in_ptr[201];
    double x203 = in_ptr[202];
    double x204 = in_ptr[203];
    double x205 = in_ptr[204];
    double x206 = in_ptr[205];
    double x207 = in_ptr[206];
    double x208 = in_ptr[207];
    double x209 = in_ptr[208];
    double x210 = in_ptr[209];
    double x211 = in_ptr[210];
    double x212 = in_ptr[211];
    double x213 = in_ptr[212];
    double x214 = in_ptr[213];
    double x215 = in_ptr[214];
    double x216 = in_ptr[215];
    double x217 = in_ptr[216];
    double x218 = in_ptr[217];
    double x219 = in_ptr[218];
    double x220 = in_ptr[219];
    double x221 = in_ptr[220];
    double x222 = in_ptr[221];
    double x223 = in_ptr[222];
    double x224 = in_ptr[223];
    double x225 = in_ptr[224];
    double x226 = in_ptr[225];
    double x227 = in_ptr[226];
    double x228 = in_ptr[227];
    double x229 = in_ptr[228];
    double x230 = in_ptr[229];
    double x231 = in_ptr[230];
    double x232 = in_ptr[231];
    double x233 = in_ptr[232];
    double x234 = in_ptr[233];
    double x235 = in_ptr[234];
    double x236 = in_ptr[235];
    double x237 = in_ptr[236];
    double x238 = in_ptr[237];
    double x239 = in_ptr[238];
    double x240 = in_ptr[239];
    double x241 = in_ptr[240];
    double x242 = in_ptr[241];
    double x243 = in_ptr[242];
    double x244 = in_ptr[243];
    double x245 = in_ptr[244];
    double x246 = in_ptr[245];
    double x247 = in_ptr[246];
    double x248 = in_ptr[247];
    double x249 = in_ptr[248];
    double x250 = in_ptr[249];
    double x251 = in_ptr[250];
    double x252 = in_ptr[251];
    double x253 = in_ptr[252];
    double x254 = in_ptr[253];
    double x255 = in_ptr[254];
    double x256 = in_ptr[255];
    double x257 = in_ptr[256];
    double x258 = in_ptr[257];
    double x259 = in_ptr[258];
    double x260 = in_ptr[259];
    double x261 = in_ptr[260];
    double x262 = in_ptr[261];
    double x263 = in_ptr[262];
    double x264 = in_ptr[263];
    double x265 = in_ptr[264];
    double x266 = in_ptr[265];
    double x267 = in_ptr[266];
    double x268 = in_ptr[267];
    double x269 = in_ptr[268];
    double x270 = in_ptr[269];
    double x271 = in_ptr[270];
    double x272 = in_ptr[271];
    double x273 = in_ptr[272];
    double x274 = in_ptr[273];
    double x275 = in_ptr[274];
    double x276 = in_ptr[275];
    double x277 = in_ptr[276];
    double x278 = in_ptr[277];
    double x279 = in_ptr[278];
    double x280 = in_ptr[279];
    double x281 = in_ptr[280];
    double x282 = in_ptr[281];
    double x283 = in_ptr[282];
    double x284 = in_ptr[283];
    double x285 = in_ptr[284];
    double x286 = in_ptr[285];
    double x287 = in_ptr[286];
    double x288 = in_ptr[287];
    double x289 = in_ptr[288];
    double x290 = in_ptr[289];
    double x291 = in_ptr[290];
    double x292 = in_ptr[291];
    double x293 = in_ptr[292];
    double x294 = in_ptr[293];
    double x295 = in_ptr[294];
    double x296 = in_ptr[295];
    double x297 = in_ptr[296];
    double x298 = in_ptr[297];
    double x299 = in_ptr[298];
    double x300 = in_ptr[299];
    double x301 = in_ptr[300];
    double x302 = in_ptr[301];
    double x303 = in_ptr[302];
    double x304 = in_ptr[303];
    double x305 = in_ptr[304];
    double x306 = in_ptr[305];
    double x307 = in_ptr[306];
    double x308 = in_ptr[307];
    double x309 = in_ptr[308];
    double x310 = in_ptr[309];
    double x311 = in_ptr[310];
    double x312 = in_ptr[311];
    double x313 = in_ptr[312];
    double x314 = in_ptr[313];
    double x315 = in_ptr[314];
    double x316 = in_ptr[315];
    double x317 = in_ptr[316];
    double x318 = in_ptr[317];
    double x319 = in_ptr[318];
    double x320 = in_ptr[319];
    double x321 = in_ptr[320];
    double x322 = in_ptr[321];
    double x323 = in_ptr[322];
    double x324 = in_ptr[323];
    double x325 = in_ptr[324];
    double x326 = in_ptr[325];
    double x327 = in_ptr[326];
    double x328 = in_ptr[327];
    double x329 = in_ptr[328];
    double x330 = in_ptr[329];
    double data1 = data_ptr[0];
    double data2 = data_ptr[1];
    double data3 = data_ptr[2];
    double data4 = data_ptr[3];
    double data5 = data_ptr[4];
    double data6 = data_ptr[5];
    double data7 = data_ptr[6];
    double data8 = data_ptr[7];
    double data9 = data_ptr[8];
    double data10 = data_ptr[9];
    double data11 = data_ptr[10];
    double data12 = data_ptr[11];
    double data13 = data_ptr[12];
    double t3 = data1-x6;
    double t4 = data2-x7;
    double t102 = exp(x57);
    double t2 = t4*t102+t3*x66;
    double t6 = data3-x8;
    double t7 = data4-x9;
    double t8 = data5-x10;
    double t9 = data6-x11;
    double t10 = data7-x12;
    double t14 = data8-x13;
    double t15 = data9-x14;
    double t109 = exp(x64);
    double t5 = t15*t109+t3*x73+t4*x81+t6*x88+t7*x94+t8*x99+t9*x103+t10*x106+t14*x108;
    double t107 = exp(x62);
    double t11 = t10*t107+t3*x71+t4*x79+t6*x86+t7*x92+t8*x97+t9*x101;
    double t105 = exp(x60);
    double t12 = t8*t105+t3*x69+t4*x77+t6*x84+t7*x90;
    double t103 = exp(x58);
    double t13 = t6*t103+t3*x67+t4*x75;
    double t110 = exp(x65);
    double t16 = t3*x74+t4*x82+t6*x89+t7*x95+t8*x100+t9*x104+t10*x107+t14*x109+t15*x110+t110*(data10-x15);
    double t108 = exp(x63);
    double t17 = t14*t108+t3*x72+t4*x80+t6*x87+t7*x93+t8*x98+t9*x102+t10*x105;
    double t106 = exp(x61);
    double t18 = t9*t106+t3*x70+t4*x78+t6*x85+t7*x91+t8*x96;
    double t104 = exp(x59);
    double t19 = t7*t104+t3*x68+t4*x76+t6*x83;
    double t21 = data1-x16;
    double t22 = data2-x17;
    double t111 = exp(x112);
    double t20 = t22*t111+t21*x121;
    double t24 = data3-x18;
    double t25 = data4-x19;
    double t26 = data5-x20;
    double t27 = data6-x21;
    double t28 = data7-x22;
    double t32 = data8-x23;
    double t33 = data9-x24;
    double t118 = exp(x119);
    double t23 = t33*t118+t21*x128+t22*x136+t24*x143+t25*x149+t26*x154+t27*x158+t28*x161+t32*x163;
    double t116 = exp(x117);
    double t29 = t28*t116+t21*x126+t22*x134+t24*x141+t25*x147+t26*x152+t27*x156;
    double t114 = exp(x115);
    double t30 = t26*t114+t21*x124+t22*x132+t24*x139+t25*x145;
    double t112 = exp(x113);
    double t31 = t24*t112+t21*x122+t22*x130;
    double t119 = exp(x120);
    double t34 = t21*x129+t22*x137+t24*x144+t25*x150+t26*x155+t27*x159+t28*x162+t32*x164+t33*x165+t119*(data10-x25);
    double t117 = exp(x118);
    double t35 = t32*t117+t21*x127+t22*x135+t24*x142+t25*x148+t26*x153+t27*x157+t28*x160;
    double t115 = exp(x116);
    double t36 = t27*t115+t21*x125+t22*x133+t24*x140+t25*x146+t26*x151;
    double t113 = exp(x114);
    double t37 = t25*t113+t21*x123+t22*x131+t24*x138;
    double t39 = data1-x26;
    double t40 = data2-x27;
    double t120 = exp(x167);
    double t38 = t40*t120+t39*x176;
    double t42 = data3-x28;
    double t43 = data4-x29;
    double t44 = data5-x30;
    double t45 = data6-x31;
    double t46 = data7-x32;
    double t50 = data8-x33;
    double t51 = data9-x34;
    double t127 = exp(x174);
    double t41 = t51*t127+t39*x183+t40*x191+t42*x198+t43*x204+t44*x209+t45*x213+t46*x216+t50*x218;
    double t125 = exp(x172);
    double t47 = t46*t125+t39*x181+t40*x189+t42*x196+t43*x202+t44*x207+t45*x211;
    double t123 = exp(x170);
    double t48 = t44*t123+t39*x179+t40*x187+t42*x194+t43*x200;
    double t121 = exp(x168);
    double t49 = t42*t121+t39*x177+t40*x185;
    double t128 = exp(x175);
    double t52 = t39*x184+t40*x192+t42*x199+t43*x205+t44*x210+t45*x214+t46*x217+t50*x219+t51*x220+t128*(data10-x35);
    double t126 = exp(x173);
    double t53 = t50*t126+t39*x182+t40*x190+t42*x197+t43*x203+t44*x208+t45*x212+t46*x215;
    double t124 = exp(x171);
    double t54 = t45*t124+t39*x180+t40*x188+t42*x195+t43*x201+t44*x206;
    double t122 = exp(x169);
    double t55 = t43*t122+t39*x178+t40*x186+t42*x193;
    double t57 = data1-x36;
    double t58 = data2-x37;
    double t129 = exp(x222);
    double t56 = t58*t129+t57*x231;
    double t60 = data3-x38;
    double t61 = data4-x39;
    double t62 = data5-x40;
    double t63 = data6-x41;
    double t64 = data7-x42;
    double t68 = data8-x43;
    double t69 = data9-x44;
    double t136 = exp(x229);
    double t59 = t69*t136+t57*x238+t58*x246+t60*x253+t61*x259+t62*x264+t63*x268+t64*x271+t68*x273;
    double t134 = exp(x227);
    double t65 = t64*t134+t57*x236+t58*x244+t60*x251+t61*x257+t62*x262+t63*x266;
    double t132 = exp(x225);
    double t66 = t62*t132+t57*x234+t58*x242+t60*x249+t61*x255;
    double t130 = exp(x223);
    double t67 = t60*t130+t57*x232+t58*x240;
    double t137 = exp(x230);
    double t70 = t57*x239+t58*x247+t60*x254+t61*x260+t62*x265+t63*x269+t64*x272+t68*x274+t69*x275+t137*(data10-x45);
    double t135 = exp(x228);
    double t71 = t68*t135+t57*x237+t58*x245+t60*x252+t61*x258+t62*x263+t63*x267+t64*x270;
    double t133 = exp(x226);
    double t72 = t63*t133+t57*x235+t58*x243+t60*x250+t61*x256+t62*x261;
    double t131 = exp(x224);
    double t73 = t61*t131+t57*x233+t58*x241+t60*x248;
    double t75 = data1-x46;
    double t76 = data2-x47;
    double t138 = exp(x277);
    double t74 = t76*t138+t75*x286;
    double t78 = data3-x48;
    double t79 = data4-x49;
    double t80 = data5-x50;
    double t81 = data6-x51;
    double t82 = data7-x52;
    double t86 = data8-x53;
    double t87 = data9-x54;
    double t145 = exp(x284);
    double t77 = t87*t145+t75*x293+t76*x301+t78*x308+t79*x314+t80*x319+t81*x323+t82*x326+t86*x328;
    double t143 = exp(x282);
    double t83 = t82*t143+t75*x291+t76*x299+t78*x306+t79*x312+t80*x317+t81*x321;
    double t141 = exp(x280);
    double t84 = t80*t141+t75*x289+t76*x297+t78*x304+t79*x310;
    double t139 = exp(x278);
    double t85 = t78*t139+t75*x287+t76*x295;
    double t146 = exp(x285);
    double t88 = t75*x294+t76*x302+t78*x309+t79*x315+t80*x320+t81*x324+t82*x327+t86*x329+t87*x330+t146*(data10-x55);
    double t144 = exp(x283);
    double t89 = t86*t144+t75*x292+t76*x300+t78*x307+t79*x313+t80*x318+t81*x322+t82*x325;
    double t142 = exp(x281);
    double t90 = t81*t142+t75*x290+t76*x298+t78*x305+t79*x311+t80*x316;
    double t140 = exp(x279);
    double t91 = t79*t140+t75*x288+t76*x296+t78*x303;
    double t92 = x56*2.0;
    double t93 = exp(t92);
    double t94 = x111*2.0;
    double t95 = exp(t94);
    double t96 = x166*2.0;
    double t97 = exp(t96);
    double t98 = x221*2.0;
    double t99 = exp(t98);
    double t100 = x276*2.0;
    double t101 = exp(t100);
    out_ptr[0] = data11-log(exp(x1)+exp(x2)+exp(x3)+exp(x4)+exp(x5))+log(exp(-data11+x1+x56+x57+x58+x59+x60+x61+x62+x63+x64+x65-(t3*t3)*t93*(1.0/2.0)-(t2*t2)*(1.0/2.0)-(t5*t5)*(1.0/2.0)-(t11*t11)*(1.0/2.0)-(t12*t12)*(1.0/2.0)-(t13*t13)*(1.0/2.0)-(t16*t16)*(1.0/2.0)-(t17*t17)*(1.0/2.0)-(t18*t18)*(1.0/2.0)-(t19*t19)*(1.0/2.0))+exp(-data11+x2+x111+x112+x113+x114+x115+x116+x117+x118+x119+x120-(t21*t21)*t95*(1.0/2.0)-(t20*t20)*(1.0/2.0)-(t23*t23)*(1.0/2.0)-(t29*t29)*(1.0/2.0)-(t30*t30)*(1.0/2.0)-(t31*t31)*(1.0/2.0)-(t34*t34)*(1.0/2.0)-(t35*t35)*(1.0/2.0)-(t36*t36)*(1.0/2.0)-(t37*t37)*(1.0/2.0))+exp(-data11+x3+x166+x167+x168+x169+x170+x171+x172+x173+x174+x175-(t39*t39)*t97*(1.0/2.0)-(t38*t38)*(1.0/2.0)-(t41*t41)*(1.0/2.0)-(t47*t47)*(1.0/2.0)-(t48*t48)*(1.0/2.0)-(t49*t49)*(1.0/2.0)-(t52*t52)*(1.0/2.0)-(t53*t53)*(1.0/2.0)-(t54*t54)*(1.0/2.0)-(t55*t55)*(1.0/2.0))+exp(-data11+x4+x221+x222+x223+x224+x225+x226+x227+x228+x229+x230-(t57*t57)*t99*(1.0/2.0)-(t56*t56)*(1.0/2.0)-(t59*t59)*(1.0/2.0)-(t65*t65)*(1.0/2.0)-(t66*t66)*(1.0/2.0)-(t67*t67)*(1.0/2.0)-(t70*t70)*(1.0/2.0)-(t71*t71)*(1.0/2.0)-(t72*t72)*(1.0/2.0)-(t73*t73)*(1.0/2.0))+exp(-data11+x5+x276+x277+x278+x279+x280+x281+x282+x283+x284+x285-(t75*t75)*t101*(1.0/2.0)-(t74*t74)*(1.0/2.0)-(t77*t77)*(1.0/2.0)-(t83*t83)*(1.0/2.0)-(t84*t84)*(1.0/2.0)-(t85*t85)*(1.0/2.0)-(t88*t88)*(1.0/2.0)-(t89*t89)*(1.0/2.0)-(t90*t90)*(1.0/2.0)-(t91*t91)*(1.0/2.0)))-data13*(t102+t103+t104+t105+t106+t107+t108+t109+t110+exp(x56))-data13*(t111+t112+t113+t114+t115+t116+t117+t118+t119+exp(x111))-data13*(t120+t121+t122+t123+t124+t125+t126+t127+t128+exp(x166))-data13*(t129+t130+t131+t132+t133+t134+t135+t136+t137+exp(x221))-data13*(t138+t139+t140+t141+t142+t143+t144+t145+t146+exp(x276))+data12*(t93+exp(x57*2.0)+exp(x58*2.0)+exp(x59*2.0)+exp(x60*2.0)+exp(x61*2.0)+exp(x62*2.0)+exp(x63*2.0)+exp(x64*2.0)+exp(x65*2.0)+x66*x66+x67*x67+x68*x68+x69*x69+x70*x70+x71*x71+x72*x72+x73*x73+x74*x74+x75*x75+x76*x76+x77*x77+x78*x78+x79*x79+x80*x80+x81*x81+x82*x82+x83*x83+x84*x84+x85*x85+x86*x86+x87*x87+x88*x88+x89*x89+x90*x90+x91*x91+x92*x92+x93*x93+x94*x94+x95*x95+x96*x96+x97*x97+x98*x98+x99*x99+x100*x100+x101*x101+x102*x102+x103*x103+x104*x104+x105*x105+x106*x106+x107*x107+x108*x108+x109*x109+x110*x110)+data12*(t95+exp(x112*2.0)+exp(x113*2.0)+exp(x114*2.0)+exp(x115*2.0)+exp(x116*2.0)+exp(x117*2.0)+exp(x118*2.0)+exp(x119*2.0)+exp(x120*2.0)+x121*x121+x122*x122+x123*x123+x124*x124+x125*x125+x126*x126+x127*x127+x128*x128+x129*x129+x130*x130+x131*x131+x132*x132+x133*x133+x134*x134+x135*x135+x136*x136+x137*x137+x138*x138+x139*x139+x140*x140+x141*x141+x142*x142+x143*x143+x144*x144+x145*x145+x146*x146+x147*x147+x148*x148+x149*x149+x150*x150+x151*x151+x152*x152+x153*x153+x154*x154+x155*x155+x156*x156+x157*x157+x158*x158+x159*x159+x160*x160+x161*x161+x162*x162+x163*x163+x164*x164+x165*x165)+data12*(t97+exp(x167*2.0)+exp(x168*2.0)+exp(x169*2.0)+exp(x170*2.0)+exp(x171*2.0)+exp(x172*2.0)+exp(x173*2.0)+exp(x174*2.0)+exp(x175*2.0)+x176*x176+x177*x177+x178*x178+x179*x179+x180*x180+x181*x181+x182*x182+x183*x183+x184*x184+x185*x185+x186*x186+x187*x187+x188*x188+x189*x189+x190*x190+x191*x191+x192*x192+x193*x193+x194*x194+x195*x195+x196*x196+x197*x197+x198*x198+x199*x199+x200*x200+x201*x201+x202*x202+x203*x203+x204*x204+x205*x205+x206*x206+x207*x207+x208*x208+x209*x209+x210*x210+x211*x211+x212*x212+x213*x213+x214*x214+x215*x215+x216*x216+x217*x217+x218*x218+x219*x219+x220*x220)+data12*(t99+exp(x222*2.0)+exp(x223*2.0)+exp(x224*2.0)+exp(x225*2.0)+exp(x226*2.0)+exp(x227*2.0)+exp(x228*2.0)+exp(x229*2.0)+exp(x230*2.0)+x231*x231+x232*x232+x233*x233+x234*x234+x235*x235+x236*x236+x237*x237+x238*x238+x239*x239+x240*x240+x241*x241+x242*x242+x243*x243+x244*x244+x245*x245+x246*x246+x247*x247+x248*x248+x249*x249+x250*x250+x251*x251+x252*x252+x253*x253+x254*x254+x255*x255+x256*x256+x257*x257+x258*x258+x259*x259+x260*x260+x261*x261+x262*x262+x263*x263+x264*x264+x265*x265+x266*x266+x267*x267+x268*x268+x269*x269+x270*x270+x271*x271+x272*x272+x273*x273+x274*x274+x275*x275)+data12*(t101+exp(x277*2.0)+exp(x278*2.0)+exp(x279*2.0)+exp(x280*2.0)+exp(x281*2.0)+exp(x282*2.0)+exp(x283*2.0)+exp(x284*2.0)+exp(x285*2.0)+x286*x286+x287*x287+x288*x288+x289*x289+x290*x290+x291*x291+x292*x292+x293*x293+x294*x294+x295*x295+x296*x296+x297*x297+x298*x298+x299*x299+x300*x300+x301*x301+x302*x302+x303*x303+x304*x304+x305*x305+x306*x306+x307*x307+x308*x308+x309*x309+x310*x310+x311*x311+x312*x312+x313*x313+x314*x314+x315*x315+x316*x316+x317*x317+x318*x318+x319*x319+x320*x320+x321*x321+x322*x322+x323*x323+x324*x324+x325*x325+x326*x326+x327*x327+x328*x328+x329*x329+x330*x330);

#line 48 "au_autodiff_generate_template.cpp"
        }
    }
    
    outs[0] = out;
}
